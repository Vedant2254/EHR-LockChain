{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Contract__NotAdmin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__NotDoctor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__NotPatient",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "addDoctor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "addPatient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "changeEditorAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_public_key",
          "type": "string"
        }
      ],
      "name": "confirmAddDr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllDrs",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllPats",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDocPats",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getDrHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getDrPubKey",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPatDr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPatGeneralHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getPatRecordHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPatViewers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "grantViewerAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isDoctor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isPatient",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "removeEditorAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "revokeViewerAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "setDrHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "setPatGeneralHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "setPatRecordHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x40da763f7ffe5d394311ed2a31f376afeb8875f7470bbd956d32081cd2f6c1f9",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "2756657",
    "logsBloom": "0x
    "blockHash": "0x7b082457fe97b5b88a3412811c58a6214bafc416d376842fa75292607512e1df",
    "transactionHash": "0x40da763f7ffe5d394311ed2a31f376afeb8875f7470bbd956d32081cd2f6c1f9",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "2756657",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "5c66940dfffca295aac69142e2ec2364",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Contract__NotAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__NotDoctor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__NotPatient\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"addDoctor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"addPatient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"changeEditorAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_public_key\",\"type\":\"string\"}],\"name\":\"confirmAddDr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllDrs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPats\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDocPats\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getDrHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getDrPubKey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPatDr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPatGeneralHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getPatRecordHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPatViewers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"grantViewerAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isDoctor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isPatient\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeEditorAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"revokeViewerAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setDrHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setPatGeneralHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setPatRecordHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Contract.sol\":\"Contract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AddToBoolMapping.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary AddToBoolMapping {\\n    // mapping address => bool\\n    struct Map {\\n        address[] keys;\\n        mapping(address => bool) values;\\n        mapping(address => uint256) indexOf;\\n    }\\n\\n    function get(Map storage map, address key) internal view returns (bool) {\\n        return map.values[key];\\n    }\\n\\n    function getKeys(Map storage map) internal view returns (address[] memory) {\\n        return map.keys;\\n    }\\n\\n    function getKeyAtIndex(Map storage map, uint256 index) internal view returns (address) {\\n        return map.keys[index];\\n    }\\n\\n    function size(Map storage map) internal view returns (uint256) {\\n        return map.keys.length;\\n    }\\n\\n    function set(Map storage map, address key) internal {\\n        if (map.values[key]) return;\\n\\n        // add address => true mapping to values\\n        map.values[key] = true;\\n\\n        // add index of address to indexOf mapping\\n        map.indexOf[key] = map.keys.length;\\n\\n        // add address to keys\\n        map.keys.push(key);\\n    }\\n\\n    function unset(Map storage map, address key) internal {\\n        if (!map.values[key]) return;\\n\\n        // remove from values\\n        delete map.values[key];\\n\\n        // important backups\\n        uint256 index = map.indexOf[key];\\n        uint256 lastIndex = map.keys.length - 1;\\n        address lastKey = map.keys[lastIndex];\\n\\n        // update indexOf last element\\n        map.indexOf[lastKey] = index;\\n        delete map.indexOf[key];\\n\\n        // remove from keys\\n        map.keys[index] = lastKey;\\n        map.keys.pop();\\n    }\\n}\\n\",\"keccak256\":\"0xf4944f25058b889d9bebf1d53283eab488e3200f3e2a48e47f52849b113644cc\",\"license\":\"MIT\"},\"contracts/AddToStrMapping.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary AddToStrMapping {\\n    // mapping address => bool\\n    struct Map {\\n        address[] keys;\\n        mapping(address => string) values;\\n        mapping(address => uint256) indexOf;\\n        mapping(address => bool) inserted;\\n    }\\n\\n    function get(Map storage map, address key) internal view returns (string memory) {\\n        return map.values[key];\\n    }\\n\\n    function getKeys(Map storage map) internal view returns (address[] memory) {\\n        return map.keys;\\n    }\\n\\n    function getKeyAtIndex(Map storage map, uint256 index) internal view returns (address) {\\n        return map.keys[index];\\n    }\\n\\n    function size(Map storage map) internal view returns (uint256) {\\n        return map.keys.length;\\n    }\\n\\n    function set(Map storage map, address key, string memory val) internal {\\n        if (!map.inserted[key]) {\\n            // add index of address to indexOf mapping\\n            map.indexOf[key] = map.keys.length;\\n\\n            // make value of address in inserted to true\\n            map.inserted[key] = true;\\n\\n            // add address to keys\\n            map.keys.push(key);\\n        }\\n\\n        // add address => true mapping to values\\n        map.values[key] = val;\\n    }\\n\\n    function remove(Map storage map, address key) internal {\\n        if (!map.inserted[key]) return;\\n\\n        // remove from values\\n        delete map.values[key];\\n        delete map.inserted[key];\\n\\n        // important backups\\n        uint256 index = map.indexOf[key];\\n        uint256 lastIndex = map.keys.length - 1;\\n        address lastKey = map.keys[lastIndex];\\n\\n        // update indexOf last element\\n        map.indexOf[lastKey] = index;\\n        delete map.indexOf[key];\\n\\n        // remove from keys\\n        map.keys[index] = lastKey;\\n        map.keys.pop();\\n    }\\n}\\n\",\"keccak256\":\"0xe1c2fb43223f9c912cbe283066516ff7351e1e717a41271ef770b5d3886dbdc4\",\"license\":\"MIT\"},\"contracts/AddressArrayUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary AddressArrayUtils {\\n    function indexOf(address[] memory arr, address key) internal pure returns (int256) {\\n        for (uint256 i = 0; i < arr.length; i++) {\\n            if (arr[i] == key) return int256(i);\\n        }\\n        return -1;\\n    }\\n\\n    function contains(address[] memory arr, address key) internal pure returns (bool) {\\n        return indexOf(arr, key) != -1;\\n    }\\n\\n    function remove(address[] storage arr, address key) internal returns (bool) {\\n        int256 i = indexOf(arr, key);\\n\\n        if (i == -1) return false;\\n\\n        address[] memory temp = arr;\\n        arr[uint256(i)] = temp[temp.length - 1];\\n        arr.pop();\\n\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x29555ad812fd5509ead59914b9bc59285a5f7b96bedcfed493bca55994271d67\",\"license\":\"MIT\"},\"contracts/Contract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"./Roles.sol\\\";\\nimport \\\"./AddressArrayUtils.sol\\\";\\nimport \\\"./AddToBoolMapping.sol\\\";\\n\\nerror Contract__NotAdmin();\\nerror Contract__NotDoctor();\\nerror Contract__NotPatient();\\n\\ncontract Contract {\\n    // using methods of Roles for Role struct in Roles\\n    using Roles for Roles.Role;\\n    using AddToBoolMapping for AddToBoolMapping.Map;\\n    using AddressArrayUtils for address[];\\n\\n    struct MedicalRecord {\\n        address editor;\\n        address[] viewers;\\n        string data_hash;\\n    }\\n\\n    struct Patients {\\n        Roles.Role users;\\n        mapping(address => MedicalRecord) records;\\n    }\\n\\n    struct Doctors {\\n        Roles.Role users;\\n        mapping(address => string) public_keys;\\n        mapping(address => AddToBoolMapping.Map) docToPatAccess;\\n    }\\n\\n    // defining roles - contains hashes\\n    Roles.Role private admin;\\n    Doctors private doctors;\\n    Patients private patients;\\n\\n    // Initializing admin\\n    constructor() {\\n        admin.add(msg.sender, \\\"null\\\");\\n    }\\n\\n    // Admin methods\\n    function getAdmin() public view returns (address) {\\n        address admin_id = admin.getMembers()[0];\\n        return admin_id;\\n    }\\n\\n    function isAdmin(address _address) public view returns (bool) {\\n        return admin.has(_address);\\n    }\\n\\n    // Doctor methods\\n    function isDoctor(address _address) public view returns (bool) {\\n        return doctors.users.has(_address) && bytes(doctors.public_keys[_address]).length != 0;\\n    }\\n\\n    function addDoctor(address _address, string memory _hash) public onlyAdmin {\\n        if (bytes(_hash).length == 0) revert(\\\"Contract: Empty hash is not allowed!\\\");\\n        doctors.users.add(_address, _hash);\\n    }\\n\\n    function confirmAddDr(string memory _public_key) public onlyDoctor {\\n        if (bytes(_public_key).length == 0) revert(\\\"Contract: Empty public key is not allowed!\\\");\\n        doctors.public_keys[msg.sender] = _public_key;\\n    }\\n\\n    function setDrHash(address _address, string memory _hash) public onlyAdmin {\\n        doctors.users.setHash(_address, _hash);\\n    }\\n\\n    function getDrHash(address _address) public view returns (string memory) {\\n        if (!isDoctor(_address)) revert Contract__NotDoctor();\\n        return doctors.users.getHash(_address);\\n    }\\n\\n    function getDrPubKey(address _address) public view returns (string memory) {\\n        return doctors.public_keys[_address];\\n    }\\n\\n    function getAllDrs() public view returns (address[] memory) {\\n        return doctors.users.getMembers();\\n    }\\n\\n    function getDocPats() public view onlyDoctor returns (address[] memory) {\\n        return doctors.docToPatAccess[msg.sender].keys;\\n    }\\n\\n    // Patient methods\\n    function isPatient(address _address) public view returns (bool) {\\n        return patients.users.has(_address);\\n    }\\n\\n    function addPatient(string memory _hash) public {\\n        if (bytes(_hash).length == 0) revert(\\\"Contract: Empty hash is not allowed\\\");\\n        patients.users.add(msg.sender, _hash);\\n    }\\n\\n    function setPatGeneralHash(string memory _hash) public onlyPatient {\\n        patients.users.setHash(msg.sender, _hash);\\n    }\\n\\n    function getPatGeneralHash() public view returns (string memory) {\\n        return patients.users.getHash(msg.sender);\\n    }\\n\\n    function setPatRecordHash(address _address, string memory _hash) public onlyDoctor {\\n        if (!isPatient(_address)) revert Contract__NotPatient();\\n        if (patients.records[_address].editor != msg.sender) revert(\\\"Not Allowed\\\");\\n        patients.records[_address].data_hash = _hash;\\n    }\\n\\n    function getPatRecordHash(address _address) public view returns (string memory) {\\n        if (!isPatient(_address)) revert Contract__NotPatient();\\n\\n        if (\\n            msg.sender == _address ||\\n            patients.records[_address].editor == msg.sender ||\\n            patients.records[_address].viewers.indexOf(msg.sender) != -1\\n        ) return patients.records[_address].data_hash;\\n\\n        revert(\\\"Not Allowed\\\");\\n    }\\n\\n    function getAllPats() public view returns (address[] memory) {\\n        return patients.users.getMembers();\\n    }\\n\\n    function changeEditorAccess(address _address) public onlyPatient {\\n        // pending update - when user changes access, symmetric key S must be changed\\n        if (!isDoctor(_address)) revert Contract__NotDoctor();\\n\\n        // remove old editor access\\n        address old_editor = patients.records[msg.sender].editor;\\n        doctors.docToPatAccess[old_editor].unset(msg.sender);\\n\\n        // add new editor access\\n        patients.records[msg.sender].editor = _address;\\n        doctors.docToPatAccess[_address].set(msg.sender);\\n    }\\n\\n    function removeEditorAccess() public onlyPatient {\\n        address old_editor = patients.records[msg.sender].editor;\\n        patients.records[msg.sender].editor = address(0);\\n        doctors.docToPatAccess[old_editor].unset(msg.sender);\\n    }\\n\\n    function getPatDr() public view onlyPatient returns (address) {\\n        return patients.records[msg.sender].editor;\\n    }\\n\\n    function grantViewerAccess(address _address) public onlyPatient {\\n        if (!isDoctor(_address)) revert Contract__NotDoctor();\\n\\n        if (!patients.records[msg.sender].viewers.contains(_address)) {\\n            patients.records[msg.sender].viewers.push(_address);\\n        }\\n    }\\n\\n    function revokeViewerAccess(address _address) public onlyPatient {\\n        // pending update - when user revokes access, symmetric key S must be changed\\n        if (!isDoctor(_address)) revert Contract__NotDoctor();\\n\\n        patients.records[msg.sender].viewers.remove(_address);\\n    }\\n\\n    function getPatViewers() public view onlyPatient returns (address[] memory) {\\n        return patients.records[msg.sender].viewers;\\n    }\\n\\n    // modifiers\\n    modifier onlyAdmin() {\\n        if (!admin.has(msg.sender)) revert Contract__NotAdmin();\\n        _;\\n    }\\n\\n    modifier onlyDoctor() {\\n        if (!doctors.users.has(msg.sender)) revert Contract__NotDoctor();\\n        _;\\n    }\\n\\n    modifier onlyPatient() {\\n        if (!patients.users.has(msg.sender)) revert Contract__NotPatient();\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x25c404a28c8fca439063b1ec9af8d091e3d72d41f8aef9c7ccf41659fde385da\",\"license\":\"MIT\"},\"contracts/Roles.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"./AddToStrMapping.sol\\\";\\n\\nlibrary Roles {\\n    using AddToStrMapping for AddToStrMapping.Map;\\n\\n    // This is to keep track of roles\\n    // Reduces searching cost\\n    struct Role {\\n        AddToStrMapping.Map bearer;\\n    }\\n\\n    function add(Role storage role, address account, string memory hash) internal {\\n        require(!has(role, account), \\\"Roles: account already has role\\\");\\n        role.bearer.set(account, hash);\\n    }\\n\\n    function remove(Role storage role, address account) internal {\\n        require(has(role, account), \\\"Roles: account does not have role\\\");\\n        role.bearer.remove(account);\\n    }\\n\\n    function has(Role storage role, address account) internal view returns (bool) {\\n        require(account != address(0), \\\"Roles: account is the zero address\\\");\\n        return bytes(role.bearer.get(account)).length != 0;\\n    }\\n\\n    function setHash(Role storage role, address account, string memory _hash) internal {\\n        role.bearer.set(account, _hash);\\n    }\\n\\n    function getHash(Role storage role, address account) internal view returns (string memory) {\\n        return role.bearer.get(account);\\n    }\\n\\n    function getMembers(Role storage role) internal view returns (address[] memory) {\\n        return role.bearer.keys;\\n    }\\n}\\n\",\"keccak256\":\"0x35319b78de3f838d4fdae2c499ccf5b4ed9407222e38d041a303fb7b42bf47aa\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c80638f472639116100c3578063dc823aaf1161007c578063dc823aaf1461038e578063dd36d4ae146103be578063df70345c146103da578063ecfe0cbe146103f6578063f7a03a1e14610412578063fb87cf941461042e5761014d565b80638f472639146102a65780638f7f43a9146102c45780638f9c79ed146102e2578063996440c614610312578063b1e758a414610342578063cce9d43e1461035e5761014d565b806343714e401161011557806343714e40146101f85780635a8d091f146102165780635ced594b146102325780636e9960c3146102505780637428197f1461026e5780637cf1e4451461028a5761014d565b80630d52fb4d146101525780631d613801146101705780631da3e2dc1461017a57806324d7806c1461019857806339b0f922146101c8575b600080fd5b61015a61044a565b6040516101679190612421565b60405180910390f35b610178610568565b005b6101826106fb565b60405161018f9190612421565b60405180910390f35b6101b260048036038101906101ad9190612483565b61070f565b6040516101bf91906124cb565b60405180910390f35b6101e260048036038101906101dd9190612483565b61072c565b6040516101ef9190612576565b60405180910390f35b610200610a57565b60405161020d9190612576565b60405180910390f35b610230600480360381019061022b91906126cd565b610a75565b005b61023a610adc565b6040516102479190612421565b60405180910390f35b610258610af0565b6040516102659190612738565b60405180910390f35b61028860048036038101906102839190612753565b610b21565b005b6102a4600480360381019061029f91906126cd565b610b8a565b005b6102ae610c35565b6040516102bb9190612738565b60405180910390f35b6102cc610cef565b6040516102d99190612421565b60405180910390f35b6102fc60048036038101906102f79190612483565b610e0d565b60405161030991906124cb565b60405180910390f35b61032c60048036038101906103279190612483565b610e2d565b60405161033991906124cb565b60405180910390f35b61035c60048036038101906103579190612483565b610ea7565b005b61037860048036038101906103739190612483565b6110bd565b6040516103859190612576565b60405180910390f35b6103a860048036038101906103a39190612483565b61111c565b6040516103b59190612576565b60405180910390f35b6103d860048036038101906103d391906126cd565b6111ef565b005b6103f460048036038101906103ef9190612483565b6113a5565b005b610410600480360381019061040b9190612753565b6115cb565b005b61042c60048036038101906104279190612483565b6116ae565b005b61044860048036038101906104439190612753565b611795565b005b6060610463336004600001611ae490919063ffffffff16565b610499576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180548060200260200160405190810160405280929190818152602001828054801561055e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610514575b5050505050905090565b61057f33600a600001611ae490919063ffffffff16565b6105b5576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600a60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600a60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506106f833600460050160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611b7790919063ffffffff16565b50565b606061070a6004600001611dfa565b905090565b6000610725826000611ae490919063ffffffff16565b9050919050565b606061073782610e0d565b61076d576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061083757503373ffffffffffffffffffffffffffffffffffffffff16600a60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b8061093d57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61093a33600a60040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561092757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116108dd575b5050505050611e8f90919063ffffffff16565b14155b15610a1757600a60040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018054610992906127cb565b80601f01602080910402602001604051908101604052809291908181526020018280546109be906127cb565b8015610a0b5780601f106109e057610100808354040283529160200191610a0b565b820191906000526020600020905b8154815290600101906020018083116109ee57829003601f168201915b50505050509050610a52565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4990612848565b60405180910390fd5b919050565b6060610a7033600a600001611f3490919063ffffffff16565b905090565b610a89336000611ae490919063ffffffff16565b610abf576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ad882826004600001611f549092919063ffffffff16565b5050565b6060610aeb600a600001611dfa565b905090565b600080610afd6000611dfa565b600081518110610b1057610b0f612868565b5b602002602001015190508091505090565b610b3833600a600001611ae490919063ffffffff16565b610b6e576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b873382600a600001611f549092919063ffffffff16565b50565b610b9e336000611ae490919063ffffffff16565b610bd4576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000815103610c18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0f90612909565b60405180910390fd5b610c31828260046000016117f59092919063ffffffff16565b5050565b6000610c4e33600a600001611ae490919063ffffffff16565b610c84576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060610d0833600a600001611ae490919063ffffffff16565b610d3e576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015610e0357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610db9575b5050505050905090565b6000610e2682600a600001611ae490919063ffffffff16565b9050919050565b6000610e46826004600001611ae490919063ffffffff16565b8015610ea0575060006004800160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054610e9b906127cb565b905014155b9050919050565b610ebe33600a600001611ae490919063ffffffff16565b610ef4576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610efd81610e2d565b610f33576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61100f81600a60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015610ffc57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610fb2575b5050505050611f7190919063ffffffff16565b6110ba57600a60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60606110c882610e2d565b6110fe576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611115826004600001611f3490919063ffffffff16565b9050919050565b60606004800160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461116a906127cb565b80601f0160208091040260200160405190810160405280929190818152602001828054611196906127cb565b80156111e35780601f106111b8576101008083540402835291602001916111e3565b820191906000526020600020905b8154815290600101906020018083116111c657829003601f168201915b50505050509050919050565b611206336004600001611ae490919063ffffffff16565b61123c576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61124582610e0d565b61127b576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600a60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461134e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134590612848565b60405180910390fd5b80600a60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020190816113a09190612adf565b505050565b6113bc33600a600001611ae490919063ffffffff16565b6113f2576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113fb81610e2d565b611431576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600a60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506114ef33600460050160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611b7790919063ffffffff16565b81600a60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506115c733600460050160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611fa890919063ffffffff16565b5050565b6115e2336004600001611ae490919063ffffffff16565b611618576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081510361165c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165390612c23565b60405180910390fd5b806004800160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090816116aa9190612adf565b5050565b6116c533600a600001611ae490919063ffffffff16565b6116fb576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61170481610e2d565b61173a576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61179181600a60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010161210c90919063ffffffff16565b5050565b60008151036117d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117d090612cb5565b60405180910390fd5b6117f23382600a6000016117f59092919063ffffffff16565b50565b6117ff8383611ae4565b1561183f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183690612d21565b60405180910390fd5b61185782828560000161185c9092919063ffffffff16565b505050565b8260030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166119bc5782600001805490508360020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060018360030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555082600001829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b808360010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081611a0a9190612adf565b50505050565b60608260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054611a5e906127cb565b80601f0160208091040260200160405190810160405280929190818152602001828054611a8a906127cb565b8015611ad75780601f10611aac57610100808354040283529160200191611ad7565b820191906000526020600020905b815481529060010190602001808311611aba57829003601f168201915b5050505050905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4b90612db3565b60405180910390fd5b6000611b6c8385600001611a1090919063ffffffff16565b511415905092915050565b8160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611df6578160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905560008260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600060018460000180549050611c789190612e02565b90506000846000018281548110611c9257611c91612868565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828560020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508460020160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905580856000018481548110611d6157611d60612868565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600001805480611dbd57611dbc612e36565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555050505b5050565b606081600001600001805480602002602001604051908101604052809291908181526020018280548015611e8357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611e39575b50505050509050919050565b600080600090505b8351811015611f09578273ffffffffffffffffffffffffffffffffffffffff16848281518110611eca57611ec9612868565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603611ef65780915050611f2e565b8080611f0190612e65565b915050611e97565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b92915050565b6060611f4c8284600001611a1090919063ffffffff16565b905092915050565b611f6c82828560000161185c9092919063ffffffff16565b505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611f9e8484611e8f565b1415905092915050565b8160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166121085760018260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555081600001805490508260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b60008061219e8480548060200260200160405190810160405280929190818152602001828054801561219357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612149575b505050505084611e8f565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81036121d157600091505061232b565b60008480548060200260200160405190810160405280929190818152602001828054801561225457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161220a575b50505050509050806001825161226a9190612e02565b8151811061227b5761227a612868565b5b602002602001015185838154811061229657612295612868565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848054806122ef576122ee612e36565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556001925050505b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006123888261235d565b9050919050565b6123988161237d565b82525050565b60006123aa838361238f565b60208301905092915050565b6000602082019050919050565b60006123ce82612331565b6123d8818561233c565b93506123e38361234d565b8060005b838110156124145781516123fb888261239e565b9750612406836123b6565b9250506001810190506123e7565b5085935050505092915050565b6000602082019050818103600083015261243b81846123c3565b905092915050565b6000604051905090565b600080fd5b600080fd5b6124608161237d565b811461246b57600080fd5b50565b60008135905061247d81612457565b92915050565b6000602082840312156124995761249861244d565b5b60006124a78482850161246e565b91505092915050565b60008115159050919050565b6124c5816124b0565b82525050565b60006020820190506124e060008301846124bc565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612520578082015181840152602081019050612505565b60008484015250505050565b6000601f19601f8301169050919050565b6000612548826124e6565b61255281856124f1565b9350612562818560208601612502565b61256b8161252c565b840191505092915050565b60006020820190508181036000830152612590818461253d565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6125da8261252c565b810181811067ffffffffffffffff821117156125f9576125f86125a2565b5b80604052505050565b600061260c612443565b905061261882826125d1565b919050565b600067ffffffffffffffff821115612638576126376125a2565b5b6126418261252c565b9050602081019050919050565b82818337600083830152505050565b600061267061266b8461261d565b612602565b90508281526020810184848401111561268c5761268b61259d565b5b61269784828561264e565b509392505050565b600082601f8301126126b4576126b3612598565b5b81356126c484826020860161265d565b91505092915050565b600080604083850312156126e4576126e361244d565b5b60006126f28582860161246e565b925050602083013567ffffffffffffffff81111561271357612712612452565b5b61271f8582860161269f565b9150509250929050565b6127328161237d565b82525050565b600060208201905061274d6000830184612729565b92915050565b6000602082840312156127695761276861244d565b5b600082013567ffffffffffffffff81111561278757612786612452565b5b6127938482850161269f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806127e357607f821691505b6020821081036127f6576127f561279c565b5b50919050565b7f4e6f7420416c6c6f776564000000000000000000000000000000000000000000600082015250565b6000612832600b836124f1565b915061283d826127fc565b602082019050919050565b6000602082019050818103600083015261286181612825565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60008201527f7765642100000000000000000000000000000000000000000000000000000000602082015250565b60006128f36024836124f1565b91506128fe82612897565b604082019050919050565b60006020820190508181036000830152612922816128e6565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261298b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261294e565b612995868361294e565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006129dc6129d76129d2846129ad565b6129b7565b6129ad565b9050919050565b6000819050919050565b6129f6836129c1565b612a0a612a02826129e3565b84845461295b565b825550505050565b600090565b612a1f612a12565b612a2a8184846129ed565b505050565b5b81811015612a4e57612a43600082612a17565b600181019050612a30565b5050565b601f821115612a9357612a6481612929565b612a6d8461293e565b81016020851015612a7c578190505b612a90612a888561293e565b830182612a2f565b50505b505050565b600082821c905092915050565b6000612ab660001984600802612a98565b1980831691505092915050565b6000612acf8383612aa5565b9150826002028217905092915050565b612ae8826124e6565b67ffffffffffffffff811115612b0157612b006125a2565b5b612b0b82546127cb565b612b16828285612a52565b600060209050601f831160018114612b495760008415612b37578287015190505b612b418582612ac3565b865550612ba9565b601f198416612b5786612929565b60005b82811015612b7f57848901518255600182019150602085019450602081019050612b5a565b86831015612b9c5784890151612b98601f891682612aa5565b8355505b6001600288020188555050505b505050505050565b7f436f6e74726163743a20456d707479207075626c6963206b6579206973206e6f60008201527f7420616c6c6f7765642100000000000000000000000000000000000000000000602082015250565b6000612c0d602a836124f1565b9150612c1882612bb1565b604082019050919050565b60006020820190508181036000830152612c3c81612c00565b9050919050565b7f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60008201527f7765640000000000000000000000000000000000000000000000000000000000602082015250565b6000612c9f6023836124f1565b9150612caa82612c43565b604082019050919050565b60006020820190508181036000830152612cce81612c92565b9050919050565b7f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500600082015250565b6000612d0b601f836124f1565b9150612d1682612cd5565b602082019050919050565b60006020820190508181036000830152612d3a81612cfe565b9050919050565b7f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000612d9d6022836124f1565b9150612da882612d41565b604082019050919050565b60006020820190508181036000830152612dcc81612d90565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612e0d826129ad565b9150612e18836129ad565b9250828203905081811115612e3057612e2f612dd3565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000612e70826129ad565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612ea257612ea1612dd3565b5b60018201905091905056fea264697066735822122033b5f68bca006e8c1e8221a04c870c3d6a1e27766ff0997de4e2bf2f19f3ff5664736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 563,
        "contract": "contracts/Contract.sol:Contract",
        "label": "admin",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(Role)1201_storage"
      },
      {
        "astId": 566,
        "contract": "contracts/Contract.sol:Contract",
        "label": "doctors",
        "offset": 0,
        "slot": "4",
        "type": "t_struct(Doctors)560_storage"
      },
      {
        "astId": 569,
        "contract": "contracts/Contract.sol:Contract",
        "label": "patients",
        "offset": 0,
        "slot": "10",
        "type": "t_struct(Patients)547_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_address,t_struct(Map)13_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct AddToBoolMapping.Map)",
        "numberOfBytes": "32",
        "value": "t_struct(Map)13_storage"
      },
      "t_mapping(t_address,t_struct(MedicalRecord)538_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Contract.MedicalRecord)",
        "numberOfBytes": "32",
        "value": "t_struct(MedicalRecord)538_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Doctors)560_storage": {
        "encoding": "inplace",
        "label": "struct Contract.Doctors",
        "members": [
          {
            "astId": 550,
            "contract": "contracts/Contract.sol:Contract",
            "label": "users",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Role)1201_storage"
          },
          {
            "astId": 554,
            "contract": "contracts/Contract.sol:Contract",
            "label": "public_keys",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_string_storage)"
          },
          {
            "astId": 559,
            "contract": "contracts/Contract.sol:Contract",
            "label": "docToPatAccess",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(Map)13_storage)"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Map)13_storage": {
        "encoding": "inplace",
        "label": "struct AddToBoolMapping.Map",
        "members": [
          {
            "astId": 4,
            "contract": "contracts/Contract.sol:Contract",
            "label": "keys",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 8,
            "contract": "contracts/Contract.sol:Contract",
            "label": "values",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 12,
            "contract": "contracts/Contract.sol:Contract",
            "label": "indexOf",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Map)204_storage": {
        "encoding": "inplace",
        "label": "struct AddToStrMapping.Map",
        "members": [
          {
            "astId": 191,
            "contract": "contracts/Contract.sol:Contract",
            "label": "keys",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 195,
            "contract": "contracts/Contract.sol:Contract",
            "label": "values",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_string_storage)"
          },
          {
            "astId": 199,
            "contract": "contracts/Contract.sol:Contract",
            "label": "indexOf",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 203,
            "contract": "contracts/Contract.sol:Contract",
            "label": "inserted",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(MedicalRecord)538_storage": {
        "encoding": "inplace",
        "label": "struct Contract.MedicalRecord",
        "members": [
          {
            "astId": 532,
            "contract": "contracts/Contract.sol:Contract",
            "label": "editor",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 535,
            "contract": "contracts/Contract.sol:Contract",
            "label": "viewers",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 537,
            "contract": "contracts/Contract.sol:Contract",
            "label": "data_hash",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Patients)547_storage": {
        "encoding": "inplace",
        "label": "struct Contract.Patients",
        "members": [
          {
            "astId": 541,
            "contract": "contracts/Contract.sol:Contract",
            "label": "users",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Role)1201_storage"
          },
          {
            "astId": 546,
            "contract": "contracts/Contract.sol:Contract",
            "label": "records",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(MedicalRecord)538_storage)"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Role)1201_storage": {
        "encoding": "inplace",
        "label": "struct Roles.Role",
        "members": [
          {
            "astId": 1200,
            "contract": "contracts/Contract.sol:Contract",
            "label": "bearer",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Map)204_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}