{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Contract__DoctorPublicKeyMissing",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__NotAdmin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__NotDoctor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__NotPatient",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__PendingDoctorApproval",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "approveDr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "changeEditorAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdminPubKey",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllDrs",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllPts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getDrHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDrOfPt",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getDrPubKey",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPatViewers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPendingDrs",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getPtGeneralHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getPtRecordHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPtsOfDr",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "grantViewerAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isDoctor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isDrPending",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isDrRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isPatient",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "registerDr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_public_key",
          "type": "string"
        }
      ],
      "name": "registerDrConfirm",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_key_data_hash",
          "type": "string"
        }
      ],
      "name": "registerPt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "removeEditorAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "revokeViewerAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_public_key",
          "type": "string"
        }
      ],
      "name": "setAdminPubKey",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "setDrHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "setPtGeneralHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "setPtRecordHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3ae2b515058590cd77063d73cce666ad03d60bf5a4e31a9418e42e2cae2a76f5",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "3260251",
    "logsBloom": "0x
    "blockHash": "0xc8477ab75b6d372915c24760d76ca6ec4c380fd85fe7304c9325ca8012b9c222",
    "transactionHash": "0x3ae2b515058590cd77063d73cce666ad03d60bf5a4e31a9418e42e2cae2a76f5",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "3260251",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "7e2d2355f9de5f59b78be237810af6ac",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Contract__DoctorPublicKeyMissing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__NotAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__NotDoctor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__NotPatient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__PendingDoctorApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"approveDr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"changeEditorAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdminPubKey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllDrs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getDrHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDrOfPt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getDrPubKey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPatViewers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPendingDrs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getPtGeneralHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getPtRecordHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPtsOfDr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"grantViewerAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isDoctor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isDrPending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isDrRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isPatient\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"registerDr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_public_key\",\"type\":\"string\"}],\"name\":\"registerDrConfirm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_key_data_hash\",\"type\":\"string\"}],\"name\":\"registerPt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeEditorAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"revokeViewerAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_public_key\",\"type\":\"string\"}],\"name\":\"setAdminPubKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setDrHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setPtGeneralHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setPtRecordHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Contract.sol\":\"Contract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AddToBoolMapping.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary AddToBoolMapping {\\n    // mapping address => bool\\n    struct Map {\\n        address[] keys;\\n        mapping(address => bool) values;\\n        mapping(address => uint256) indexOf;\\n    }\\n\\n    function get(Map storage map, address key) internal view returns (bool) {\\n        return map.values[key];\\n    }\\n\\n    function getKeys(Map storage map) internal view returns (address[] memory) {\\n        return map.keys;\\n    }\\n\\n    function getKeyAtIndex(Map storage map, uint256 index) internal view returns (address) {\\n        return map.keys[index];\\n    }\\n\\n    function size(Map storage map) internal view returns (uint256) {\\n        return map.keys.length;\\n    }\\n\\n    function set(Map storage map, address key) internal {\\n        if (map.values[key]) return;\\n\\n        // add address => true mapping to values\\n        map.values[key] = true;\\n\\n        // add index of address to indexOf mapping\\n        map.indexOf[key] = map.keys.length;\\n\\n        // add address to keys\\n        map.keys.push(key);\\n    }\\n\\n    function unset(Map storage map, address key) internal {\\n        if (!map.values[key]) return;\\n\\n        // remove from values\\n        delete map.values[key];\\n\\n        // important backups\\n        uint256 index = map.indexOf[key];\\n        uint256 lastIndex = map.keys.length - 1;\\n        address lastKey = map.keys[lastIndex];\\n\\n        // update indexOf last element\\n        map.indexOf[lastKey] = index;\\n        delete map.indexOf[key];\\n\\n        // remove from keys\\n        map.keys[index] = lastKey;\\n        map.keys.pop();\\n    }\\n}\\n\",\"keccak256\":\"0xf4944f25058b889d9bebf1d53283eab488e3200f3e2a48e47f52849b113644cc\",\"license\":\"MIT\"},\"contracts/AddToStrMapping.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary AddToStrMapping {\\n    // mapping address => string\\n    struct Map {\\n        address[] keys;\\n        mapping(address => string) values;\\n        mapping(address => uint256) indexOf;\\n        mapping(address => bool) inserted;\\n    }\\n\\n    function get(Map storage map, address key) internal view returns (string memory) {\\n        return map.values[key];\\n    }\\n\\n    function getKeys(Map storage map) internal view returns (address[] memory) {\\n        return map.keys;\\n    }\\n\\n    function getKeyAtIndex(Map storage map, uint256 index) internal view returns (address) {\\n        return map.keys[index];\\n    }\\n\\n    function size(Map storage map) internal view returns (uint256) {\\n        return map.keys.length;\\n    }\\n\\n    function set(Map storage map, address key, string memory val) internal {\\n        if (!map.inserted[key]) {\\n            // add index of address to indexOf mapping\\n            map.indexOf[key] = map.keys.length;\\n\\n            // make value of address in inserted to true\\n            map.inserted[key] = true;\\n\\n            // add address to keys\\n            map.keys.push(key);\\n        }\\n\\n        // add address => true mapping to values\\n        map.values[key] = val;\\n    }\\n\\n    function remove(Map storage map, address key) internal {\\n        if (!map.inserted[key]) return;\\n\\n        // remove from values\\n        delete map.values[key];\\n        delete map.inserted[key];\\n\\n        // important backups\\n        uint256 index = map.indexOf[key];\\n        uint256 lastIndex = map.keys.length - 1;\\n        address lastKey = map.keys[lastIndex];\\n\\n        // update indexOf last element\\n        map.indexOf[lastKey] = index;\\n        delete map.indexOf[key];\\n\\n        // remove from keys\\n        map.keys[index] = lastKey;\\n        map.keys.pop();\\n    }\\n}\\n\",\"keccak256\":\"0x44a19745fb3130275849bcaaf82f085c8a50d1d105b431e5c6df0625e9289f14\",\"license\":\"MIT\"},\"contracts/AddressArrayUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary AddressArrayUtils {\\n    function indexOf(address[] memory arr, address key) internal pure returns (int256) {\\n        for (uint256 i = 0; i < arr.length; i++) {\\n            if (arr[i] == key) return int256(i);\\n        }\\n        return -1;\\n    }\\n\\n    function contains(address[] memory arr, address key) internal pure returns (bool) {\\n        return indexOf(arr, key) != -1;\\n    }\\n\\n    function remove(address[] storage arr, address key) internal returns (bool) {\\n        int256 i = indexOf(arr, key);\\n\\n        if (i == -1) return false;\\n\\n        address[] memory temp = arr;\\n        arr[uint256(i)] = temp[temp.length - 1];\\n        arr.pop();\\n\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x29555ad812fd5509ead59914b9bc59285a5f7b96bedcfed493bca55994271d67\",\"license\":\"MIT\"},\"contracts/Contract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"./Roles.sol\\\";\\nimport \\\"./AddressArrayUtils.sol\\\";\\nimport \\\"./AddToBoolMapping.sol\\\";\\n\\nerror Contract__NotAdmin();\\nerror Contract__NotDoctor();\\nerror Contract__NotPatient();\\nerror Contract__PendingDoctorApproval();\\nerror Contract__DoctorPublicKeyMissing();\\n\\ncontract Contract {\\n    // using methods of Roles for Role struct in Roles\\n    using Roles for Roles.Role;\\n    using AddToBoolMapping for AddToBoolMapping.Map;\\n    using AddressArrayUtils for address[];\\n\\n    struct MedicalRecord {\\n        address editor;\\n        address[] viewers;\\n        string key_data_hash;\\n    }\\n\\n    struct Admin {\\n        address user;\\n        string public_key;\\n        AddToBoolMapping.Map pending_doctors;\\n    }\\n\\n    struct Patients {\\n        Roles.Role users;\\n        mapping(address => MedicalRecord) records;\\n    }\\n\\n    struct Doctors {\\n        Roles.Role users;\\n        mapping(address => string) public_keys;\\n        mapping(address => AddToBoolMapping.Map) docToPatAccess;\\n    }\\n\\n    // defining roles - contains hashes\\n    Admin private admin;\\n    Doctors private doctors;\\n    Patients private patients;\\n\\n    // Initializing admin\\n    constructor() {\\n        admin.user = msg.sender;\\n    }\\n\\n    // Admin methods\\n    function isAdmin(address _address) public view returns (bool) {\\n        if (admin.user == _address) return true;\\n        return false;\\n    }\\n\\n    function getAdmin() public view returns (address) {\\n        return admin.user;\\n    }\\n\\n    function setAdminPubKey(string memory _public_key) public onlyAdmin {\\n        admin.public_key = _public_key;\\n    }\\n\\n    function getAdminPubKey() public view returns (string memory) {\\n        return admin.public_key;\\n    }\\n\\n    // Doctor methods\\n    function isDrRegistered(address _address) public view returns (bool) {\\n        return doctors.users.has(_address);\\n    }\\n\\n    function isDrPending(address _address) public view returns (bool) {\\n        return admin.pending_doctors.get(_address);\\n    }\\n\\n    function isDoctor(address _address) public view returns (bool) {\\n        if (!doctors.users.has(_address)) return false;\\n        if (admin.pending_doctors.get(_address)) return false;\\n        if (bytes(doctors.public_keys[_address]).length == 0) return false;\\n        return true;\\n    }\\n\\n    function registerDr(string memory _hash) public {\\n        if (isPatient(msg.sender)) revert(\\\"Contract: Address already registered as patient\\\");\\n        if (bytes(_hash).length == 0) revert(\\\"Contract: Empty hash is not allowed!\\\");\\n        doctors.users.add(msg.sender, _hash);\\n        admin.pending_doctors.set(msg.sender);\\n    }\\n\\n    function approveDr(address _address) public onlyAdmin {\\n        if (isDoctor(_address)) return;\\n        if (!doctors.users.has(_address)) return;\\n        admin.pending_doctors.unset(_address);\\n    }\\n\\n    function registerDrConfirm(string memory _public_key) public {\\n        if (bytes(_public_key).length == 0) revert(\\\"Contract: Empty public key is not allowed!\\\");\\n        if (!doctors.users.has(msg.sender)) revert Contract__NotDoctor();\\n        if (admin.pending_doctors.get(msg.sender)) revert Contract__PendingDoctorApproval();\\n        doctors.public_keys[msg.sender] = _public_key;\\n    }\\n\\n    function setDrHash(string memory _hash) public onlyDoctor {\\n        if (bytes(_hash).length == 0) revert(\\\"Contract: Empty hash is not allowed!\\\");\\n        doctors.users.setHash(msg.sender, _hash);\\n    }\\n\\n    function getDrHash(address _address) public view returns (string memory) {\\n        if (!isDrRegistered(_address)) revert Contract__NotDoctor();\\n        return doctors.users.getHash(_address);\\n    }\\n\\n    function getDrPubKey(address _address) public view returns (string memory) {\\n        return doctors.public_keys[_address];\\n    }\\n\\n    function getAllDrs() public view returns (address[] memory) {\\n        return doctors.users.getMembers();\\n    }\\n\\n    function getPendingDrs() public view returns (address[] memory) {\\n        return admin.pending_doctors.keys;\\n    }\\n\\n    function getPtsOfDr() public view onlyDoctor returns (address[] memory) {\\n        return doctors.docToPatAccess[msg.sender].keys;\\n    }\\n\\n    // Patient methods\\n    function isPatient(address _address) public view returns (bool) {\\n        return patients.users.has(_address);\\n    }\\n\\n    function registerPt(string memory _hash, string memory _key_data_hash) public {\\n        if (isDrRegistered(msg.sender) || isDoctor(msg.sender))\\n            revert(\\\"Contract: Address already registered as doctor\\\");\\n        if (bytes(_hash).length == 0) revert(\\\"Contract: Empty hash is not allowed\\\");\\n        patients.users.add(msg.sender, _hash);\\n        patients.records[msg.sender].key_data_hash = _key_data_hash;\\n    }\\n\\n    function setPtGeneralHash(string memory _hash) public onlyPatient {\\n        patients.users.setHash(msg.sender, _hash);\\n    }\\n\\n    function getPtGeneralHash(address _address) public view returns (string memory) {\\n        if (!isPatient(_address)) revert Contract__NotPatient();\\n\\n        if (\\n            msg.sender == _address ||\\n            patients.records[_address].editor == msg.sender ||\\n            patients.records[_address].viewers.indexOf(msg.sender) != -1\\n        ) return patients.users.getHash(_address);\\n\\n        revert(\\\"Not Allowed\\\");\\n    }\\n\\n    function setPtRecordHash(address _address, string memory _hash) public {\\n        if (!isPatient(_address)) revert Contract__NotPatient();\\n        if (!(msg.sender == _address || patients.records[_address].editor == msg.sender))\\n            revert(\\\"Not Allowed\\\");\\n        patients.records[_address].key_data_hash = _hash;\\n    }\\n\\n    function getPtRecordHash(address _address) public view returns (string memory) {\\n        if (!isPatient(_address)) revert Contract__NotPatient();\\n\\n        if (\\n            msg.sender == _address ||\\n            patients.records[_address].editor == msg.sender ||\\n            patients.records[_address].viewers.indexOf(msg.sender) != -1\\n        ) return patients.records[_address].key_data_hash;\\n\\n        revert(\\\"Not Allowed\\\");\\n    }\\n\\n    function getAllPts() public view returns (address[] memory) {\\n        return patients.users.getMembers();\\n    }\\n\\n    function changeEditorAccess(address _address) public onlyPatient {\\n        // pending update - when user changes access, symmetric key S must be changed\\n        if (!isDoctor(_address)) revert Contract__NotDoctor();\\n\\n        // remove old editor access\\n        address old_editor = patients.records[msg.sender].editor;\\n        doctors.docToPatAccess[old_editor].unset(msg.sender);\\n\\n        // add new editor access\\n        patients.records[msg.sender].editor = _address;\\n        doctors.docToPatAccess[_address].set(msg.sender);\\n    }\\n\\n    function removeEditorAccess() public onlyPatient {\\n        address old_editor = patients.records[msg.sender].editor;\\n        patients.records[msg.sender].editor = address(0);\\n        doctors.docToPatAccess[old_editor].unset(msg.sender);\\n    }\\n\\n    function getDrOfPt() public view onlyPatient returns (address) {\\n        return patients.records[msg.sender].editor;\\n    }\\n\\n    function grantViewerAccess(address _address) public onlyPatient {\\n        if (!isDoctor(_address)) revert Contract__NotDoctor();\\n\\n        if (!patients.records[msg.sender].viewers.contains(_address)) {\\n            patients.records[msg.sender].viewers.push(_address);\\n        }\\n    }\\n\\n    function revokeViewerAccess(address _address) public onlyPatient {\\n        // pending update - when user revokes access, symmetric key S must be changed\\n        if (!isDoctor(_address)) revert Contract__NotDoctor();\\n\\n        patients.records[msg.sender].viewers.remove(_address);\\n    }\\n\\n    function getPatViewers() public view onlyPatient returns (address[] memory) {\\n        return patients.records[msg.sender].viewers;\\n    }\\n\\n    // modifiers\\n    modifier onlyAdmin() {\\n        if (!isAdmin(msg.sender)) revert Contract__NotAdmin();\\n        _;\\n    }\\n\\n    modifier onlyDoctor() {\\n        if (!doctors.users.has(msg.sender)) revert Contract__NotDoctor();\\n        if (admin.pending_doctors.get(msg.sender)) revert Contract__PendingDoctorApproval();\\n        if (bytes(doctors.public_keys[msg.sender]).length == 0)\\n            revert Contract__DoctorPublicKeyMissing();\\n        _;\\n    }\\n\\n    modifier onlyPatient() {\\n        if (!isPatient(msg.sender)) revert Contract__NotPatient();\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xa9fe4fc85caa8a746e19e0c8315afd8c98c5733e97cdf6a66064883b44558d10\",\"license\":\"MIT\"},\"contracts/Roles.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"./AddToStrMapping.sol\\\";\\n\\nlibrary Roles {\\n    using AddToStrMapping for AddToStrMapping.Map;\\n\\n    // This is to keep track of roles\\n    // Reduces searching cost\\n    struct Role {\\n        AddToStrMapping.Map bearer;\\n    }\\n\\n    function add(Role storage role, address account, string memory hash) internal {\\n        require(!has(role, account), \\\"Roles: account already has role\\\");\\n        role.bearer.set(account, hash);\\n    }\\n\\n    function remove(Role storage role, address account) internal {\\n        require(has(role, account), \\\"Roles: account does not have role\\\");\\n        role.bearer.remove(account);\\n    }\\n\\n    function has(Role storage role, address account) internal view returns (bool) {\\n        require(account != address(0), \\\"Roles: account is the zero address\\\");\\n        return bytes(role.bearer.get(account)).length != 0;\\n    }\\n\\n    function setHash(Role storage role, address account, string memory _hash) internal {\\n        role.bearer.set(account, _hash);\\n    }\\n\\n    function getHash(Role storage role, address account) internal view returns (string memory) {\\n        return role.bearer.get(account);\\n    }\\n\\n    function getMembers(Role storage role) internal view returns (address[] memory) {\\n        return role.bearer.keys;\\n    }\\n}\\n\",\"keccak256\":\"0x35319b78de3f838d4fdae2c499ccf5b4ed9407222e38d041a303fb7b42bf47aa\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506139e2806100636000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80638f9c79ed11610104578063c70597ad116100a2578063dc823aaf11610071578063dc823aaf1461052c578063df70345c1461055c578063e2877b4e14610578578063f7a03a1e14610596576101cf565b8063c70597ad146104a6578063cce9d43e146104c2578063ccfaed16146104f2578063d0d9a5e31461050e576101cf565b8063a03de49e116100de578063a03de49e14610434578063a53f514d14610450578063afb97e3d1461046e578063b1e758a41461048a576101cf565b80638f9c79ed146103b8578063996440c6146103e857806399eedd2a14610418576101cf565b806332991838116101715780636d4bce201161014b5780636d4bce20146103305780636e9960c31461036057806388c432e11461037e5780638f7f43a91461039a576101cf565b806332991838146102b45780633d8198b4146102d05780634df0a2d414610300576101cf565b80631da3e2dc116101ad5780631da3e2dc1461021857806321639f041461023657806324d7806c14610254578063290c61b014610284576101cf565b80630de99991146101d4578063116461e9146101f05780631d6138011461020e575b600080fd5b6101ee60048036038101906101e99190612d06565b6105b2565b005b6101f8610635565b6040516102059190612dc3565b60405180910390f35b6102166106ca565b005b61022061084e565b60405161022d9190612ea3565b60405180910390f35b61023e610862565b60405161024b9190612ed4565b60405180910390f35b61026e60048036038101906102699190612d06565b61090e565b60405161027b9190612f0a565b60405180910390f35b61029e60048036038101906102999190612d06565b61097a565b6040516102ab9190612f0a565b60405180910390f35b6102ce60048036038101906102c9919061305a565b61099a565b005b6102ea60048036038101906102e59190612d06565b610a5a565b6040516102f79190612dc3565b60405180910390f35b61031a60048036038101906103159190612d06565b610d85565b6040516103279190612dc3565b60405180910390f35b61034a60048036038101906103459190612d06565b610ff9565b6040516103579190612f0a565b60405180910390f35b610368611019565b6040516103759190612ed4565b60405180910390f35b6103986004803603810190610393919061305a565b611045565b005b6103a26110a0565b6040516103af9190612ea3565b60405180910390f35b6103d260048036038101906103cd9190612d06565b6111b0565b6040516103df9190612f0a565b60405180910390f35b61040260048036038101906103fd9190612d06565b6111d0565b60405161040f9190612f0a565b60405180910390f35b610432600480360381019061042d919061305a565b611284565b005b61044e600480360381019061044991906130a3565b611407565b005b610458611514565b6040516104659190612ea3565b60405180910390f35b6104886004803603810190610483919061305a565b611528565b005b6104a4600480360381019061049f9190612d06565b61157d565b005b6104c060048036038101906104bb919061311b565b611785565b005b6104dc60048036038101906104d79190612d06565b611924565b6040516104e99190612dc3565b60405180910390f35b61050c6004803603810190610507919061305a565b611983565b005b610516611ab5565b6040516105239190612ea3565b60405180910390f35b61054660048036038101906105419190612d06565b611ca8565b6040516105539190612dc3565b60405180910390f35b61057660048036038101906105719190612d06565b611d7c565b005b610580611f92565b60405161058d9190612ea3565b60405180910390f35b6105b060048036038101906105ab9190612d06565b612026565b005b6105bb3361090e565b6105f1576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105fa816111d0565b610632576106158160056000016120ff90919063ffffffff16565b156106325761063181600060020161219290919063ffffffff16565b5b50565b606060006001018054610647906131a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610673906131a6565b80156106c05780601f10610695576101008083540402835291602001916106c0565b820191906000526020600020905b8154815290600101906020018083116106a357829003601f168201915b5050505050905090565b6106d3336111b0565b610709576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061084b336005800160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061219290919063ffffffff16565b50565b606061085d6005600001612415565b905090565b600061086d336111b0565b6108a3576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008173ffffffffffffffffffffffffffffffffffffffff166000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036109705760019050610975565b600090505b919050565b60006109938260056000016120ff90919063ffffffff16565b9050919050565b6109a3336111b0565b156109e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109da90613249565b60405180910390fd5b6000815103610a27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1e906132db565b60405180910390fd5b610a40338260056000016124aa9092919063ffffffff16565b610a5733600060020161251190919063ffffffff16565b50565b6060610a65826111b0565b610a9b576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b6557503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610c6b57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610c6833600b60040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015610c5557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610c0b575b505050505061267590919063ffffffff16565b14155b15610d4557600b60040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018054610cc0906131a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610cec906131a6565b8015610d395780601f10610d0e57610100808354040283529160200191610d39565b820191906000526020600020905b815481529060010190602001808311610d1c57829003601f168201915b50505050509050610d80565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7790613347565b60405180910390fd5b919050565b6060610d90826111b0565b610dc6576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e9057503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610f9657507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610f9333600b60040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015610f8057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610f36575b505050505061267590919063ffffffff16565b14155b15610fb957610fb282600b60000161271a90919063ffffffff16565b9050610ff4565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610feb90613347565b60405180910390fd5b919050565b600061101282600060020161273a90919063ffffffff16565b9050919050565b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61104e336111b0565b611084576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61109d3382600b6000016127939092919063ffffffff16565b50565b60606110ab336111b0565b6110e1576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054806020026020016040519081016040528092919081815260200182805480156111a657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161115c575b5050505050905090565b60006111c982600b6000016120ff90919063ffffffff16565b9050919050565b60006111e98260056000016120ff90919063ffffffff16565b6111f6576000905061127f565b61120d82600060020161273a90919063ffffffff16565b1561121b576000905061127f565b6000600560040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461126a906131a6565b90500361127a576000905061127f565b600190505b919050565b61129b3360056000016120ff90919063ffffffff16565b6112d1576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6112e833600060020161273a90919063ffffffff16565b1561131f576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461136e906131a6565b9050036113a7576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008151036113eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e2906132db565b60405180910390fd5b611404338260056000016127939092919063ffffffff16565b50565b6114103361097a565b80611420575061141f336111d0565b5b15611460576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611457906133d9565b60405180910390fd5b60008251036114a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149b9061346b565b60405180910390fd5b6114bd3383600b6000016124aa9092919063ffffffff16565b80600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201908161150f9190613641565b505050565b6060611523600b600001612415565b905090565b6115313361090e565b611567576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600060010190816115799190613641565b5050565b611586336111b0565b6115bc576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115c5816111d0565b6115fb576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116d781600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054806020026020016040519081016040528092919081815260200182805480156116c457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161167a575b50505050506127b090919063ffffffff16565b61178257600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b61178e826111b0565b6117c4576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061188e57503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b6118cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118c490613347565b60405180910390fd5b80600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201908161191f9190613641565b505050565b606061192f8261097a565b611965576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61197c82600560000161271a90919063ffffffff16565b9050919050565b60008151036119c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119be90613785565b60405180910390fd5b6119de3360056000016120ff90919063ffffffff16565b611a14576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611a2b33600060020161273a90919063ffffffff16565b15611a62576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081611ab19190613641565b5050565b6060611ace3360056000016120ff90919063ffffffff16565b611b04576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611b1b33600060020161273a90919063ffffffff16565b15611b52576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054611ba1906131a6565b905003611bda576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005800160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805480602002602001604051908101604052809291908181526020018280548015611c9e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611c54575b5050505050905090565b6060600560040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054611cf7906131a6565b80601f0160208091040260200160405190810160405280929190818152602001828054611d23906131a6565b8015611d705780601f10611d4557610100808354040283529160200191611d70565b820191906000526020600020905b815481529060010190602001808311611d5357829003601f168201915b50505050509050919050565b611d85336111b0565b611dbb576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611dc4816111d0565b611dfa576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611eb7336005800160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061219290919063ffffffff16565b81600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611f8e336005800160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061251190919063ffffffff16565b5050565b6060600060020160000180548060200260200160405190810160405280929190818152602001828054801561201c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611fd2575b5050505050905090565b61202f336111b0565b612065576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61206e816111d0565b6120a4576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6120fb81600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016127e790919063ffffffff16565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361216f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161216690613817565b60405180910390fd5b60006121878385600001612a0c90919063ffffffff16565b511415905092915050565b8160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615612411578160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905560008260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600184600001805490506122939190613866565b905060008460000182815481106122ad576122ac61389a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828560020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508460020160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090558085600001848154811061237c5761237b61389a565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846000018054806123d8576123d76138c9565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555050505b5050565b60608160000160000180548060200260200160405190810160405280929190818152602001828054801561249e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612454575b50505050509050919050565b6124b483836120ff565b156124f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124eb90613944565b60405180910390fd5b61250c828285600001612ae09092919063ffffffff16565b505050565b8160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166126715760018260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555081600001805490508260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b600080600090505b83518110156126ef578273ffffffffffffffffffffffffffffffffffffffff168482815181106126b0576126af61389a565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036126dc5780915050612714565b80806126e790613964565b91505061267d565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b92915050565b60606127328284600001612a0c90919063ffffffff16565b905092915050565b60008260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6127ab828285600001612ae09092919063ffffffff16565b505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6127dd8484612675565b1415905092915050565b6000806128798480548060200260200160405190810160405280929190818152602001828054801561286e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612824575b505050505084612675565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81036128ac576000915050612a06565b60008480548060200260200160405190810160405280929190818152602001828054801561292f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116128e5575b5050505050905080600182516129459190613866565b815181106129565761295561389a565b5b60200260200101518583815481106129715761297061389a565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848054806129ca576129c96138c9565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556001925050505b92915050565b60608260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054612a5a906131a6565b80601f0160208091040260200160405190810160405280929190818152602001828054612a86906131a6565b8015612ad35780601f10612aa857610100808354040283529160200191612ad3565b820191906000526020600020905b815481529060010190602001808311612ab657829003601f168201915b5050505050905092915050565b8260030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16612c405782600001805490508360020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060018360030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555082600001829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b808360010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081612c8e9190613641565b50505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612cd382612ca8565b9050919050565b612ce381612cc8565b8114612cee57600080fd5b50565b600081359050612d0081612cda565b92915050565b600060208284031215612d1c57612d1b612c9e565b5b6000612d2a84828501612cf1565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612d6d578082015181840152602081019050612d52565b60008484015250505050565b6000601f19601f8301169050919050565b6000612d9582612d33565b612d9f8185612d3e565b9350612daf818560208601612d4f565b612db881612d79565b840191505092915050565b60006020820190508181036000830152612ddd8184612d8a565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612e1a81612cc8565b82525050565b6000612e2c8383612e11565b60208301905092915050565b6000602082019050919050565b6000612e5082612de5565b612e5a8185612df0565b9350612e6583612e01565b8060005b83811015612e96578151612e7d8882612e20565b9750612e8883612e38565b925050600181019050612e69565b5085935050505092915050565b60006020820190508181036000830152612ebd8184612e45565b905092915050565b612ece81612cc8565b82525050565b6000602082019050612ee96000830184612ec5565b92915050565b60008115159050919050565b612f0481612eef565b82525050565b6000602082019050612f1f6000830184612efb565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612f6782612d79565b810181811067ffffffffffffffff82111715612f8657612f85612f2f565b5b80604052505050565b6000612f99612c94565b9050612fa58282612f5e565b919050565b600067ffffffffffffffff821115612fc557612fc4612f2f565b5b612fce82612d79565b9050602081019050919050565b82818337600083830152505050565b6000612ffd612ff884612faa565b612f8f565b90508281526020810184848401111561301957613018612f2a565b5b613024848285612fdb565b509392505050565b600082601f83011261304157613040612f25565b5b8135613051848260208601612fea565b91505092915050565b6000602082840312156130705761306f612c9e565b5b600082013567ffffffffffffffff81111561308e5761308d612ca3565b5b61309a8482850161302c565b91505092915050565b600080604083850312156130ba576130b9612c9e565b5b600083013567ffffffffffffffff8111156130d8576130d7612ca3565b5b6130e48582860161302c565b925050602083013567ffffffffffffffff81111561310557613104612ca3565b5b6131118582860161302c565b9150509250929050565b6000806040838503121561313257613131612c9e565b5b600061314085828601612cf1565b925050602083013567ffffffffffffffff81111561316157613160612ca3565b5b61316d8582860161302c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806131be57607f821691505b6020821081036131d1576131d0613177565b5b50919050565b7f436f6e74726163743a204164647265737320616c72656164792072656769737460008201527f657265642061732070617469656e740000000000000000000000000000000000602082015250565b6000613233602f83612d3e565b915061323e826131d7565b604082019050919050565b6000602082019050818103600083015261326281613226565b9050919050565b7f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60008201527f7765642100000000000000000000000000000000000000000000000000000000602082015250565b60006132c5602483612d3e565b91506132d082613269565b604082019050919050565b600060208201905081810360008301526132f4816132b8565b9050919050565b7f4e6f7420416c6c6f776564000000000000000000000000000000000000000000600082015250565b6000613331600b83612d3e565b915061333c826132fb565b602082019050919050565b6000602082019050818103600083015261336081613324565b9050919050565b7f436f6e74726163743a204164647265737320616c72656164792072656769737460008201527f6572656420617320646f63746f72000000000000000000000000000000000000602082015250565b60006133c3602e83612d3e565b91506133ce82613367565b604082019050919050565b600060208201905081810360008301526133f2816133b6565b9050919050565b7f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60008201527f7765640000000000000000000000000000000000000000000000000000000000602082015250565b6000613455602383612d3e565b9150613460826133f9565b604082019050919050565b6000602082019050818103600083015261348481613448565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026134ed7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826134b0565b6134f786836134b0565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061353e6135396135348461350f565b613519565b61350f565b9050919050565b6000819050919050565b61355883613523565b61356c61356482613545565b8484546134bd565b825550505050565b600090565b613581613574565b61358c81848461354f565b505050565b5b818110156135b0576135a5600082613579565b600181019050613592565b5050565b601f8211156135f5576135c68161348b565b6135cf846134a0565b810160208510156135de578190505b6135f26135ea856134a0565b830182613591565b50505b505050565b600082821c905092915050565b6000613618600019846008026135fa565b1980831691505092915050565b60006136318383613607565b9150826002028217905092915050565b61364a82612d33565b67ffffffffffffffff81111561366357613662612f2f565b5b61366d82546131a6565b6136788282856135b4565b600060209050601f8311600181146136ab5760008415613699578287015190505b6136a38582613625565b86555061370b565b601f1984166136b98661348b565b60005b828110156136e1578489015182556001820191506020850194506020810190506136bc565b868310156136fe57848901516136fa601f891682613607565b8355505b6001600288020188555050505b505050505050565b7f436f6e74726163743a20456d707479207075626c6963206b6579206973206e6f60008201527f7420616c6c6f7765642100000000000000000000000000000000000000000000602082015250565b600061376f602a83612d3e565b915061377a82613713565b604082019050919050565b6000602082019050818103600083015261379e81613762565b9050919050565b7f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000613801602283612d3e565b915061380c826137a5565b604082019050919050565b60006020820190508181036000830152613830816137f4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006138718261350f565b915061387c8361350f565b925082820390508181111561389457613893613837565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500600082015250565b600061392e601f83612d3e565b9150613939826138f8565b602082019050919050565b6000602082019050818103600083015261395d81613921565b9050919050565b600061396f8261350f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036139a1576139a0613837565b5b60018201905091905056fea2646970667358221220cff8bde4b58a69890558f308a0a481021e01e49baccc6ec03042d4dc29bbc2f764736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c80638f9c79ed11610104578063c70597ad116100a2578063dc823aaf11610071578063dc823aaf1461052c578063df70345c1461055c578063e2877b4e14610578578063f7a03a1e14610596576101cf565b8063c70597ad146104a6578063cce9d43e146104c2578063ccfaed16146104f2578063d0d9a5e31461050e576101cf565b8063a03de49e116100de578063a03de49e14610434578063a53f514d14610450578063afb97e3d1461046e578063b1e758a41461048a576101cf565b80638f9c79ed146103b8578063996440c6146103e857806399eedd2a14610418576101cf565b806332991838116101715780636d4bce201161014b5780636d4bce20146103305780636e9960c31461036057806388c432e11461037e5780638f7f43a91461039a576101cf565b806332991838146102b45780633d8198b4146102d05780634df0a2d414610300576101cf565b80631da3e2dc116101ad5780631da3e2dc1461021857806321639f041461023657806324d7806c14610254578063290c61b014610284576101cf565b80630de99991146101d4578063116461e9146101f05780631d6138011461020e575b600080fd5b6101ee60048036038101906101e99190612d06565b6105b2565b005b6101f8610635565b6040516102059190612dc3565b60405180910390f35b6102166106ca565b005b61022061084e565b60405161022d9190612ea3565b60405180910390f35b61023e610862565b60405161024b9190612ed4565b60405180910390f35b61026e60048036038101906102699190612d06565b61090e565b60405161027b9190612f0a565b60405180910390f35b61029e60048036038101906102999190612d06565b61097a565b6040516102ab9190612f0a565b60405180910390f35b6102ce60048036038101906102c9919061305a565b61099a565b005b6102ea60048036038101906102e59190612d06565b610a5a565b6040516102f79190612dc3565b60405180910390f35b61031a60048036038101906103159190612d06565b610d85565b6040516103279190612dc3565b60405180910390f35b61034a60048036038101906103459190612d06565b610ff9565b6040516103579190612f0a565b60405180910390f35b610368611019565b6040516103759190612ed4565b60405180910390f35b6103986004803603810190610393919061305a565b611045565b005b6103a26110a0565b6040516103af9190612ea3565b60405180910390f35b6103d260048036038101906103cd9190612d06565b6111b0565b6040516103df9190612f0a565b60405180910390f35b61040260048036038101906103fd9190612d06565b6111d0565b60405161040f9190612f0a565b60405180910390f35b610432600480360381019061042d919061305a565b611284565b005b61044e600480360381019061044991906130a3565b611407565b005b610458611514565b6040516104659190612ea3565b60405180910390f35b6104886004803603810190610483919061305a565b611528565b005b6104a4600480360381019061049f9190612d06565b61157d565b005b6104c060048036038101906104bb919061311b565b611785565b005b6104dc60048036038101906104d79190612d06565b611924565b6040516104e99190612dc3565b60405180910390f35b61050c6004803603810190610507919061305a565b611983565b005b610516611ab5565b6040516105239190612ea3565b60405180910390f35b61054660048036038101906105419190612d06565b611ca8565b6040516105539190612dc3565b60405180910390f35b61057660048036038101906105719190612d06565b611d7c565b005b610580611f92565b60405161058d9190612ea3565b60405180910390f35b6105b060048036038101906105ab9190612d06565b612026565b005b6105bb3361090e565b6105f1576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105fa816111d0565b610632576106158160056000016120ff90919063ffffffff16565b156106325761063181600060020161219290919063ffffffff16565b5b50565b606060006001018054610647906131a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610673906131a6565b80156106c05780601f10610695576101008083540402835291602001916106c0565b820191906000526020600020905b8154815290600101906020018083116106a357829003601f168201915b5050505050905090565b6106d3336111b0565b610709576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061084b336005800160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061219290919063ffffffff16565b50565b606061085d6005600001612415565b905090565b600061086d336111b0565b6108a3576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008173ffffffffffffffffffffffffffffffffffffffff166000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036109705760019050610975565b600090505b919050565b60006109938260056000016120ff90919063ffffffff16565b9050919050565b6109a3336111b0565b156109e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109da90613249565b60405180910390fd5b6000815103610a27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1e906132db565b60405180910390fd5b610a40338260056000016124aa9092919063ffffffff16565b610a5733600060020161251190919063ffffffff16565b50565b6060610a65826111b0565b610a9b576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b6557503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610c6b57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610c6833600b60040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015610c5557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610c0b575b505050505061267590919063ffffffff16565b14155b15610d4557600b60040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018054610cc0906131a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610cec906131a6565b8015610d395780601f10610d0e57610100808354040283529160200191610d39565b820191906000526020600020905b815481529060010190602001808311610d1c57829003601f168201915b50505050509050610d80565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7790613347565b60405180910390fd5b919050565b6060610d90826111b0565b610dc6576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e9057503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610f9657507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610f9333600b60040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015610f8057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610f36575b505050505061267590919063ffffffff16565b14155b15610fb957610fb282600b60000161271a90919063ffffffff16565b9050610ff4565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610feb90613347565b60405180910390fd5b919050565b600061101282600060020161273a90919063ffffffff16565b9050919050565b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61104e336111b0565b611084576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61109d3382600b6000016127939092919063ffffffff16565b50565b60606110ab336111b0565b6110e1576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054806020026020016040519081016040528092919081815260200182805480156111a657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161115c575b5050505050905090565b60006111c982600b6000016120ff90919063ffffffff16565b9050919050565b60006111e98260056000016120ff90919063ffffffff16565b6111f6576000905061127f565b61120d82600060020161273a90919063ffffffff16565b1561121b576000905061127f565b6000600560040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461126a906131a6565b90500361127a576000905061127f565b600190505b919050565b61129b3360056000016120ff90919063ffffffff16565b6112d1576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6112e833600060020161273a90919063ffffffff16565b1561131f576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461136e906131a6565b9050036113a7576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008151036113eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e2906132db565b60405180910390fd5b611404338260056000016127939092919063ffffffff16565b50565b6114103361097a565b80611420575061141f336111d0565b5b15611460576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611457906133d9565b60405180910390fd5b60008251036114a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149b9061346b565b60405180910390fd5b6114bd3383600b6000016124aa9092919063ffffffff16565b80600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201908161150f9190613641565b505050565b6060611523600b600001612415565b905090565b6115313361090e565b611567576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600060010190816115799190613641565b5050565b611586336111b0565b6115bc576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115c5816111d0565b6115fb576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116d781600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054806020026020016040519081016040528092919081815260200182805480156116c457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161167a575b50505050506127b090919063ffffffff16565b61178257600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b61178e826111b0565b6117c4576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061188e57503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b6118cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118c490613347565b60405180910390fd5b80600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201908161191f9190613641565b505050565b606061192f8261097a565b611965576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61197c82600560000161271a90919063ffffffff16565b9050919050565b60008151036119c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119be90613785565b60405180910390fd5b6119de3360056000016120ff90919063ffffffff16565b611a14576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611a2b33600060020161273a90919063ffffffff16565b15611a62576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081611ab19190613641565b5050565b6060611ace3360056000016120ff90919063ffffffff16565b611b04576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611b1b33600060020161273a90919063ffffffff16565b15611b52576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054611ba1906131a6565b905003611bda576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005800160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805480602002602001604051908101604052809291908181526020018280548015611c9e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611c54575b5050505050905090565b6060600560040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054611cf7906131a6565b80601f0160208091040260200160405190810160405280929190818152602001828054611d23906131a6565b8015611d705780601f10611d4557610100808354040283529160200191611d70565b820191906000526020600020905b815481529060010190602001808311611d5357829003601f168201915b50505050509050919050565b611d85336111b0565b611dbb576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611dc4816111d0565b611dfa576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611eb7336005800160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061219290919063ffffffff16565b81600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611f8e336005800160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061251190919063ffffffff16565b5050565b6060600060020160000180548060200260200160405190810160405280929190818152602001828054801561201c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611fd2575b5050505050905090565b61202f336111b0565b612065576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61206e816111d0565b6120a4576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6120fb81600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016127e790919063ffffffff16565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361216f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161216690613817565b60405180910390fd5b60006121878385600001612a0c90919063ffffffff16565b511415905092915050565b8160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615612411578160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905560008260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600184600001805490506122939190613866565b905060008460000182815481106122ad576122ac61389a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828560020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508460020160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090558085600001848154811061237c5761237b61389a565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846000018054806123d8576123d76138c9565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555050505b5050565b60608160000160000180548060200260200160405190810160405280929190818152602001828054801561249e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612454575b50505050509050919050565b6124b483836120ff565b156124f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124eb90613944565b60405180910390fd5b61250c828285600001612ae09092919063ffffffff16565b505050565b8160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166126715760018260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555081600001805490508260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b600080600090505b83518110156126ef578273ffffffffffffffffffffffffffffffffffffffff168482815181106126b0576126af61389a565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036126dc5780915050612714565b80806126e790613964565b91505061267d565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b92915050565b60606127328284600001612a0c90919063ffffffff16565b905092915050565b60008260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6127ab828285600001612ae09092919063ffffffff16565b505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6127dd8484612675565b1415905092915050565b6000806128798480548060200260200160405190810160405280929190818152602001828054801561286e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612824575b505050505084612675565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81036128ac576000915050612a06565b60008480548060200260200160405190810160405280929190818152602001828054801561292f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116128e5575b5050505050905080600182516129459190613866565b815181106129565761295561389a565b5b60200260200101518583815481106129715761297061389a565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848054806129ca576129c96138c9565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556001925050505b92915050565b60608260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054612a5a906131a6565b80601f0160208091040260200160405190810160405280929190818152602001828054612a86906131a6565b8015612ad35780601f10612aa857610100808354040283529160200191612ad3565b820191906000526020600020905b815481529060010190602001808311612ab657829003601f168201915b5050505050905092915050565b8260030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16612c405782600001805490508360020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060018360030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555082600001829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b808360010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081612c8e9190613641565b50505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612cd382612ca8565b9050919050565b612ce381612cc8565b8114612cee57600080fd5b50565b600081359050612d0081612cda565b92915050565b600060208284031215612d1c57612d1b612c9e565b5b6000612d2a84828501612cf1565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612d6d578082015181840152602081019050612d52565b60008484015250505050565b6000601f19601f8301169050919050565b6000612d9582612d33565b612d9f8185612d3e565b9350612daf818560208601612d4f565b612db881612d79565b840191505092915050565b60006020820190508181036000830152612ddd8184612d8a565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612e1a81612cc8565b82525050565b6000612e2c8383612e11565b60208301905092915050565b6000602082019050919050565b6000612e5082612de5565b612e5a8185612df0565b9350612e6583612e01565b8060005b83811015612e96578151612e7d8882612e20565b9750612e8883612e38565b925050600181019050612e69565b5085935050505092915050565b60006020820190508181036000830152612ebd8184612e45565b905092915050565b612ece81612cc8565b82525050565b6000602082019050612ee96000830184612ec5565b92915050565b60008115159050919050565b612f0481612eef565b82525050565b6000602082019050612f1f6000830184612efb565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612f6782612d79565b810181811067ffffffffffffffff82111715612f8657612f85612f2f565b5b80604052505050565b6000612f99612c94565b9050612fa58282612f5e565b919050565b600067ffffffffffffffff821115612fc557612fc4612f2f565b5b612fce82612d79565b9050602081019050919050565b82818337600083830152505050565b6000612ffd612ff884612faa565b612f8f565b90508281526020810184848401111561301957613018612f2a565b5b613024848285612fdb565b509392505050565b600082601f83011261304157613040612f25565b5b8135613051848260208601612fea565b91505092915050565b6000602082840312156130705761306f612c9e565b5b600082013567ffffffffffffffff81111561308e5761308d612ca3565b5b61309a8482850161302c565b91505092915050565b600080604083850312156130ba576130b9612c9e565b5b600083013567ffffffffffffffff8111156130d8576130d7612ca3565b5b6130e48582860161302c565b925050602083013567ffffffffffffffff81111561310557613104612ca3565b5b6131118582860161302c565b9150509250929050565b6000806040838503121561313257613131612c9e565b5b600061314085828601612cf1565b925050602083013567ffffffffffffffff81111561316157613160612ca3565b5b61316d8582860161302c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806131be57607f821691505b6020821081036131d1576131d0613177565b5b50919050565b7f436f6e74726163743a204164647265737320616c72656164792072656769737460008201527f657265642061732070617469656e740000000000000000000000000000000000602082015250565b6000613233602f83612d3e565b915061323e826131d7565b604082019050919050565b6000602082019050818103600083015261326281613226565b9050919050565b7f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60008201527f7765642100000000000000000000000000000000000000000000000000000000602082015250565b60006132c5602483612d3e565b91506132d082613269565b604082019050919050565b600060208201905081810360008301526132f4816132b8565b9050919050565b7f4e6f7420416c6c6f776564000000000000000000000000000000000000000000600082015250565b6000613331600b83612d3e565b915061333c826132fb565b602082019050919050565b6000602082019050818103600083015261336081613324565b9050919050565b7f436f6e74726163743a204164647265737320616c72656164792072656769737460008201527f6572656420617320646f63746f72000000000000000000000000000000000000602082015250565b60006133c3602e83612d3e565b91506133ce82613367565b604082019050919050565b600060208201905081810360008301526133f2816133b6565b9050919050565b7f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60008201527f7765640000000000000000000000000000000000000000000000000000000000602082015250565b6000613455602383612d3e565b9150613460826133f9565b604082019050919050565b6000602082019050818103600083015261348481613448565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026134ed7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826134b0565b6134f786836134b0565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061353e6135396135348461350f565b613519565b61350f565b9050919050565b6000819050919050565b61355883613523565b61356c61356482613545565b8484546134bd565b825550505050565b600090565b613581613574565b61358c81848461354f565b505050565b5b818110156135b0576135a5600082613579565b600181019050613592565b5050565b601f8211156135f5576135c68161348b565b6135cf846134a0565b810160208510156135de578190505b6135f26135ea856134a0565b830182613591565b50505b505050565b600082821c905092915050565b6000613618600019846008026135fa565b1980831691505092915050565b60006136318383613607565b9150826002028217905092915050565b61364a82612d33565b67ffffffffffffffff81111561366357613662612f2f565b5b61366d82546131a6565b6136788282856135b4565b600060209050601f8311600181146136ab5760008415613699578287015190505b6136a38582613625565b86555061370b565b601f1984166136b98661348b565b60005b828110156136e1578489015182556001820191506020850194506020810190506136bc565b868310156136fe57848901516136fa601f891682613607565b8355505b6001600288020188555050505b505050505050565b7f436f6e74726163743a20456d707479207075626c6963206b6579206973206e6f60008201527f7420616c6c6f7765642100000000000000000000000000000000000000000000602082015250565b600061376f602a83612d3e565b915061377a82613713565b604082019050919050565b6000602082019050818103600083015261379e81613762565b9050919050565b7f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000613801602283612d3e565b915061380c826137a5565b604082019050919050565b60006020820190508181036000830152613830816137f4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006138718261350f565b915061387c8361350f565b925082820390508181111561389457613893613837565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500600082015250565b600061392e601f83612d3e565b9150613939826138f8565b602082019050919050565b6000602082019050818103600083015261395d81613921565b9050919050565b600061396f8261350f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036139a1576139a0613837565b5b60018201905091905056fea2646970667358221220cff8bde4b58a69890558f308a0a481021e01e49baccc6ec03042d4dc29bbc2f764736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 575,
        "contract": "contracts/Contract.sol:Contract",
        "label": "admin",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(Admin)550_storage"
      },
      {
        "astId": 578,
        "contract": "contracts/Contract.sol:Contract",
        "label": "doctors",
        "offset": 0,
        "slot": "5",
        "type": "t_struct(Doctors)572_storage"
      },
      {
        "astId": 581,
        "contract": "contracts/Contract.sol:Contract",
        "label": "patients",
        "offset": 0,
        "slot": "11",
        "type": "t_struct(Patients)559_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_address,t_struct(Map)13_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct AddToBoolMapping.Map)",
        "numberOfBytes": "32",
        "value": "t_struct(Map)13_storage"
      },
      "t_mapping(t_address,t_struct(MedicalRecord)542_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Contract.MedicalRecord)",
        "numberOfBytes": "32",
        "value": "t_struct(MedicalRecord)542_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Admin)550_storage": {
        "encoding": "inplace",
        "label": "struct Contract.Admin",
        "members": [
          {
            "astId": 544,
            "contract": "contracts/Contract.sol:Contract",
            "label": "user",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 546,
            "contract": "contracts/Contract.sol:Contract",
            "label": "public_key",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 549,
            "contract": "contracts/Contract.sol:Contract",
            "label": "pending_doctors",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(Map)13_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Doctors)572_storage": {
        "encoding": "inplace",
        "label": "struct Contract.Doctors",
        "members": [
          {
            "astId": 562,
            "contract": "contracts/Contract.sol:Contract",
            "label": "users",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Role)1453_storage"
          },
          {
            "astId": 566,
            "contract": "contracts/Contract.sol:Contract",
            "label": "public_keys",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_string_storage)"
          },
          {
            "astId": 571,
            "contract": "contracts/Contract.sol:Contract",
            "label": "docToPatAccess",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(Map)13_storage)"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Map)13_storage": {
        "encoding": "inplace",
        "label": "struct AddToBoolMapping.Map",
        "members": [
          {
            "astId": 4,
            "contract": "contracts/Contract.sol:Contract",
            "label": "keys",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 8,
            "contract": "contracts/Contract.sol:Contract",
            "label": "values",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 12,
            "contract": "contracts/Contract.sol:Contract",
            "label": "indexOf",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Map)204_storage": {
        "encoding": "inplace",
        "label": "struct AddToStrMapping.Map",
        "members": [
          {
            "astId": 191,
            "contract": "contracts/Contract.sol:Contract",
            "label": "keys",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 195,
            "contract": "contracts/Contract.sol:Contract",
            "label": "values",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_string_storage)"
          },
          {
            "astId": 199,
            "contract": "contracts/Contract.sol:Contract",
            "label": "indexOf",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 203,
            "contract": "contracts/Contract.sol:Contract",
            "label": "inserted",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(MedicalRecord)542_storage": {
        "encoding": "inplace",
        "label": "struct Contract.MedicalRecord",
        "members": [
          {
            "astId": 536,
            "contract": "contracts/Contract.sol:Contract",
            "label": "editor",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 539,
            "contract": "contracts/Contract.sol:Contract",
            "label": "viewers",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 541,
            "contract": "contracts/Contract.sol:Contract",
            "label": "key_data_hash",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Patients)559_storage": {
        "encoding": "inplace",
        "label": "struct Contract.Patients",
        "members": [
          {
            "astId": 553,
            "contract": "contracts/Contract.sol:Contract",
            "label": "users",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Role)1453_storage"
          },
          {
            "astId": 558,
            "contract": "contracts/Contract.sol:Contract",
            "label": "records",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(MedicalRecord)542_storage)"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Role)1453_storage": {
        "encoding": "inplace",
        "label": "struct Roles.Role",
        "members": [
          {
            "astId": 1452,
            "contract": "contracts/Contract.sol:Contract",
            "label": "bearer",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Map)204_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}