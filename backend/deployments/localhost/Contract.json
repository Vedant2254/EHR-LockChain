{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Contract__DoctorPublicKeyMissing",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__NotAdmin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__NotDoctor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__NotPatient",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__PendingDoctorApproval",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "addDoctor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_key_data_hash",
          "type": "string"
        }
      ],
      "name": "addPatient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "approveDoctor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "changeEditorAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_public_key",
          "type": "string"
        }
      ],
      "name": "confirmAddDr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdminPubKey",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllDrs",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllPats",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDocPats",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getDrHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getDrPubKey",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPatDr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getPatGeneralHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getPatRecordHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPatViewers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPendingDrs",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "grantViewerAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isDoctor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isDoctorRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isPatient",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isPendingDoctor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "removeEditorAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "revokeViewerAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_public_key",
          "type": "string"
        }
      ],
      "name": "setAdminPubKey",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "setDrHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "setPatGeneralHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "setPatRecordHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2029e82cb506e3b4d301e9dd2e7237ef46f975300d327fbd0af0261a6ac3f6d1",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "3260191",
    "logsBloom": "0x
    "blockHash": "0xe892411da961322007e7263daaeed19b4dc2c3a4d96fa075f32c7f04bc4e7037",
    "transactionHash": "0x2029e82cb506e3b4d301e9dd2e7237ef46f975300d327fbd0af0261a6ac3f6d1",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "3260191",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "c3dedd36c480ff94f9b4442220633ed3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Contract__DoctorPublicKeyMissing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__NotAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__NotDoctor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__NotPatient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__PendingDoctorApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"addDoctor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_key_data_hash\",\"type\":\"string\"}],\"name\":\"addPatient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"approveDoctor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"changeEditorAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_public_key\",\"type\":\"string\"}],\"name\":\"confirmAddDr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdminPubKey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllDrs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPats\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDocPats\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getDrHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getDrPubKey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPatDr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getPatGeneralHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getPatRecordHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPatViewers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPendingDrs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"grantViewerAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isDoctor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isDoctorRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isPatient\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isPendingDoctor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeEditorAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"revokeViewerAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_public_key\",\"type\":\"string\"}],\"name\":\"setAdminPubKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setDrHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setPatGeneralHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setPatRecordHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Contract.sol\":\"Contract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AddToBoolMapping.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary AddToBoolMapping {\\n    // mapping address => bool\\n    struct Map {\\n        address[] keys;\\n        mapping(address => bool) values;\\n        mapping(address => uint256) indexOf;\\n    }\\n\\n    function get(Map storage map, address key) internal view returns (bool) {\\n        return map.values[key];\\n    }\\n\\n    function getKeys(Map storage map) internal view returns (address[] memory) {\\n        return map.keys;\\n    }\\n\\n    function getKeyAtIndex(Map storage map, uint256 index) internal view returns (address) {\\n        return map.keys[index];\\n    }\\n\\n    function size(Map storage map) internal view returns (uint256) {\\n        return map.keys.length;\\n    }\\n\\n    function set(Map storage map, address key) internal {\\n        if (map.values[key]) return;\\n\\n        // add address => true mapping to values\\n        map.values[key] = true;\\n\\n        // add index of address to indexOf mapping\\n        map.indexOf[key] = map.keys.length;\\n\\n        // add address to keys\\n        map.keys.push(key);\\n    }\\n\\n    function unset(Map storage map, address key) internal {\\n        if (!map.values[key]) return;\\n\\n        // remove from values\\n        delete map.values[key];\\n\\n        // important backups\\n        uint256 index = map.indexOf[key];\\n        uint256 lastIndex = map.keys.length - 1;\\n        address lastKey = map.keys[lastIndex];\\n\\n        // update indexOf last element\\n        map.indexOf[lastKey] = index;\\n        delete map.indexOf[key];\\n\\n        // remove from keys\\n        map.keys[index] = lastKey;\\n        map.keys.pop();\\n    }\\n}\\n\",\"keccak256\":\"0xf4944f25058b889d9bebf1d53283eab488e3200f3e2a48e47f52849b113644cc\",\"license\":\"MIT\"},\"contracts/AddToStrMapping.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary AddToStrMapping {\\n    // mapping address => string\\n    struct Map {\\n        address[] keys;\\n        mapping(address => string) values;\\n        mapping(address => uint256) indexOf;\\n        mapping(address => bool) inserted;\\n    }\\n\\n    function get(Map storage map, address key) internal view returns (string memory) {\\n        return map.values[key];\\n    }\\n\\n    function getKeys(Map storage map) internal view returns (address[] memory) {\\n        return map.keys;\\n    }\\n\\n    function getKeyAtIndex(Map storage map, uint256 index) internal view returns (address) {\\n        return map.keys[index];\\n    }\\n\\n    function size(Map storage map) internal view returns (uint256) {\\n        return map.keys.length;\\n    }\\n\\n    function set(Map storage map, address key, string memory val) internal {\\n        if (!map.inserted[key]) {\\n            // add index of address to indexOf mapping\\n            map.indexOf[key] = map.keys.length;\\n\\n            // make value of address in inserted to true\\n            map.inserted[key] = true;\\n\\n            // add address to keys\\n            map.keys.push(key);\\n        }\\n\\n        // add address => true mapping to values\\n        map.values[key] = val;\\n    }\\n\\n    function remove(Map storage map, address key) internal {\\n        if (!map.inserted[key]) return;\\n\\n        // remove from values\\n        delete map.values[key];\\n        delete map.inserted[key];\\n\\n        // important backups\\n        uint256 index = map.indexOf[key];\\n        uint256 lastIndex = map.keys.length - 1;\\n        address lastKey = map.keys[lastIndex];\\n\\n        // update indexOf last element\\n        map.indexOf[lastKey] = index;\\n        delete map.indexOf[key];\\n\\n        // remove from keys\\n        map.keys[index] = lastKey;\\n        map.keys.pop();\\n    }\\n}\\n\",\"keccak256\":\"0x44a19745fb3130275849bcaaf82f085c8a50d1d105b431e5c6df0625e9289f14\",\"license\":\"MIT\"},\"contracts/AddressArrayUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary AddressArrayUtils {\\n    function indexOf(address[] memory arr, address key) internal pure returns (int256) {\\n        for (uint256 i = 0; i < arr.length; i++) {\\n            if (arr[i] == key) return int256(i);\\n        }\\n        return -1;\\n    }\\n\\n    function contains(address[] memory arr, address key) internal pure returns (bool) {\\n        return indexOf(arr, key) != -1;\\n    }\\n\\n    function remove(address[] storage arr, address key) internal returns (bool) {\\n        int256 i = indexOf(arr, key);\\n\\n        if (i == -1) return false;\\n\\n        address[] memory temp = arr;\\n        arr[uint256(i)] = temp[temp.length - 1];\\n        arr.pop();\\n\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x29555ad812fd5509ead59914b9bc59285a5f7b96bedcfed493bca55994271d67\",\"license\":\"MIT\"},\"contracts/Contract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"./Roles.sol\\\";\\nimport \\\"./AddressArrayUtils.sol\\\";\\nimport \\\"./AddToBoolMapping.sol\\\";\\n\\nerror Contract__NotAdmin();\\nerror Contract__NotDoctor();\\nerror Contract__NotPatient();\\nerror Contract__PendingDoctorApproval();\\nerror Contract__DoctorPublicKeyMissing();\\n\\ncontract Contract {\\n    // using methods of Roles for Role struct in Roles\\n    using Roles for Roles.Role;\\n    using AddToBoolMapping for AddToBoolMapping.Map;\\n    using AddressArrayUtils for address[];\\n\\n    struct MedicalRecord {\\n        address editor;\\n        address[] viewers;\\n        string key_data_hash;\\n    }\\n\\n    struct Admin {\\n        address user;\\n        string public_key;\\n        AddToBoolMapping.Map pending_doctors;\\n    }\\n\\n    struct Patients {\\n        Roles.Role users;\\n        mapping(address => MedicalRecord) records;\\n    }\\n\\n    struct Doctors {\\n        Roles.Role users;\\n        mapping(address => string) public_keys;\\n        mapping(address => AddToBoolMapping.Map) docToPatAccess;\\n    }\\n\\n    // defining roles - contains hashes\\n    Admin private admin;\\n    Doctors private doctors;\\n    Patients private patients;\\n\\n    // Initializing admin\\n    constructor() {\\n        admin.user = msg.sender;\\n    }\\n\\n    // Admin methods\\n    function getAdmin() public view returns (address) {\\n        return admin.user;\\n    }\\n\\n    function isAdmin(address _address) public view returns (bool) {\\n        if (admin.user == _address) return true;\\n        return false;\\n    }\\n\\n    function setAdminPubKey(string memory _public_key) public onlyAdmin {\\n        admin.public_key = _public_key;\\n    }\\n\\n    function getAdminPubKey() public view returns (string memory) {\\n        return admin.public_key;\\n    }\\n\\n    // Doctor methods\\n    function isDoctorRegistered(address _address) public view returns (bool) {\\n        return doctors.users.has(_address);\\n    }\\n\\n    function isPendingDoctor(address _address) public view returns (bool) {\\n        return admin.pending_doctors.get(_address);\\n    }\\n\\n    function isDoctor(address _address) public view returns (bool) {\\n        if (!doctors.users.has(_address)) return false;\\n        if (admin.pending_doctors.get(_address)) return false;\\n        if (bytes(doctors.public_keys[_address]).length == 0) return false;\\n        return true;\\n    }\\n\\n    function addDoctor(string memory _hash) public {\\n        if (isPatient(msg.sender)) revert(\\\"Contract: Address already registered as patient\\\");\\n        if (bytes(_hash).length == 0) revert(\\\"Contract: Empty hash is not allowed!\\\");\\n        doctors.users.add(msg.sender, _hash);\\n        admin.pending_doctors.set(msg.sender);\\n    }\\n\\n    function approveDoctor(address _address) public onlyAdmin {\\n        if (isDoctor(_address)) return;\\n        if (!doctors.users.has(_address)) return;\\n        admin.pending_doctors.unset(_address);\\n    }\\n\\n    function confirmAddDr(string memory _public_key) public {\\n        if (bytes(_public_key).length == 0) revert(\\\"Contract: Empty public key is not allowed!\\\");\\n        if (!doctors.users.has(msg.sender)) revert Contract__NotDoctor();\\n        if (admin.pending_doctors.get(msg.sender)) revert Contract__PendingDoctorApproval();\\n        doctors.public_keys[msg.sender] = _public_key;\\n    }\\n\\n    function setDrHash(string memory _hash) public onlyDoctor {\\n        if (bytes(_hash).length == 0) revert(\\\"Contract: Empty hash is not allowed!\\\");\\n        doctors.users.setHash(msg.sender, _hash);\\n    }\\n\\n    function getDrHash(address _address) public view returns (string memory) {\\n        if (!isDoctorRegistered(_address)) revert Contract__NotDoctor();\\n        return doctors.users.getHash(_address);\\n    }\\n\\n    function getDrPubKey(address _address) public view returns (string memory) {\\n        return doctors.public_keys[_address];\\n    }\\n\\n    function getAllDrs() public view returns (address[] memory) {\\n        return doctors.users.getMembers();\\n    }\\n\\n    function getPendingDrs() public view returns (address[] memory) {\\n        return admin.pending_doctors.keys;\\n    }\\n\\n    function getDocPats() public view onlyDoctor returns (address[] memory) {\\n        return doctors.docToPatAccess[msg.sender].keys;\\n    }\\n\\n    // Patient methods\\n    function isPatient(address _address) public view returns (bool) {\\n        return patients.users.has(_address);\\n    }\\n\\n    function addPatient(string memory _hash, string memory _key_data_hash) public {\\n        if (isDoctorRegistered(msg.sender) || isDoctor(msg.sender))\\n            revert(\\\"Contract: Address already registered as doctor\\\");\\n        if (bytes(_hash).length == 0) revert(\\\"Contract: Empty hash is not allowed\\\");\\n        patients.users.add(msg.sender, _hash);\\n        patients.records[msg.sender].key_data_hash = _key_data_hash;\\n    }\\n\\n    function setPatGeneralHash(string memory _hash) public onlyPatient {\\n        patients.users.setHash(msg.sender, _hash);\\n    }\\n\\n    function getPatGeneralHash(address _address) public view returns (string memory) {\\n        if (!isPatient(_address)) revert Contract__NotPatient();\\n\\n        if (\\n            msg.sender == _address ||\\n            patients.records[_address].editor == msg.sender ||\\n            patients.records[_address].viewers.indexOf(msg.sender) != -1\\n        ) return patients.users.getHash(_address);\\n\\n        revert(\\\"Not Allowed\\\");\\n    }\\n\\n    function setPatRecordHash(address _address, string memory _hash) public {\\n        if (!isPatient(_address)) revert Contract__NotPatient();\\n        if (!(msg.sender == _address || patients.records[_address].editor == msg.sender))\\n            revert(\\\"Not Allowed\\\");\\n        patients.records[_address].key_data_hash = _hash;\\n    }\\n\\n    function getPatRecordHash(address _address) public view returns (string memory) {\\n        if (!isPatient(_address)) revert Contract__NotPatient();\\n\\n        if (\\n            msg.sender == _address ||\\n            patients.records[_address].editor == msg.sender ||\\n            patients.records[_address].viewers.indexOf(msg.sender) != -1\\n        ) return patients.records[_address].key_data_hash;\\n\\n        revert(\\\"Not Allowed\\\");\\n    }\\n\\n    function getAllPats() public view returns (address[] memory) {\\n        return patients.users.getMembers();\\n    }\\n\\n    function changeEditorAccess(address _address) public onlyPatient {\\n        // pending update - when user changes access, symmetric key S must be changed\\n        if (!isDoctor(_address)) revert Contract__NotDoctor();\\n\\n        // remove old editor access\\n        address old_editor = patients.records[msg.sender].editor;\\n        doctors.docToPatAccess[old_editor].unset(msg.sender);\\n\\n        // add new editor access\\n        patients.records[msg.sender].editor = _address;\\n        doctors.docToPatAccess[_address].set(msg.sender);\\n    }\\n\\n    function removeEditorAccess() public onlyPatient {\\n        address old_editor = patients.records[msg.sender].editor;\\n        patients.records[msg.sender].editor = address(0);\\n        doctors.docToPatAccess[old_editor].unset(msg.sender);\\n    }\\n\\n    function getPatDr() public view onlyPatient returns (address) {\\n        return patients.records[msg.sender].editor;\\n    }\\n\\n    function grantViewerAccess(address _address) public onlyPatient {\\n        if (!isDoctor(_address)) revert Contract__NotDoctor();\\n\\n        if (!patients.records[msg.sender].viewers.contains(_address)) {\\n            patients.records[msg.sender].viewers.push(_address);\\n        }\\n    }\\n\\n    function revokeViewerAccess(address _address) public onlyPatient {\\n        // pending update - when user revokes access, symmetric key S must be changed\\n        if (!isDoctor(_address)) revert Contract__NotDoctor();\\n\\n        patients.records[msg.sender].viewers.remove(_address);\\n    }\\n\\n    function getPatViewers() public view onlyPatient returns (address[] memory) {\\n        return patients.records[msg.sender].viewers;\\n    }\\n\\n    // modifiers\\n    modifier onlyAdmin() {\\n        if (!isAdmin(msg.sender)) revert Contract__NotAdmin();\\n        _;\\n    }\\n\\n    modifier onlyDoctor() {\\n        if (!doctors.users.has(msg.sender)) revert Contract__NotDoctor();\\n        if (admin.pending_doctors.get(msg.sender)) revert Contract__PendingDoctorApproval();\\n        if (bytes(doctors.public_keys[msg.sender]).length == 0)\\n            revert Contract__DoctorPublicKeyMissing();\\n        _;\\n    }\\n\\n    modifier onlyPatient() {\\n        if (!isPatient(msg.sender)) revert Contract__NotPatient();\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x78f65335cf2e7ed27c916a20c5190513f518c9fc6b955896a45d238c39dde7c9\",\"license\":\"MIT\"},\"contracts/Roles.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"./AddToStrMapping.sol\\\";\\n\\nlibrary Roles {\\n    using AddToStrMapping for AddToStrMapping.Map;\\n\\n    // This is to keep track of roles\\n    // Reduces searching cost\\n    struct Role {\\n        AddToStrMapping.Map bearer;\\n    }\\n\\n    function add(Role storage role, address account, string memory hash) internal {\\n        require(!has(role, account), \\\"Roles: account already has role\\\");\\n        role.bearer.set(account, hash);\\n    }\\n\\n    function remove(Role storage role, address account) internal {\\n        require(has(role, account), \\\"Roles: account does not have role\\\");\\n        role.bearer.remove(account);\\n    }\\n\\n    function has(Role storage role, address account) internal view returns (bool) {\\n        require(account != address(0), \\\"Roles: account is the zero address\\\");\\n        return bytes(role.bearer.get(account)).length != 0;\\n    }\\n\\n    function setHash(Role storage role, address account, string memory _hash) internal {\\n        role.bearer.set(account, _hash);\\n    }\\n\\n    function getHash(Role storage role, address account) internal view returns (string memory) {\\n        return role.bearer.get(account);\\n    }\\n\\n    function getMembers(Role storage role) internal view returns (address[] memory) {\\n        return role.bearer.keys;\\n    }\\n}\\n\",\"keccak256\":\"0x35319b78de3f838d4fdae2c499ccf5b4ed9407222e38d041a303fb7b42bf47aa\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506139e2806100636000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80638f47263911610104578063bf3185e5116100a2578063df70345c11610071578063df70345c14610540578063e2877b4e1461055c578063ecfe0cbe1461057a578063f7a03a1e14610596576101cf565b8063bf3185e514610494578063cce9d43e146104c4578063dc823aaf146104f4578063dd36d4ae14610524576101cf565b8063996440c6116100de578063996440c61461041057806399eedd2a14610440578063afb97e3d1461045c578063b1e758a414610478576101cf565b80638f472639146103a45780638f7f43a9146103c25780638f9c79ed146103e0576101cf565b806339b0f922116101715780636650b3f01161014b5780636650b3f01461030a5780636e9960c31461033a5780637428197f146103585780637855039014610374576101cf565b806339b0f922146102a05780635ced594b146102d05780636160a5c2146102ee576101cf565b80631d613801116101ad5780631d6138011461022c5780631da3e2dc14610236578063239ee6c11461025457806324d7806c14610270576101cf565b80630be61700146101d45780630d52fb4d146101f0578063116461e91461020e575b600080fd5b6101ee60048036038101906101e99190612dee565b6105b2565b005b6101f8610672565b6040516102059190612f27565b60405180910390f35b610216610865565b6040516102239190612fc8565b60405180910390f35b6102346108fa565b005b61023e610a7e565b60405161024b9190612f27565b60405180910390f35b61026e60048036038101906102699190612fea565b610a92565b005b61028a6004803603810190610285919061308e565b610b9f565b60405161029791906130d6565b60405180910390f35b6102ba60048036038101906102b5919061308e565b610c0b565b6040516102c79190612fc8565b60405180910390f35b6102d8610f36565b6040516102e59190612f27565b60405180910390f35b6103086004803603810190610303919061308e565b610f4a565b005b610324600480360381019061031f919061308e565b610fcd565b6040516103319190612fc8565b60405180910390f35b610342611241565b60405161034f9190613100565b60405180910390f35b610372600480360381019061036d9190612dee565b61126d565b005b61038e6004803603810190610389919061308e565b6112c8565b60405161039b91906130d6565b60405180910390f35b6103ac6112e8565b6040516103b99190613100565b60405180910390f35b6103ca611394565b6040516103d79190612f27565b60405180910390f35b6103fa60048036038101906103f5919061308e565b6114a4565b60405161040791906130d6565b60405180910390f35b61042a6004803603810190610425919061308e565b6114c4565b60405161043791906130d6565b60405180910390f35b61045a60048036038101906104559190612dee565b611578565b005b61047660048036038101906104719190612dee565b6116fb565b005b610492600480360381019061048d919061308e565b611750565b005b6104ae60048036038101906104a9919061308e565b611958565b6040516104bb91906130d6565b60405180910390f35b6104de60048036038101906104d9919061308e565b611978565b6040516104eb9190612fc8565b60405180910390f35b61050e6004803603810190610509919061308e565b6119d7565b60405161051b9190612fc8565b60405180910390f35b61053e6004803603810190610539919061311b565b611aab565b005b61055a6004803603810190610555919061308e565b611c4a565b005b610564611e60565b6040516105719190612f27565b60405180910390f35b610594600480360381019061058f9190612dee565b611ef4565b005b6105b060048036038101906105ab919061308e565b612026565b005b6105bb336114a4565b156105fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f2906131e9565b60405180910390fd5b600081510361063f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106369061327b565b60405180910390fd5b610658338260056000016120ff9092919063ffffffff16565b61066f33600060020161216690919063ffffffff16565b50565b606061068b3360056000016122ca90919063ffffffff16565b6106c1576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106d833600060020161235d90919063ffffffff16565b1561070f576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461075e906132ca565b905003610797576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005800160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180548060200260200160405190810160405280929190818152602001828054801561085b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610811575b5050505050905090565b606060006001018054610877906132ca565b80601f01602080910402602001604051908101604052809291908181526020018280546108a3906132ca565b80156108f05780601f106108c5576101008083540402835291602001916108f0565b820191906000526020600020905b8154815290600101906020018083116108d357829003601f168201915b5050505050905090565b610903336114a4565b610939576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610a7b336005800160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206123b690919063ffffffff16565b50565b6060610a8d6005600001612639565b905090565b610a9b336112c8565b80610aab5750610aaa336114c4565b5b15610aeb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae29061336d565b60405180910390fd5b6000825103610b2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b26906133ff565b60405180910390fd5b610b483383600b6000016120ff9092919063ffffffff16565b80600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002019081610b9a91906135d5565b505050565b60008173ffffffffffffffffffffffffffffffffffffffff166000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610c015760019050610c06565b600090505b919050565b6060610c16826114a4565b610c4c576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610d1657503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610e1c57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610e1933600b60040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015610e0657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610dbc575b50505050506126ce90919063ffffffff16565b14155b15610ef657600b60040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018054610e71906132ca565b80601f0160208091040260200160405190810160405280929190818152602001828054610e9d906132ca565b8015610eea5780601f10610ebf57610100808354040283529160200191610eea565b820191906000526020600020905b815481529060010190602001808311610ecd57829003601f168201915b50505050509050610f31565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f28906136f3565b60405180910390fd5b919050565b6060610f45600b600001612639565b905090565b610f5333610b9f565b610f89576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f92816114c4565b610fca57610fad8160056000016122ca90919063ffffffff16565b15610fca57610fc98160006002016123b690919063ffffffff16565b5b50565b6060610fd8826114a4565b61100e576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806110d857503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b806111de57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6111db33600b60040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054806020026020016040519081016040528092919081815260200182805480156111c857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161117e575b50505050506126ce90919063ffffffff16565b14155b15611201576111fa82600b60000161277390919063ffffffff16565b905061123c565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611233906136f3565b60405180910390fd5b919050565b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611276336114a4565b6112ac576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6112c53382600b6000016127939092919063ffffffff16565b50565b60006112e18260056000016122ca90919063ffffffff16565b9050919050565b60006112f3336114a4565b611329576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606061139f336114a4565b6113d5576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561149a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611450575b5050505050905090565b60006114bd82600b6000016122ca90919063ffffffff16565b9050919050565b60006114dd8260056000016122ca90919063ffffffff16565b6114ea5760009050611573565b61150182600060020161235d90919063ffffffff16565b1561150f5760009050611573565b6000600560040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461155e906132ca565b90500361156e5760009050611573565b600190505b919050565b61158f3360056000016122ca90919063ffffffff16565b6115c5576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115dc33600060020161235d90919063ffffffff16565b15611613576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054611662906132ca565b90500361169b576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008151036116df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116d69061327b565b60405180910390fd5b6116f8338260056000016127939092919063ffffffff16565b50565b61170433610b9f565b61173a576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000600101908161174c91906135d5565b5050565b611759336114a4565b61178f576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611798816114c4565b6117ce576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6118aa81600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561189757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161184d575b50505050506127b090919063ffffffff16565b61195557600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600061197182600060020161235d90919063ffffffff16565b9050919050565b6060611983826112c8565b6119b9576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6119d082600560000161277390919063ffffffff16565b9050919050565b6060600560040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054611a26906132ca565b80601f0160208091040260200160405190810160405280929190818152602001828054611a52906132ca565b8015611a9f5780601f10611a7457610100808354040283529160200191611a9f565b820191906000526020600020905b815481529060010190602001808311611a8257829003601f168201915b50505050509050919050565b611ab4826114a4565b611aea576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611bb457503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b611bf3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bea906136f3565b60405180910390fd5b80600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002019081611c4591906135d5565b505050565b611c53336114a4565b611c89576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611c92816114c4565b611cc8576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611d85336005800160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206123b690919063ffffffff16565b81600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611e5c336005800160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061216690919063ffffffff16565b5050565b60606000600201600001805480602002602001604051908101604052809291908181526020018280548015611eea57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611ea0575b5050505050905090565b6000815103611f38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f2f90613785565b60405180910390fd5b611f4f3360056000016122ca90919063ffffffff16565b611f85576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611f9c33600060020161235d90919063ffffffff16565b15611fd3576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020908161202291906135d5565b5050565b61202f336114a4565b612065576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61206e816114c4565b6120a4576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6120fb81600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016127e790919063ffffffff16565b5050565b61210983836122ca565b15612149576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612140906137f1565b60405180910390fd5b612161828285600001612a0c9092919063ffffffff16565b505050565b8160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166122c65760018260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555081600001805490508260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361233a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161233190613883565b60405180910390fd5b60006123528385600001612bc090919063ffffffff16565b511415905092915050565b60008260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b8160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615612635578160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905560008260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600184600001805490506124b791906138d2565b905060008460000182815481106124d1576124d0613906565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828560020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508460020160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055808560000184815481106125a05761259f613906565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846000018054806125fc576125fb613935565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555050505b5050565b6060816000016000018054806020026020016040519081016040528092919081815260200182805480156126c257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612678575b50505050509050919050565b600080600090505b8351811015612748578273ffffffffffffffffffffffffffffffffffffffff1684828151811061270957612708613906565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603612735578091505061276d565b808061274090613964565b9150506126d6565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b92915050565b606061278b8284600001612bc090919063ffffffff16565b905092915050565b6127ab828285600001612a0c9092919063ffffffff16565b505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6127dd84846126ce565b1415905092915050565b6000806128798480548060200260200160405190810160405280929190818152602001828054801561286e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612824575b5050505050846126ce565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81036128ac576000915050612a06565b60008480548060200260200160405190810160405280929190818152602001828054801561292f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116128e5575b50505050509050806001825161294591906138d2565b8151811061295657612955613906565b5b602002602001015185838154811061297157612970613906565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848054806129ca576129c9613935565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556001925050505b92915050565b8260030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16612b6c5782600001805490508360020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060018360030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555082600001829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b808360010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081612bba91906135d5565b50505050565b60608260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054612c0e906132ca565b80601f0160208091040260200160405190810160405280929190818152602001828054612c3a906132ca565b8015612c875780601f10612c5c57610100808354040283529160200191612c87565b820191906000526020600020905b815481529060010190602001808311612c6a57829003601f168201915b5050505050905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612cfb82612cb2565b810181811067ffffffffffffffff82111715612d1a57612d19612cc3565b5b80604052505050565b6000612d2d612c94565b9050612d398282612cf2565b919050565b600067ffffffffffffffff821115612d5957612d58612cc3565b5b612d6282612cb2565b9050602081019050919050565b82818337600083830152505050565b6000612d91612d8c84612d3e565b612d23565b905082815260208101848484011115612dad57612dac612cad565b5b612db8848285612d6f565b509392505050565b600082601f830112612dd557612dd4612ca8565b5b8135612de5848260208601612d7e565b91505092915050565b600060208284031215612e0457612e03612c9e565b5b600082013567ffffffffffffffff811115612e2257612e21612ca3565b5b612e2e84828501612dc0565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612e8e82612e63565b9050919050565b612e9e81612e83565b82525050565b6000612eb08383612e95565b60208301905092915050565b6000602082019050919050565b6000612ed482612e37565b612ede8185612e42565b9350612ee983612e53565b8060005b83811015612f1a578151612f018882612ea4565b9750612f0c83612ebc565b925050600181019050612eed565b5085935050505092915050565b60006020820190508181036000830152612f418184612ec9565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612f83578082015181840152602081019050612f68565b60008484015250505050565b6000612f9a82612f49565b612fa48185612f54565b9350612fb4818560208601612f65565b612fbd81612cb2565b840191505092915050565b60006020820190508181036000830152612fe28184612f8f565b905092915050565b6000806040838503121561300157613000612c9e565b5b600083013567ffffffffffffffff81111561301f5761301e612ca3565b5b61302b85828601612dc0565b925050602083013567ffffffffffffffff81111561304c5761304b612ca3565b5b61305885828601612dc0565b9150509250929050565b61306b81612e83565b811461307657600080fd5b50565b60008135905061308881613062565b92915050565b6000602082840312156130a4576130a3612c9e565b5b60006130b284828501613079565b91505092915050565b60008115159050919050565b6130d0816130bb565b82525050565b60006020820190506130eb60008301846130c7565b92915050565b6130fa81612e83565b82525050565b600060208201905061311560008301846130f1565b92915050565b6000806040838503121561313257613131612c9e565b5b600061314085828601613079565b925050602083013567ffffffffffffffff81111561316157613160612ca3565b5b61316d85828601612dc0565b9150509250929050565b7f436f6e74726163743a204164647265737320616c72656164792072656769737460008201527f657265642061732070617469656e740000000000000000000000000000000000602082015250565b60006131d3602f83612f54565b91506131de82613177565b604082019050919050565b60006020820190508181036000830152613202816131c6565b9050919050565b7f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60008201527f7765642100000000000000000000000000000000000000000000000000000000602082015250565b6000613265602483612f54565b915061327082613209565b604082019050919050565b6000602082019050818103600083015261329481613258565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806132e257607f821691505b6020821081036132f5576132f461329b565b5b50919050565b7f436f6e74726163743a204164647265737320616c72656164792072656769737460008201527f6572656420617320646f63746f72000000000000000000000000000000000000602082015250565b6000613357602e83612f54565b9150613362826132fb565b604082019050919050565b600060208201905081810360008301526133868161334a565b9050919050565b7f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60008201527f7765640000000000000000000000000000000000000000000000000000000000602082015250565b60006133e9602383612f54565b91506133f48261338d565b604082019050919050565b60006020820190508181036000830152613418816133dc565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026134817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613444565b61348b8683613444565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006134d26134cd6134c8846134a3565b6134ad565b6134a3565b9050919050565b6000819050919050565b6134ec836134b7565b6135006134f8826134d9565b848454613451565b825550505050565b600090565b613515613508565b6135208184846134e3565b505050565b5b818110156135445761353960008261350d565b600181019050613526565b5050565b601f8211156135895761355a8161341f565b61356384613434565b81016020851015613572578190505b61358661357e85613434565b830182613525565b50505b505050565b600082821c905092915050565b60006135ac6000198460080261358e565b1980831691505092915050565b60006135c5838361359b565b9150826002028217905092915050565b6135de82612f49565b67ffffffffffffffff8111156135f7576135f6612cc3565b5b61360182546132ca565b61360c828285613548565b600060209050601f83116001811461363f576000841561362d578287015190505b61363785826135b9565b86555061369f565b601f19841661364d8661341f565b60005b8281101561367557848901518255600182019150602085019450602081019050613650565b86831015613692578489015161368e601f89168261359b565b8355505b6001600288020188555050505b505050505050565b7f4e6f7420416c6c6f776564000000000000000000000000000000000000000000600082015250565b60006136dd600b83612f54565b91506136e8826136a7565b602082019050919050565b6000602082019050818103600083015261370c816136d0565b9050919050565b7f436f6e74726163743a20456d707479207075626c6963206b6579206973206e6f60008201527f7420616c6c6f7765642100000000000000000000000000000000000000000000602082015250565b600061376f602a83612f54565b915061377a82613713565b604082019050919050565b6000602082019050818103600083015261379e81613762565b9050919050565b7f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500600082015250565b60006137db601f83612f54565b91506137e6826137a5565b602082019050919050565b6000602082019050818103600083015261380a816137ce565b9050919050565b7f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061386d602283612f54565b915061387882613811565b604082019050919050565b6000602082019050818103600083015261389c81613860565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006138dd826134a3565b91506138e8836134a3565b9250828203905081811115613900576138ff6138a3565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600061396f826134a3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036139a1576139a06138a3565b5b60018201905091905056fea26469706673582212203ebc9d26ced000f66f6143b81601033d6d0d13ad819c4d455a81d67de7462b6b64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c80638f47263911610104578063bf3185e5116100a2578063df70345c11610071578063df70345c14610540578063e2877b4e1461055c578063ecfe0cbe1461057a578063f7a03a1e14610596576101cf565b8063bf3185e514610494578063cce9d43e146104c4578063dc823aaf146104f4578063dd36d4ae14610524576101cf565b8063996440c6116100de578063996440c61461041057806399eedd2a14610440578063afb97e3d1461045c578063b1e758a414610478576101cf565b80638f472639146103a45780638f7f43a9146103c25780638f9c79ed146103e0576101cf565b806339b0f922116101715780636650b3f01161014b5780636650b3f01461030a5780636e9960c31461033a5780637428197f146103585780637855039014610374576101cf565b806339b0f922146102a05780635ced594b146102d05780636160a5c2146102ee576101cf565b80631d613801116101ad5780631d6138011461022c5780631da3e2dc14610236578063239ee6c11461025457806324d7806c14610270576101cf565b80630be61700146101d45780630d52fb4d146101f0578063116461e91461020e575b600080fd5b6101ee60048036038101906101e99190612dee565b6105b2565b005b6101f8610672565b6040516102059190612f27565b60405180910390f35b610216610865565b6040516102239190612fc8565b60405180910390f35b6102346108fa565b005b61023e610a7e565b60405161024b9190612f27565b60405180910390f35b61026e60048036038101906102699190612fea565b610a92565b005b61028a6004803603810190610285919061308e565b610b9f565b60405161029791906130d6565b60405180910390f35b6102ba60048036038101906102b5919061308e565b610c0b565b6040516102c79190612fc8565b60405180910390f35b6102d8610f36565b6040516102e59190612f27565b60405180910390f35b6103086004803603810190610303919061308e565b610f4a565b005b610324600480360381019061031f919061308e565b610fcd565b6040516103319190612fc8565b60405180910390f35b610342611241565b60405161034f9190613100565b60405180910390f35b610372600480360381019061036d9190612dee565b61126d565b005b61038e6004803603810190610389919061308e565b6112c8565b60405161039b91906130d6565b60405180910390f35b6103ac6112e8565b6040516103b99190613100565b60405180910390f35b6103ca611394565b6040516103d79190612f27565b60405180910390f35b6103fa60048036038101906103f5919061308e565b6114a4565b60405161040791906130d6565b60405180910390f35b61042a6004803603810190610425919061308e565b6114c4565b60405161043791906130d6565b60405180910390f35b61045a60048036038101906104559190612dee565b611578565b005b61047660048036038101906104719190612dee565b6116fb565b005b610492600480360381019061048d919061308e565b611750565b005b6104ae60048036038101906104a9919061308e565b611958565b6040516104bb91906130d6565b60405180910390f35b6104de60048036038101906104d9919061308e565b611978565b6040516104eb9190612fc8565b60405180910390f35b61050e6004803603810190610509919061308e565b6119d7565b60405161051b9190612fc8565b60405180910390f35b61053e6004803603810190610539919061311b565b611aab565b005b61055a6004803603810190610555919061308e565b611c4a565b005b610564611e60565b6040516105719190612f27565b60405180910390f35b610594600480360381019061058f9190612dee565b611ef4565b005b6105b060048036038101906105ab919061308e565b612026565b005b6105bb336114a4565b156105fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f2906131e9565b60405180910390fd5b600081510361063f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106369061327b565b60405180910390fd5b610658338260056000016120ff9092919063ffffffff16565b61066f33600060020161216690919063ffffffff16565b50565b606061068b3360056000016122ca90919063ffffffff16565b6106c1576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106d833600060020161235d90919063ffffffff16565b1561070f576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461075e906132ca565b905003610797576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005800160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180548060200260200160405190810160405280929190818152602001828054801561085b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610811575b5050505050905090565b606060006001018054610877906132ca565b80601f01602080910402602001604051908101604052809291908181526020018280546108a3906132ca565b80156108f05780601f106108c5576101008083540402835291602001916108f0565b820191906000526020600020905b8154815290600101906020018083116108d357829003601f168201915b5050505050905090565b610903336114a4565b610939576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610a7b336005800160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206123b690919063ffffffff16565b50565b6060610a8d6005600001612639565b905090565b610a9b336112c8565b80610aab5750610aaa336114c4565b5b15610aeb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae29061336d565b60405180910390fd5b6000825103610b2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b26906133ff565b60405180910390fd5b610b483383600b6000016120ff9092919063ffffffff16565b80600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002019081610b9a91906135d5565b505050565b60008173ffffffffffffffffffffffffffffffffffffffff166000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610c015760019050610c06565b600090505b919050565b6060610c16826114a4565b610c4c576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610d1657503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610e1c57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610e1933600b60040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015610e0657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610dbc575b50505050506126ce90919063ffffffff16565b14155b15610ef657600b60040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018054610e71906132ca565b80601f0160208091040260200160405190810160405280929190818152602001828054610e9d906132ca565b8015610eea5780601f10610ebf57610100808354040283529160200191610eea565b820191906000526020600020905b815481529060010190602001808311610ecd57829003601f168201915b50505050509050610f31565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f28906136f3565b60405180910390fd5b919050565b6060610f45600b600001612639565b905090565b610f5333610b9f565b610f89576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f92816114c4565b610fca57610fad8160056000016122ca90919063ffffffff16565b15610fca57610fc98160006002016123b690919063ffffffff16565b5b50565b6060610fd8826114a4565b61100e576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806110d857503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b806111de57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6111db33600b60040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054806020026020016040519081016040528092919081815260200182805480156111c857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161117e575b50505050506126ce90919063ffffffff16565b14155b15611201576111fa82600b60000161277390919063ffffffff16565b905061123c565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611233906136f3565b60405180910390fd5b919050565b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611276336114a4565b6112ac576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6112c53382600b6000016127939092919063ffffffff16565b50565b60006112e18260056000016122ca90919063ffffffff16565b9050919050565b60006112f3336114a4565b611329576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606061139f336114a4565b6113d5576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561149a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611450575b5050505050905090565b60006114bd82600b6000016122ca90919063ffffffff16565b9050919050565b60006114dd8260056000016122ca90919063ffffffff16565b6114ea5760009050611573565b61150182600060020161235d90919063ffffffff16565b1561150f5760009050611573565b6000600560040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461155e906132ca565b90500361156e5760009050611573565b600190505b919050565b61158f3360056000016122ca90919063ffffffff16565b6115c5576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115dc33600060020161235d90919063ffffffff16565b15611613576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054611662906132ca565b90500361169b576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008151036116df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116d69061327b565b60405180910390fd5b6116f8338260056000016127939092919063ffffffff16565b50565b61170433610b9f565b61173a576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000600101908161174c91906135d5565b5050565b611759336114a4565b61178f576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611798816114c4565b6117ce576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6118aa81600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561189757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161184d575b50505050506127b090919063ffffffff16565b61195557600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600061197182600060020161235d90919063ffffffff16565b9050919050565b6060611983826112c8565b6119b9576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6119d082600560000161277390919063ffffffff16565b9050919050565b6060600560040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054611a26906132ca565b80601f0160208091040260200160405190810160405280929190818152602001828054611a52906132ca565b8015611a9f5780601f10611a7457610100808354040283529160200191611a9f565b820191906000526020600020905b815481529060010190602001808311611a8257829003601f168201915b50505050509050919050565b611ab4826114a4565b611aea576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611bb457503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b611bf3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bea906136f3565b60405180910390fd5b80600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002019081611c4591906135d5565b505050565b611c53336114a4565b611c89576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611c92816114c4565b611cc8576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611d85336005800160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206123b690919063ffffffff16565b81600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611e5c336005800160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061216690919063ffffffff16565b5050565b60606000600201600001805480602002602001604051908101604052809291908181526020018280548015611eea57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611ea0575b5050505050905090565b6000815103611f38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f2f90613785565b60405180910390fd5b611f4f3360056000016122ca90919063ffffffff16565b611f85576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611f9c33600060020161235d90919063ffffffff16565b15611fd3576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020908161202291906135d5565b5050565b61202f336114a4565b612065576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61206e816114c4565b6120a4576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6120fb81600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016127e790919063ffffffff16565b5050565b61210983836122ca565b15612149576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612140906137f1565b60405180910390fd5b612161828285600001612a0c9092919063ffffffff16565b505050565b8160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166122c65760018260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555081600001805490508260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361233a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161233190613883565b60405180910390fd5b60006123528385600001612bc090919063ffffffff16565b511415905092915050565b60008260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b8160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615612635578160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905560008260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600184600001805490506124b791906138d2565b905060008460000182815481106124d1576124d0613906565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828560020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508460020160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055808560000184815481106125a05761259f613906565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846000018054806125fc576125fb613935565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555050505b5050565b6060816000016000018054806020026020016040519081016040528092919081815260200182805480156126c257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612678575b50505050509050919050565b600080600090505b8351811015612748578273ffffffffffffffffffffffffffffffffffffffff1684828151811061270957612708613906565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603612735578091505061276d565b808061274090613964565b9150506126d6565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b92915050565b606061278b8284600001612bc090919063ffffffff16565b905092915050565b6127ab828285600001612a0c9092919063ffffffff16565b505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6127dd84846126ce565b1415905092915050565b6000806128798480548060200260200160405190810160405280929190818152602001828054801561286e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612824575b5050505050846126ce565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81036128ac576000915050612a06565b60008480548060200260200160405190810160405280929190818152602001828054801561292f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116128e5575b50505050509050806001825161294591906138d2565b8151811061295657612955613906565b5b602002602001015185838154811061297157612970613906565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848054806129ca576129c9613935565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556001925050505b92915050565b8260030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16612b6c5782600001805490508360020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060018360030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555082600001829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b808360010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081612bba91906135d5565b50505050565b60608260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054612c0e906132ca565b80601f0160208091040260200160405190810160405280929190818152602001828054612c3a906132ca565b8015612c875780601f10612c5c57610100808354040283529160200191612c87565b820191906000526020600020905b815481529060010190602001808311612c6a57829003601f168201915b5050505050905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612cfb82612cb2565b810181811067ffffffffffffffff82111715612d1a57612d19612cc3565b5b80604052505050565b6000612d2d612c94565b9050612d398282612cf2565b919050565b600067ffffffffffffffff821115612d5957612d58612cc3565b5b612d6282612cb2565b9050602081019050919050565b82818337600083830152505050565b6000612d91612d8c84612d3e565b612d23565b905082815260208101848484011115612dad57612dac612cad565b5b612db8848285612d6f565b509392505050565b600082601f830112612dd557612dd4612ca8565b5b8135612de5848260208601612d7e565b91505092915050565b600060208284031215612e0457612e03612c9e565b5b600082013567ffffffffffffffff811115612e2257612e21612ca3565b5b612e2e84828501612dc0565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612e8e82612e63565b9050919050565b612e9e81612e83565b82525050565b6000612eb08383612e95565b60208301905092915050565b6000602082019050919050565b6000612ed482612e37565b612ede8185612e42565b9350612ee983612e53565b8060005b83811015612f1a578151612f018882612ea4565b9750612f0c83612ebc565b925050600181019050612eed565b5085935050505092915050565b60006020820190508181036000830152612f418184612ec9565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612f83578082015181840152602081019050612f68565b60008484015250505050565b6000612f9a82612f49565b612fa48185612f54565b9350612fb4818560208601612f65565b612fbd81612cb2565b840191505092915050565b60006020820190508181036000830152612fe28184612f8f565b905092915050565b6000806040838503121561300157613000612c9e565b5b600083013567ffffffffffffffff81111561301f5761301e612ca3565b5b61302b85828601612dc0565b925050602083013567ffffffffffffffff81111561304c5761304b612ca3565b5b61305885828601612dc0565b9150509250929050565b61306b81612e83565b811461307657600080fd5b50565b60008135905061308881613062565b92915050565b6000602082840312156130a4576130a3612c9e565b5b60006130b284828501613079565b91505092915050565b60008115159050919050565b6130d0816130bb565b82525050565b60006020820190506130eb60008301846130c7565b92915050565b6130fa81612e83565b82525050565b600060208201905061311560008301846130f1565b92915050565b6000806040838503121561313257613131612c9e565b5b600061314085828601613079565b925050602083013567ffffffffffffffff81111561316157613160612ca3565b5b61316d85828601612dc0565b9150509250929050565b7f436f6e74726163743a204164647265737320616c72656164792072656769737460008201527f657265642061732070617469656e740000000000000000000000000000000000602082015250565b60006131d3602f83612f54565b91506131de82613177565b604082019050919050565b60006020820190508181036000830152613202816131c6565b9050919050565b7f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60008201527f7765642100000000000000000000000000000000000000000000000000000000602082015250565b6000613265602483612f54565b915061327082613209565b604082019050919050565b6000602082019050818103600083015261329481613258565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806132e257607f821691505b6020821081036132f5576132f461329b565b5b50919050565b7f436f6e74726163743a204164647265737320616c72656164792072656769737460008201527f6572656420617320646f63746f72000000000000000000000000000000000000602082015250565b6000613357602e83612f54565b9150613362826132fb565b604082019050919050565b600060208201905081810360008301526133868161334a565b9050919050565b7f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60008201527f7765640000000000000000000000000000000000000000000000000000000000602082015250565b60006133e9602383612f54565b91506133f48261338d565b604082019050919050565b60006020820190508181036000830152613418816133dc565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026134817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613444565b61348b8683613444565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006134d26134cd6134c8846134a3565b6134ad565b6134a3565b9050919050565b6000819050919050565b6134ec836134b7565b6135006134f8826134d9565b848454613451565b825550505050565b600090565b613515613508565b6135208184846134e3565b505050565b5b818110156135445761353960008261350d565b600181019050613526565b5050565b601f8211156135895761355a8161341f565b61356384613434565b81016020851015613572578190505b61358661357e85613434565b830182613525565b50505b505050565b600082821c905092915050565b60006135ac6000198460080261358e565b1980831691505092915050565b60006135c5838361359b565b9150826002028217905092915050565b6135de82612f49565b67ffffffffffffffff8111156135f7576135f6612cc3565b5b61360182546132ca565b61360c828285613548565b600060209050601f83116001811461363f576000841561362d578287015190505b61363785826135b9565b86555061369f565b601f19841661364d8661341f565b60005b8281101561367557848901518255600182019150602085019450602081019050613650565b86831015613692578489015161368e601f89168261359b565b8355505b6001600288020188555050505b505050505050565b7f4e6f7420416c6c6f776564000000000000000000000000000000000000000000600082015250565b60006136dd600b83612f54565b91506136e8826136a7565b602082019050919050565b6000602082019050818103600083015261370c816136d0565b9050919050565b7f436f6e74726163743a20456d707479207075626c6963206b6579206973206e6f60008201527f7420616c6c6f7765642100000000000000000000000000000000000000000000602082015250565b600061376f602a83612f54565b915061377a82613713565b604082019050919050565b6000602082019050818103600083015261379e81613762565b9050919050565b7f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500600082015250565b60006137db601f83612f54565b91506137e6826137a5565b602082019050919050565b6000602082019050818103600083015261380a816137ce565b9050919050565b7f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061386d602283612f54565b915061387882613811565b604082019050919050565b6000602082019050818103600083015261389c81613860565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006138dd826134a3565b91506138e8836134a3565b9250828203905081811115613900576138ff6138a3565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600061396f826134a3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036139a1576139a06138a3565b5b60018201905091905056fea26469706673582212203ebc9d26ced000f66f6143b81601033d6d0d13ad819c4d455a81d67de7462b6b64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 575,
        "contract": "contracts/Contract.sol:Contract",
        "label": "admin",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(Admin)550_storage"
      },
      {
        "astId": 578,
        "contract": "contracts/Contract.sol:Contract",
        "label": "doctors",
        "offset": 0,
        "slot": "5",
        "type": "t_struct(Doctors)572_storage"
      },
      {
        "astId": 581,
        "contract": "contracts/Contract.sol:Contract",
        "label": "patients",
        "offset": 0,
        "slot": "11",
        "type": "t_struct(Patients)559_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_address,t_struct(Map)13_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct AddToBoolMapping.Map)",
        "numberOfBytes": "32",
        "value": "t_struct(Map)13_storage"
      },
      "t_mapping(t_address,t_struct(MedicalRecord)542_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Contract.MedicalRecord)",
        "numberOfBytes": "32",
        "value": "t_struct(MedicalRecord)542_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Admin)550_storage": {
        "encoding": "inplace",
        "label": "struct Contract.Admin",
        "members": [
          {
            "astId": 544,
            "contract": "contracts/Contract.sol:Contract",
            "label": "user",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 546,
            "contract": "contracts/Contract.sol:Contract",
            "label": "public_key",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 549,
            "contract": "contracts/Contract.sol:Contract",
            "label": "pending_doctors",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(Map)13_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Doctors)572_storage": {
        "encoding": "inplace",
        "label": "struct Contract.Doctors",
        "members": [
          {
            "astId": 562,
            "contract": "contracts/Contract.sol:Contract",
            "label": "users",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Role)1453_storage"
          },
          {
            "astId": 566,
            "contract": "contracts/Contract.sol:Contract",
            "label": "public_keys",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_string_storage)"
          },
          {
            "astId": 571,
            "contract": "contracts/Contract.sol:Contract",
            "label": "docToPatAccess",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(Map)13_storage)"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Map)13_storage": {
        "encoding": "inplace",
        "label": "struct AddToBoolMapping.Map",
        "members": [
          {
            "astId": 4,
            "contract": "contracts/Contract.sol:Contract",
            "label": "keys",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 8,
            "contract": "contracts/Contract.sol:Contract",
            "label": "values",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 12,
            "contract": "contracts/Contract.sol:Contract",
            "label": "indexOf",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Map)204_storage": {
        "encoding": "inplace",
        "label": "struct AddToStrMapping.Map",
        "members": [
          {
            "astId": 191,
            "contract": "contracts/Contract.sol:Contract",
            "label": "keys",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 195,
            "contract": "contracts/Contract.sol:Contract",
            "label": "values",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_string_storage)"
          },
          {
            "astId": 199,
            "contract": "contracts/Contract.sol:Contract",
            "label": "indexOf",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 203,
            "contract": "contracts/Contract.sol:Contract",
            "label": "inserted",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(MedicalRecord)542_storage": {
        "encoding": "inplace",
        "label": "struct Contract.MedicalRecord",
        "members": [
          {
            "astId": 536,
            "contract": "contracts/Contract.sol:Contract",
            "label": "editor",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 539,
            "contract": "contracts/Contract.sol:Contract",
            "label": "viewers",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 541,
            "contract": "contracts/Contract.sol:Contract",
            "label": "key_data_hash",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Patients)559_storage": {
        "encoding": "inplace",
        "label": "struct Contract.Patients",
        "members": [
          {
            "astId": 553,
            "contract": "contracts/Contract.sol:Contract",
            "label": "users",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Role)1453_storage"
          },
          {
            "astId": 558,
            "contract": "contracts/Contract.sol:Contract",
            "label": "records",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(MedicalRecord)542_storage)"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Role)1453_storage": {
        "encoding": "inplace",
        "label": "struct Roles.Role",
        "members": [
          {
            "astId": 1452,
            "contract": "contracts/Contract.sol:Contract",
            "label": "bearer",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Map)204_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}