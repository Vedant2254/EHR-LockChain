{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Contract__DoctorPublicKeyMissing",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__NotAdmin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__NotDoctor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__NotPatient",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__PendingDoctorApproval",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "approveDr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_general_hash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_key_hash",
          "type": "string"
        }
      ],
      "name": "changeEditorAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "disapproveDr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdminPubKey",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllDrs",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllPts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getDrHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDrOfPt",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getDrPubKey",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPatViewers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPendingDrs",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getPtGeneralHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getPtRecordHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPtsOfDr",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "grantViewerAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isDoctor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isDrPending",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isDrRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isPatient",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "registerDr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_public_key",
          "type": "string"
        }
      ],
      "name": "registerDrConfirm",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_key_data_hash",
          "type": "string"
        }
      ],
      "name": "registerPt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_general_hash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_key_hash",
          "type": "string"
        }
      ],
      "name": "removeEditorAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "revokeViewerAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_public_key",
          "type": "string"
        }
      ],
      "name": "setAdminPubKey",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "setDrHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "setPtGeneralHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "setPtRecordHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1b321de31c3a567b021e9e1d2974f6da4abadf7e8f7f3df2b8f639149338c7c8",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "3594399",
    "logsBloom": "0x
    "blockHash": "0x95708bb1dcfd42a91ba0e38b89fb33615071aa3a9f98bda74a58db7a1e49a469",
    "transactionHash": "0x1b321de31c3a567b021e9e1d2974f6da4abadf7e8f7f3df2b8f639149338c7c8",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "3594399",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "72f06607c41d8be84ddd34a9e9b9e4de",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Contract__DoctorPublicKeyMissing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__NotAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__NotDoctor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__NotPatient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__PendingDoctorApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"approveDr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_general_hash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_key_hash\",\"type\":\"string\"}],\"name\":\"changeEditorAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"disapproveDr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdminPubKey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllDrs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getDrHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDrOfPt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getDrPubKey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPatViewers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPendingDrs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getPtGeneralHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getPtRecordHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPtsOfDr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"grantViewerAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isDoctor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isDrPending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isDrRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isPatient\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"registerDr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_public_key\",\"type\":\"string\"}],\"name\":\"registerDrConfirm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_key_data_hash\",\"type\":\"string\"}],\"name\":\"registerPt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_general_hash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_key_hash\",\"type\":\"string\"}],\"name\":\"removeEditorAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"revokeViewerAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_public_key\",\"type\":\"string\"}],\"name\":\"setAdminPubKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setDrHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setPtGeneralHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setPtRecordHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Contract.sol\":\"Contract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AddToBoolMapping.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary AddToBoolMapping {\\n    // mapping address => bool\\n    struct Map {\\n        address[] keys;\\n        mapping(address => bool) values;\\n        mapping(address => uint256) indexOf;\\n    }\\n\\n    function get(Map storage map, address key) internal view returns (bool) {\\n        return map.values[key];\\n    }\\n\\n    function getKeys(Map storage map) internal view returns (address[] memory) {\\n        return map.keys;\\n    }\\n\\n    function getKeyAtIndex(Map storage map, uint256 index) internal view returns (address) {\\n        return map.keys[index];\\n    }\\n\\n    function size(Map storage map) internal view returns (uint256) {\\n        return map.keys.length;\\n    }\\n\\n    function set(Map storage map, address key) internal {\\n        if (map.values[key]) return;\\n\\n        // add address => true mapping to values\\n        map.values[key] = true;\\n\\n        // add index of address to indexOf mapping\\n        map.indexOf[key] = map.keys.length;\\n\\n        // add address to keys\\n        map.keys.push(key);\\n    }\\n\\n    function unset(Map storage map, address key) internal {\\n        if (!map.values[key]) return;\\n\\n        // remove from values\\n        delete map.values[key];\\n\\n        // important backups\\n        uint256 index = map.indexOf[key];\\n        uint256 lastIndex = map.keys.length - 1;\\n        address lastKey = map.keys[lastIndex];\\n\\n        // update indexOf last element\\n        map.indexOf[lastKey] = index;\\n        delete map.indexOf[key];\\n\\n        // remove from keys\\n        map.keys[index] = lastKey;\\n        map.keys.pop();\\n    }\\n}\\n\",\"keccak256\":\"0xf4944f25058b889d9bebf1d53283eab488e3200f3e2a48e47f52849b113644cc\",\"license\":\"MIT\"},\"contracts/AddToStrMapping.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary AddToStrMapping {\\n    // mapping address => string\\n    struct Map {\\n        address[] keys;\\n        mapping(address => string) values;\\n        mapping(address => uint256) indexOf;\\n        mapping(address => bool) inserted;\\n    }\\n\\n    function get(Map storage map, address key) internal view returns (string memory) {\\n        return map.values[key];\\n    }\\n\\n    function getKeys(Map storage map) internal view returns (address[] memory) {\\n        return map.keys;\\n    }\\n\\n    function getKeyAtIndex(Map storage map, uint256 index) internal view returns (address) {\\n        return map.keys[index];\\n    }\\n\\n    function size(Map storage map) internal view returns (uint256) {\\n        return map.keys.length;\\n    }\\n\\n    function set(Map storage map, address key, string memory val) internal {\\n        if (!map.inserted[key]) {\\n            // add index of address to indexOf mapping\\n            map.indexOf[key] = map.keys.length;\\n\\n            // make value of address in inserted to true\\n            map.inserted[key] = true;\\n\\n            // add address to keys\\n            map.keys.push(key);\\n        }\\n\\n        // add address => true mapping to values\\n        map.values[key] = val;\\n    }\\n\\n    function remove(Map storage map, address key) internal {\\n        if (!map.inserted[key]) return;\\n\\n        // remove from values\\n        delete map.values[key];\\n        delete map.inserted[key];\\n\\n        // important backups\\n        uint256 index = map.indexOf[key];\\n        uint256 lastIndex = map.keys.length - 1;\\n        address lastKey = map.keys[lastIndex];\\n\\n        // update indexOf last element\\n        map.indexOf[lastKey] = index;\\n        delete map.indexOf[key];\\n\\n        // remove from keys\\n        map.keys[index] = lastKey;\\n        map.keys.pop();\\n    }\\n}\\n\",\"keccak256\":\"0x44a19745fb3130275849bcaaf82f085c8a50d1d105b431e5c6df0625e9289f14\",\"license\":\"MIT\"},\"contracts/AddressArrayUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary AddressArrayUtils {\\n    function indexOf(address[] memory arr, address key) internal pure returns (int256) {\\n        for (uint256 i = 0; i < arr.length; i++) {\\n            if (arr[i] == key) return int256(i);\\n        }\\n        return -1;\\n    }\\n\\n    function contains(address[] memory arr, address key) internal pure returns (bool) {\\n        return indexOf(arr, key) != -1;\\n    }\\n\\n    function remove(address[] storage arr, address key) internal returns (bool) {\\n        int256 i = indexOf(arr, key);\\n\\n        if (i == -1) return false;\\n\\n        address[] memory temp = arr;\\n        arr[uint256(i)] = temp[temp.length - 1];\\n        arr.pop();\\n\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x29555ad812fd5509ead59914b9bc59285a5f7b96bedcfed493bca55994271d67\",\"license\":\"MIT\"},\"contracts/Contract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"./Roles.sol\\\";\\nimport \\\"./AddressArrayUtils.sol\\\";\\nimport \\\"./AddToBoolMapping.sol\\\";\\n\\nerror Contract__NotAdmin();\\nerror Contract__NotDoctor();\\nerror Contract__NotPatient();\\nerror Contract__PendingDoctorApproval();\\nerror Contract__DoctorPublicKeyMissing();\\n\\ncontract Contract {\\n    // using methods of Roles for Role struct in Roles\\n    using Roles for Roles.Role;\\n    using AddToBoolMapping for AddToBoolMapping.Map;\\n    using AddressArrayUtils for address[];\\n\\n    struct MedicalRecord {\\n        address editor;\\n        address[] viewers;\\n        string key_data_hash;\\n    }\\n\\n    struct Admin {\\n        address user;\\n        string public_key;\\n        AddToBoolMapping.Map pending_doctors;\\n    }\\n\\n    struct Patients {\\n        Roles.Role users;\\n        mapping(address => MedicalRecord) records;\\n    }\\n\\n    struct Doctors {\\n        Roles.Role users;\\n        mapping(address => string) public_keys;\\n        mapping(address => AddToBoolMapping.Map) docToPatAccess;\\n    }\\n\\n    // defining roles - contains hashes\\n    Admin private admin;\\n    Doctors private doctors;\\n    Patients private patients;\\n\\n    // Initializing admin\\n    constructor() {\\n        admin.user = msg.sender;\\n    }\\n\\n    // Admin methods\\n    function isAdmin(address _address) public view returns (bool) {\\n        if (admin.user == _address) return true;\\n        return false;\\n    }\\n\\n    function getAdmin() public view returns (address) {\\n        return admin.user;\\n    }\\n\\n    function setAdminPubKey(string memory _public_key) public onlyAdmin {\\n        admin.public_key = _public_key;\\n    }\\n\\n    function getAdminPubKey() public view returns (string memory) {\\n        return admin.public_key;\\n    }\\n\\n    // Doctor methods\\n    function isDrRegistered(address _address) public view returns (bool) {\\n        return doctors.users.has(_address);\\n    }\\n\\n    function isDrPending(address _address) public view returns (bool) {\\n        return admin.pending_doctors.get(_address);\\n    }\\n\\n    function isDoctor(address _address) public view returns (bool) {\\n        if (!doctors.users.has(_address)) return false;\\n        if (admin.pending_doctors.get(_address)) return false;\\n        if (bytes(doctors.public_keys[_address]).length == 0) return false;\\n        return true;\\n    }\\n\\n    function registerDr(string memory _hash) public {\\n        if (isPatient(msg.sender)) revert(\\\"Contract: Address already registered as patient\\\");\\n        if (bytes(_hash).length == 0) revert(\\\"Contract: Empty hash is not allowed\\\");\\n        doctors.users.add(msg.sender, _hash);\\n        admin.pending_doctors.set(msg.sender);\\n    }\\n\\n    function approveDr(address _address) public onlyAdmin {\\n        if (isDoctor(_address)) return;\\n        if (!doctors.users.has(_address)) return;\\n        admin.pending_doctors.unset(_address);\\n    }\\n\\n    function disapproveDr(address _address) public onlyAdmin {\\n        if (!isDrPending(_address)) revert(\\\"Contract: Doctor not registered\\\");\\n        doctors.users.remove(_address);\\n        admin.pending_doctors.unset(_address);\\n    }\\n\\n    function registerDrConfirm(string memory _public_key) public {\\n        if (bytes(_public_key).length == 0) revert(\\\"Contract: Empty public key is not allowed!\\\");\\n        if (!doctors.users.has(msg.sender)) revert Contract__NotDoctor();\\n        if (admin.pending_doctors.get(msg.sender)) revert Contract__PendingDoctorApproval();\\n        doctors.public_keys[msg.sender] = _public_key;\\n    }\\n\\n    function setDrHash(string memory _hash) public onlyDoctor {\\n        if (bytes(_hash).length == 0) revert(\\\"Contract: Empty hash is not allowed!\\\");\\n        doctors.users.setHash(msg.sender, _hash);\\n    }\\n\\n    function getDrHash(address _address) public view returns (string memory) {\\n        if (!isDrRegistered(_address)) revert Contract__NotDoctor();\\n        return doctors.users.getHash(_address);\\n    }\\n\\n    function getDrPubKey(address _address) public view returns (string memory) {\\n        return doctors.public_keys[_address];\\n    }\\n\\n    function getAllDrs() public view returns (address[] memory) {\\n        return doctors.users.getMembers();\\n    }\\n\\n    function getPendingDrs() public view returns (address[] memory) {\\n        return admin.pending_doctors.keys;\\n    }\\n\\n    function getPtsOfDr() public view onlyDoctor returns (address[] memory) {\\n        return doctors.docToPatAccess[msg.sender].keys;\\n    }\\n\\n    // Patient methods\\n    function isPatient(address _address) public view returns (bool) {\\n        return patients.users.has(_address);\\n    }\\n\\n    function registerPt(string memory _hash, string memory _key_data_hash) public {\\n        if (isDrRegistered(msg.sender) || isDoctor(msg.sender))\\n            revert(\\\"Contract: Address already registered as doctor\\\");\\n        if (bytes(_hash).length == 0) revert(\\\"Contract: Empty hash is not allowed\\\");\\n        patients.users.add(msg.sender, _hash);\\n        patients.records[msg.sender].editor = msg.sender;\\n        patients.records[msg.sender].key_data_hash = _key_data_hash;\\n    }\\n\\n    function setPtGeneralHash(string memory _hash) public onlyPatient {\\n        patients.users.setHash(msg.sender, _hash);\\n    }\\n\\n    function getPtGeneralHash(address _address) public view returns (string memory) {\\n        if (!isPatient(_address)) revert Contract__NotPatient();\\n\\n        if (\\n            msg.sender == _address ||\\n            patients.records[_address].editor == msg.sender ||\\n            patients.records[_address].viewers.indexOf(msg.sender) != -1\\n        ) return patients.users.getHash(_address);\\n\\n        revert(\\\"Not Allowed\\\");\\n    }\\n\\n    function setPtRecordHash(address _address, string memory _hash) public {\\n        if (!isPatient(_address)) revert Contract__NotPatient();\\n        if (!(patients.records[_address].editor == msg.sender)) revert(\\\"Not Allowed\\\");\\n        patients.records[_address].key_data_hash = _hash;\\n    }\\n\\n    function getPtRecordHash(address _address) public view returns (string memory) {\\n        if (!isPatient(_address)) revert Contract__NotPatient();\\n\\n        if (\\n            msg.sender == _address ||\\n            patients.records[_address].editor == msg.sender ||\\n            patients.records[_address].viewers.indexOf(msg.sender) != -1\\n        ) return patients.records[_address].key_data_hash;\\n\\n        revert(\\\"Not Allowed\\\");\\n    }\\n\\n    function getAllPts() public view returns (address[] memory) {\\n        return patients.users.getMembers();\\n    }\\n\\n    function changeEditorAccess(\\n        address _address,\\n        string memory _general_hash,\\n        string memory _key_hash\\n    ) public onlyPatient {\\n        // pending update - when user changes access, symmetric key S must be changed\\n        if (!isDoctor(_address)) revert Contract__NotDoctor();\\n\\n        // remove old editor access\\n        removeEditorAccess(_general_hash, _key_hash);\\n\\n        // add new editor access\\n        patients.records[msg.sender].editor = _address;\\n        doctors.docToPatAccess[_address].set(msg.sender);\\n    }\\n\\n    function removeEditorAccess(\\n        string memory _general_hash,\\n        string memory _key_hash\\n    ) public onlyPatient {\\n        address old_editor = patients.records[msg.sender].editor;\\n        patients.records[msg.sender].editor = msg.sender;\\n        doctors.docToPatAccess[old_editor].unset(msg.sender);\\n\\n        patients.users.setHash(msg.sender, _general_hash);\\n        patients.records[msg.sender].key_data_hash = _key_hash;\\n    }\\n\\n    function getDrOfPt() public view onlyPatient returns (address) {\\n        return patients.records[msg.sender].editor;\\n    }\\n\\n    function grantViewerAccess(address _address) public onlyPatient {\\n        if (!isDoctor(_address)) revert Contract__NotDoctor();\\n\\n        if (!patients.records[msg.sender].viewers.contains(_address)) {\\n            patients.records[msg.sender].viewers.push(_address);\\n        }\\n    }\\n\\n    function revokeViewerAccess(address _address) public onlyPatient {\\n        // pending update - when user revokes access, symmetric key S must be changed\\n        if (!isDoctor(_address)) revert Contract__NotDoctor();\\n\\n        patients.records[msg.sender].viewers.remove(_address);\\n    }\\n\\n    function getPatViewers() public view onlyPatient returns (address[] memory) {\\n        return patients.records[msg.sender].viewers;\\n    }\\n\\n    // modifiers\\n    modifier onlyAdmin() {\\n        if (!isAdmin(msg.sender)) revert Contract__NotAdmin();\\n        _;\\n    }\\n\\n    modifier onlyDoctor() {\\n        if (!doctors.users.has(msg.sender)) revert Contract__NotDoctor();\\n        if (admin.pending_doctors.get(msg.sender)) revert Contract__PendingDoctorApproval();\\n        if (bytes(doctors.public_keys[msg.sender]).length == 0)\\n            revert Contract__DoctorPublicKeyMissing();\\n        _;\\n    }\\n\\n    modifier onlyPatient() {\\n        if (!isPatient(msg.sender)) revert Contract__NotPatient();\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x442159277607a6e92c529b1c27f4e296a2589a369bdad937829078108e71d94a\",\"license\":\"MIT\"},\"contracts/Roles.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"./AddToStrMapping.sol\\\";\\n\\nlibrary Roles {\\n    using AddToStrMapping for AddToStrMapping.Map;\\n\\n    // This is to keep track of roles\\n    // Reduces searching cost\\n    struct Role {\\n        AddToStrMapping.Map bearer;\\n    }\\n\\n    function add(Role storage role, address account, string memory hash) internal {\\n        require(!has(role, account), \\\"Roles: account already has role\\\");\\n        role.bearer.set(account, hash);\\n    }\\n\\n    function remove(Role storage role, address account) internal {\\n        require(has(role, account), \\\"Roles: account does not have role\\\");\\n        role.bearer.remove(account);\\n    }\\n\\n    function has(Role storage role, address account) internal view returns (bool) {\\n        require(account != address(0), \\\"Roles: account is the zero address\\\");\\n        return bytes(role.bearer.get(account)).length != 0;\\n    }\\n\\n    function setHash(Role storage role, address account, string memory _hash) internal {\\n        role.bearer.set(account, _hash);\\n    }\\n\\n    function getHash(Role storage role, address account) internal view returns (string memory) {\\n        return role.bearer.get(account);\\n    }\\n\\n    function getMembers(Role storage role) internal view returns (address[] memory) {\\n        return role.bearer.keys;\\n    }\\n}\\n\",\"keccak256\":\"0x35319b78de3f838d4fdae2c499ccf5b4ed9407222e38d041a303fb7b42bf47aa\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613ff5806100636000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80638f9c79ed11610104578063c70597ad116100a2578063d3cd4df411610071578063d3cd4df414610565578063dc823aaf14610581578063e2877b4e146105b1578063f7a03a1e146105cf576101da565b8063c70597ad146104df578063cce9d43e146104fb578063ccfaed161461052b578063d0d9a5e314610547576101da565b8063a03de49e116100de578063a03de49e1461046d578063a53f514d14610489578063afb97e3d146104a7578063b1e758a4146104c3576101da565b80638f9c79ed146103f1578063996440c61461042157806399eedd2a14610451576101da565b80633d8198b41161017c5780636e9960c31161014b5780636e9960c31461037d578063745ada641461039b57806388c432e1146103b75780638f7f43a9146103d3576101da565b80633d8198b4146102d15780634df0a2d4146103015780635b0a7aad146103315780636d4bce201461034d576101da565b806321639f04116101b857806321639f041461023757806324d7806c14610255578063290c61b01461028557806332991838146102b5576101da565b80630de99991146101df578063116461e9146101fb5780631da3e2dc14610219575b600080fd5b6101f960048036038101906101f49190613190565b6105eb565b005b61020361066e565b604051610210919061324d565b60405180910390f35b610221610703565b60405161022e919061332d565b60405180910390f35b61023f610717565b60405161024c919061335e565b60405180910390f35b61026f600480360381019061026a9190613190565b6107c3565b60405161027c9190613394565b60405180910390f35b61029f600480360381019061029a9190613190565b61082f565b6040516102ac9190613394565b60405180910390f35b6102cf60048036038101906102ca91906134e4565b61084f565b005b6102eb60048036038101906102e69190613190565b61090f565b6040516102f8919061324d565b60405180910390f35b61031b60048036038101906103169190613190565b610c3a565b604051610328919061324d565b60405180910390f35b61034b6004803603810190610346919061352d565b610eae565b005b61036760048036038101906103629190613190565b61109f565b6040516103749190613394565b60405180910390f35b6103856110bf565b604051610392919061335e565b60405180910390f35b6103b560048036038101906103b09190613190565b6110eb565b005b6103d160048036038101906103cc91906134e4565b6111a3565b005b6103db6111fe565b6040516103e8919061332d565b60405180910390f35b61040b60048036038101906104069190613190565b61130e565b6040516104189190613394565b60405180910390f35b61043b60048036038101906104369190613190565b61132e565b6040516104489190613394565b60405180910390f35b61046b600480360381019061046691906134e4565b6113e2565b005b6104876004803603810190610482919061352d565b611565565b005b6104916116f6565b60405161049e919061332d565b60405180910390f35b6104c160048036038101906104bc91906134e4565b61170a565b005b6104dd60048036038101906104d89190613190565b61175f565b005b6104f960048036038101906104f491906135a5565b611967565b005b61051560048036038101906105109190613190565b611ad0565b604051610522919061324d565b60405180910390f35b610545600480360381019061054091906134e4565b611b2f565b005b61054f611c61565b60405161055c919061332d565b60405180910390f35b61057f600480360381019061057a9190613601565b611e54565b005b61059b60048036038101906105969190613190565b611fb8565b6040516105a8919061324d565b60405180910390f35b6105b961208c565b6040516105c6919061332d565b60405180910390f35b6105e960048036038101906105e49190613190565b612120565b005b6105f4336107c3565b61062a576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106338161132e565b61066b5761064e8160056000016121f990919063ffffffff16565b1561066b5761066a81600060020161228c90919063ffffffff16565b5b50565b606060006001018054610680906136bb565b80601f01602080910402602001604051908101604052809291908181526020018280546106ac906136bb565b80156106f95780601f106106ce576101008083540402835291602001916106f9565b820191906000526020600020905b8154815290600101906020018083116106dc57829003601f168201915b5050505050905090565b6060610712600560000161250f565b905090565b60006107223361130e565b610758576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008173ffffffffffffffffffffffffffffffffffffffff166000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610825576001905061082a565b600090505b919050565b60006108488260056000016121f990919063ffffffff16565b9050919050565b6108583361130e565b15610898576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088f9061375e565b60405180910390fd5b60008151036108dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d3906137f0565b60405180910390fd5b6108f5338260056000016125a49092919063ffffffff16565b61090c33600060020161260b90919063ffffffff16565b50565b606061091a8261130e565b610950576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610a1a57503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610b2057507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610b1d33600b60040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015610b0a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ac0575b505050505061276f90919063ffffffff16565b14155b15610bfa57600b60040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018054610b75906136bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610ba1906136bb565b8015610bee5780601f10610bc357610100808354040283529160200191610bee565b820191906000526020600020905b815481529060010190602001808311610bd157829003601f168201915b50505050509050610c35565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2c9061385c565b60405180910390fd5b919050565b6060610c458261130e565b610c7b576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610d4557503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610e4b57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610e4833600b60040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015610e3557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610deb575b505050505061276f90919063ffffffff16565b14155b15610e6e57610e6782600b60000161281490919063ffffffff16565b9050610ea9565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea09061385c565b60405180910390fd5b919050565b610eb73361130e565b610eed576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905033600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061102e336005800160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061228c90919063ffffffff16565b6110473384600b6000016128349092919063ffffffff16565b81600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020190816110999190613a32565b50505050565b60006110b882600060020161285190919063ffffffff16565b9050919050565b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6110f4336107c3565b61112a576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6111338161109f565b611172576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116990613b50565b60405180910390fd5b6111898160056000016128aa90919063ffffffff16565b6111a081600060020161228c90919063ffffffff16565b50565b6111ac3361130e565b6111e2576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6111fb3382600b6000016128349092919063ffffffff16565b50565b60606112093361130e565b61123f576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561130457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116112ba575b5050505050905090565b600061132782600b6000016121f990919063ffffffff16565b9050919050565b60006113478260056000016121f990919063ffffffff16565b61135457600090506113dd565b61136b82600060020161285190919063ffffffff16565b1561137957600090506113dd565b6000600560040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546113c8906136bb565b9050036113d857600090506113dd565b600190505b919050565b6113f93360056000016121f990919063ffffffff16565b61142f576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61144633600060020161285190919063ffffffff16565b1561147d576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546114cc906136bb565b905003611505576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000815103611549576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154090613be2565b60405180910390fd5b611562338260056000016128349092919063ffffffff16565b50565b61156e3361082f565b8061157e575061157d3361132e565b5b156115be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b590613c74565b60405180910390fd5b6000825103611602576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f9906137f0565b60405180910390fd5b61161b3383600b6000016125a49092919063ffffffff16565b33600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020190816116f19190613a32565b505050565b6060611705600b60000161250f565b905090565b611713336107c3565b611749576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000600101908161175b9190613a32565b5050565b6117683361130e565b61179e576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6117a78161132e565b6117dd576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6118b981600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054806020026020016040519081016040528092919081815260200182805480156118a657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161185c575b505050505061290d90919063ffffffff16565b61196457600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6119708261130e565b6119a6576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611a79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a709061385c565b60405180910390fd5b80600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002019081611acb9190613a32565b505050565b6060611adb8261082f565b611b11576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611b2882600560000161281490919063ffffffff16565b9050919050565b6000815103611b73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6a90613d06565b60405180910390fd5b611b8a3360056000016121f990919063ffffffff16565b611bc0576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611bd733600060020161285190919063ffffffff16565b15611c0e576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081611c5d9190613a32565b5050565b6060611c7a3360056000016121f990919063ffffffff16565b611cb0576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611cc733600060020161285190919063ffffffff16565b15611cfe576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054611d4d906136bb565b905003611d86576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005800160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805480602002602001604051908101604052809291908181526020018280548015611e4a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611e00575b5050505050905090565b611e5d3361130e565b611e93576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611e9c8361132e565b611ed2576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611edc8282610eae565b82600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611fb3336005800160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061260b90919063ffffffff16565b505050565b6060600560040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054612007906136bb565b80601f0160208091040260200160405190810160405280929190818152602001828054612033906136bb565b80156120805780601f1061205557610100808354040283529160200191612080565b820191906000526020600020905b81548152906001019060200180831161206357829003601f168201915b50505050509050919050565b6060600060020160000180548060200260200160405190810160405280929190818152602001828054801561211657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116120cc575b5050505050905090565b6121293361130e565b61215f576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6121688161132e565b61219e576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6121f581600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010161294490919063ffffffff16565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612269576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161226090613d98565b60405180910390fd5b60006122818385600001612b6990919063ffffffff16565b511415905092915050565b8160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561250b578160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905560008260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006001846000018054905061238d9190613de7565b905060008460000182815481106123a7576123a6613e1b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828560020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508460020160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090558085600001848154811061247657612475613e1b565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846000018054806124d2576124d1613e4a565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555050505b5050565b60608160000160000180548060200260200160405190810160405280929190818152602001828054801561259857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161254e575b50505050509050919050565b6125ae83836121f9565b156125ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125e590613ec5565b60405180910390fd5b612606828285600001612c3d9092919063ffffffff16565b505050565b8160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661276b5760018260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555081600001805490508260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b600080600090505b83518110156127e9578273ffffffffffffffffffffffffffffffffffffffff168482815181106127aa576127a9613e1b565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036127d6578091505061280e565b80806127e190613ee5565b915050612777565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b92915050565b606061282c8284600001612b6990919063ffffffff16565b905092915050565b61284c828285600001612c3d9092919063ffffffff16565b505050565b60008260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6128b482826121f9565b6128f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128ea90613f9f565b60405180910390fd5b6129098183600001612df190919063ffffffff16565b5050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61293a848461276f565b1415905092915050565b6000806129d6848054806020026020016040519081016040528092919081815260200182805480156129cb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612981575b50505050508461276f565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8103612a09576000915050612b63565b600084805480602002602001604051908101604052809291908181526020018280548015612a8c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612a42575b505050505090508060018251612aa29190613de7565b81518110612ab357612ab2613e1b565b5b6020026020010151858381548110612ace57612acd613e1b565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084805480612b2757612b26613e4a565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556001925050505b92915050565b60608260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054612bb7906136bb565b80601f0160208091040260200160405190810160405280929190818152602001828054612be3906136bb565b8015612c305780601f10612c0557610100808354040283529160200191612c30565b820191906000526020600020905b815481529060010190602001808311612c1357829003601f168201915b5050505050905092915050565b8260030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16612d9d5782600001805490508360020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060018360030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555082600001829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b808360010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081612deb9190613a32565b50505050565b8160030160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156130bd578160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000612e9291906130c1565b8160030160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905560008260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600060018460000180549050612f3f9190613de7565b90506000846000018281548110612f5957612f58613e1b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828560020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508460020160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090558085600001848154811061302857613027613e1b565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508460000180548061308457613083613e4a565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555050505b5050565b5080546130cd906136bb565b6000825580601f106130df57506130fe565b601f0160209004906000526020600020908101906130fd9190613101565b5b50565b5b8082111561311a576000816000905550600101613102565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061315d82613132565b9050919050565b61316d81613152565b811461317857600080fd5b50565b60008135905061318a81613164565b92915050565b6000602082840312156131a6576131a5613128565b5b60006131b48482850161317b565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156131f75780820151818401526020810190506131dc565b60008484015250505050565b6000601f19601f8301169050919050565b600061321f826131bd565b61322981856131c8565b93506132398185602086016131d9565b61324281613203565b840191505092915050565b600060208201905081810360008301526132678184613214565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6132a481613152565b82525050565b60006132b6838361329b565b60208301905092915050565b6000602082019050919050565b60006132da8261326f565b6132e4818561327a565b93506132ef8361328b565b8060005b8381101561332057815161330788826132aa565b9750613312836132c2565b9250506001810190506132f3565b5085935050505092915050565b6000602082019050818103600083015261334781846132cf565b905092915050565b61335881613152565b82525050565b6000602082019050613373600083018461334f565b92915050565b60008115159050919050565b61338e81613379565b82525050565b60006020820190506133a96000830184613385565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6133f182613203565b810181811067ffffffffffffffff821117156134105761340f6133b9565b5b80604052505050565b600061342361311e565b905061342f82826133e8565b919050565b600067ffffffffffffffff82111561344f5761344e6133b9565b5b61345882613203565b9050602081019050919050565b82818337600083830152505050565b600061348761348284613434565b613419565b9050828152602081018484840111156134a3576134a26133b4565b5b6134ae848285613465565b509392505050565b600082601f8301126134cb576134ca6133af565b5b81356134db848260208601613474565b91505092915050565b6000602082840312156134fa576134f9613128565b5b600082013567ffffffffffffffff8111156135185761351761312d565b5b613524848285016134b6565b91505092915050565b6000806040838503121561354457613543613128565b5b600083013567ffffffffffffffff8111156135625761356161312d565b5b61356e858286016134b6565b925050602083013567ffffffffffffffff81111561358f5761358e61312d565b5b61359b858286016134b6565b9150509250929050565b600080604083850312156135bc576135bb613128565b5b60006135ca8582860161317b565b925050602083013567ffffffffffffffff8111156135eb576135ea61312d565b5b6135f7858286016134b6565b9150509250929050565b60008060006060848603121561361a57613619613128565b5b60006136288682870161317b565b935050602084013567ffffffffffffffff8111156136495761364861312d565b5b613655868287016134b6565b925050604084013567ffffffffffffffff8111156136765761367561312d565b5b613682868287016134b6565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806136d357607f821691505b6020821081036136e6576136e561368c565b5b50919050565b7f436f6e74726163743a204164647265737320616c72656164792072656769737460008201527f657265642061732070617469656e740000000000000000000000000000000000602082015250565b6000613748602f836131c8565b9150613753826136ec565b604082019050919050565b600060208201905081810360008301526137778161373b565b9050919050565b7f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60008201527f7765640000000000000000000000000000000000000000000000000000000000602082015250565b60006137da6023836131c8565b91506137e58261377e565b604082019050919050565b60006020820190508181036000830152613809816137cd565b9050919050565b7f4e6f7420416c6c6f776564000000000000000000000000000000000000000000600082015250565b6000613846600b836131c8565b915061385182613810565b602082019050919050565b6000602082019050818103600083015261387581613839565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026138de7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826138a1565b6138e886836138a1565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061392f61392a61392584613900565b61390a565b613900565b9050919050565b6000819050919050565b61394983613914565b61395d61395582613936565b8484546138ae565b825550505050565b600090565b613972613965565b61397d818484613940565b505050565b5b818110156139a15761399660008261396a565b600181019050613983565b5050565b601f8211156139e6576139b78161387c565b6139c084613891565b810160208510156139cf578190505b6139e36139db85613891565b830182613982565b50505b505050565b600082821c905092915050565b6000613a09600019846008026139eb565b1980831691505092915050565b6000613a2283836139f8565b9150826002028217905092915050565b613a3b826131bd565b67ffffffffffffffff811115613a5457613a536133b9565b5b613a5e82546136bb565b613a698282856139a5565b600060209050601f831160018114613a9c5760008415613a8a578287015190505b613a948582613a16565b865550613afc565b601f198416613aaa8661387c565b60005b82811015613ad257848901518255600182019150602085019450602081019050613aad565b86831015613aef5784890151613aeb601f8916826139f8565b8355505b6001600288020188555050505b505050505050565b7f436f6e74726163743a20446f63746f72206e6f74207265676973746572656400600082015250565b6000613b3a601f836131c8565b9150613b4582613b04565b602082019050919050565b60006020820190508181036000830152613b6981613b2d565b9050919050565b7f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60008201527f7765642100000000000000000000000000000000000000000000000000000000602082015250565b6000613bcc6024836131c8565b9150613bd782613b70565b604082019050919050565b60006020820190508181036000830152613bfb81613bbf565b9050919050565b7f436f6e74726163743a204164647265737320616c72656164792072656769737460008201527f6572656420617320646f63746f72000000000000000000000000000000000000602082015250565b6000613c5e602e836131c8565b9150613c6982613c02565b604082019050919050565b60006020820190508181036000830152613c8d81613c51565b9050919050565b7f436f6e74726163743a20456d707479207075626c6963206b6579206973206e6f60008201527f7420616c6c6f7765642100000000000000000000000000000000000000000000602082015250565b6000613cf0602a836131c8565b9150613cfb82613c94565b604082019050919050565b60006020820190508181036000830152613d1f81613ce3565b9050919050565b7f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000613d826022836131c8565b9150613d8d82613d26565b604082019050919050565b60006020820190508181036000830152613db181613d75565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613df282613900565b9150613dfd83613900565b9250828203905081811115613e1557613e14613db8565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500600082015250565b6000613eaf601f836131c8565b9150613eba82613e79565b602082019050919050565b60006020820190508181036000830152613ede81613ea2565b9050919050565b6000613ef082613900565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613f2257613f21613db8565b5b600182019050919050565b7f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c60008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b6000613f896021836131c8565b9150613f9482613f2d565b604082019050919050565b60006020820190508181036000830152613fb881613f7c565b905091905056fea2646970667358221220da37b65d7dd6e3fc83f16086e5b8e0407897c66613ebcf6cf085fbd1dae9252d64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c80638f9c79ed11610104578063c70597ad116100a2578063d3cd4df411610071578063d3cd4df414610565578063dc823aaf14610581578063e2877b4e146105b1578063f7a03a1e146105cf576101da565b8063c70597ad146104df578063cce9d43e146104fb578063ccfaed161461052b578063d0d9a5e314610547576101da565b8063a03de49e116100de578063a03de49e1461046d578063a53f514d14610489578063afb97e3d146104a7578063b1e758a4146104c3576101da565b80638f9c79ed146103f1578063996440c61461042157806399eedd2a14610451576101da565b80633d8198b41161017c5780636e9960c31161014b5780636e9960c31461037d578063745ada641461039b57806388c432e1146103b75780638f7f43a9146103d3576101da565b80633d8198b4146102d15780634df0a2d4146103015780635b0a7aad146103315780636d4bce201461034d576101da565b806321639f04116101b857806321639f041461023757806324d7806c14610255578063290c61b01461028557806332991838146102b5576101da565b80630de99991146101df578063116461e9146101fb5780631da3e2dc14610219575b600080fd5b6101f960048036038101906101f49190613190565b6105eb565b005b61020361066e565b604051610210919061324d565b60405180910390f35b610221610703565b60405161022e919061332d565b60405180910390f35b61023f610717565b60405161024c919061335e565b60405180910390f35b61026f600480360381019061026a9190613190565b6107c3565b60405161027c9190613394565b60405180910390f35b61029f600480360381019061029a9190613190565b61082f565b6040516102ac9190613394565b60405180910390f35b6102cf60048036038101906102ca91906134e4565b61084f565b005b6102eb60048036038101906102e69190613190565b61090f565b6040516102f8919061324d565b60405180910390f35b61031b60048036038101906103169190613190565b610c3a565b604051610328919061324d565b60405180910390f35b61034b6004803603810190610346919061352d565b610eae565b005b61036760048036038101906103629190613190565b61109f565b6040516103749190613394565b60405180910390f35b6103856110bf565b604051610392919061335e565b60405180910390f35b6103b560048036038101906103b09190613190565b6110eb565b005b6103d160048036038101906103cc91906134e4565b6111a3565b005b6103db6111fe565b6040516103e8919061332d565b60405180910390f35b61040b60048036038101906104069190613190565b61130e565b6040516104189190613394565b60405180910390f35b61043b60048036038101906104369190613190565b61132e565b6040516104489190613394565b60405180910390f35b61046b600480360381019061046691906134e4565b6113e2565b005b6104876004803603810190610482919061352d565b611565565b005b6104916116f6565b60405161049e919061332d565b60405180910390f35b6104c160048036038101906104bc91906134e4565b61170a565b005b6104dd60048036038101906104d89190613190565b61175f565b005b6104f960048036038101906104f491906135a5565b611967565b005b61051560048036038101906105109190613190565b611ad0565b604051610522919061324d565b60405180910390f35b610545600480360381019061054091906134e4565b611b2f565b005b61054f611c61565b60405161055c919061332d565b60405180910390f35b61057f600480360381019061057a9190613601565b611e54565b005b61059b60048036038101906105969190613190565b611fb8565b6040516105a8919061324d565b60405180910390f35b6105b961208c565b6040516105c6919061332d565b60405180910390f35b6105e960048036038101906105e49190613190565b612120565b005b6105f4336107c3565b61062a576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106338161132e565b61066b5761064e8160056000016121f990919063ffffffff16565b1561066b5761066a81600060020161228c90919063ffffffff16565b5b50565b606060006001018054610680906136bb565b80601f01602080910402602001604051908101604052809291908181526020018280546106ac906136bb565b80156106f95780601f106106ce576101008083540402835291602001916106f9565b820191906000526020600020905b8154815290600101906020018083116106dc57829003601f168201915b5050505050905090565b6060610712600560000161250f565b905090565b60006107223361130e565b610758576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008173ffffffffffffffffffffffffffffffffffffffff166000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610825576001905061082a565b600090505b919050565b60006108488260056000016121f990919063ffffffff16565b9050919050565b6108583361130e565b15610898576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088f9061375e565b60405180910390fd5b60008151036108dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d3906137f0565b60405180910390fd5b6108f5338260056000016125a49092919063ffffffff16565b61090c33600060020161260b90919063ffffffff16565b50565b606061091a8261130e565b610950576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610a1a57503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610b2057507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610b1d33600b60040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015610b0a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ac0575b505050505061276f90919063ffffffff16565b14155b15610bfa57600b60040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018054610b75906136bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610ba1906136bb565b8015610bee5780601f10610bc357610100808354040283529160200191610bee565b820191906000526020600020905b815481529060010190602001808311610bd157829003601f168201915b50505050509050610c35565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2c9061385c565b60405180910390fd5b919050565b6060610c458261130e565b610c7b576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610d4557503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610e4b57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610e4833600b60040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015610e3557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610deb575b505050505061276f90919063ffffffff16565b14155b15610e6e57610e6782600b60000161281490919063ffffffff16565b9050610ea9565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea09061385c565b60405180910390fd5b919050565b610eb73361130e565b610eed576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905033600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061102e336005800160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061228c90919063ffffffff16565b6110473384600b6000016128349092919063ffffffff16565b81600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020190816110999190613a32565b50505050565b60006110b882600060020161285190919063ffffffff16565b9050919050565b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6110f4336107c3565b61112a576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6111338161109f565b611172576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116990613b50565b60405180910390fd5b6111898160056000016128aa90919063ffffffff16565b6111a081600060020161228c90919063ffffffff16565b50565b6111ac3361130e565b6111e2576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6111fb3382600b6000016128349092919063ffffffff16565b50565b60606112093361130e565b61123f576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561130457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116112ba575b5050505050905090565b600061132782600b6000016121f990919063ffffffff16565b9050919050565b60006113478260056000016121f990919063ffffffff16565b61135457600090506113dd565b61136b82600060020161285190919063ffffffff16565b1561137957600090506113dd565b6000600560040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546113c8906136bb565b9050036113d857600090506113dd565b600190505b919050565b6113f93360056000016121f990919063ffffffff16565b61142f576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61144633600060020161285190919063ffffffff16565b1561147d576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546114cc906136bb565b905003611505576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000815103611549576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154090613be2565b60405180910390fd5b611562338260056000016128349092919063ffffffff16565b50565b61156e3361082f565b8061157e575061157d3361132e565b5b156115be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b590613c74565b60405180910390fd5b6000825103611602576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f9906137f0565b60405180910390fd5b61161b3383600b6000016125a49092919063ffffffff16565b33600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020190816116f19190613a32565b505050565b6060611705600b60000161250f565b905090565b611713336107c3565b611749576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000600101908161175b9190613a32565b5050565b6117683361130e565b61179e576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6117a78161132e565b6117dd576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6118b981600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054806020026020016040519081016040528092919081815260200182805480156118a657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161185c575b505050505061290d90919063ffffffff16565b61196457600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6119708261130e565b6119a6576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611a79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a709061385c565b60405180910390fd5b80600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002019081611acb9190613a32565b505050565b6060611adb8261082f565b611b11576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611b2882600560000161281490919063ffffffff16565b9050919050565b6000815103611b73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6a90613d06565b60405180910390fd5b611b8a3360056000016121f990919063ffffffff16565b611bc0576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611bd733600060020161285190919063ffffffff16565b15611c0e576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081611c5d9190613a32565b5050565b6060611c7a3360056000016121f990919063ffffffff16565b611cb0576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611cc733600060020161285190919063ffffffff16565b15611cfe576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054611d4d906136bb565b905003611d86576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005800160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805480602002602001604051908101604052809291908181526020018280548015611e4a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611e00575b5050505050905090565b611e5d3361130e565b611e93576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611e9c8361132e565b611ed2576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611edc8282610eae565b82600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611fb3336005800160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061260b90919063ffffffff16565b505050565b6060600560040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054612007906136bb565b80601f0160208091040260200160405190810160405280929190818152602001828054612033906136bb565b80156120805780601f1061205557610100808354040283529160200191612080565b820191906000526020600020905b81548152906001019060200180831161206357829003601f168201915b50505050509050919050565b6060600060020160000180548060200260200160405190810160405280929190818152602001828054801561211657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116120cc575b5050505050905090565b6121293361130e565b61215f576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6121688161132e565b61219e576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6121f581600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010161294490919063ffffffff16565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612269576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161226090613d98565b60405180910390fd5b60006122818385600001612b6990919063ffffffff16565b511415905092915050565b8160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561250b578160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905560008260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006001846000018054905061238d9190613de7565b905060008460000182815481106123a7576123a6613e1b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828560020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508460020160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090558085600001848154811061247657612475613e1b565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846000018054806124d2576124d1613e4a565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555050505b5050565b60608160000160000180548060200260200160405190810160405280929190818152602001828054801561259857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161254e575b50505050509050919050565b6125ae83836121f9565b156125ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125e590613ec5565b60405180910390fd5b612606828285600001612c3d9092919063ffffffff16565b505050565b8160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661276b5760018260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555081600001805490508260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b600080600090505b83518110156127e9578273ffffffffffffffffffffffffffffffffffffffff168482815181106127aa576127a9613e1b565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036127d6578091505061280e565b80806127e190613ee5565b915050612777565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b92915050565b606061282c8284600001612b6990919063ffffffff16565b905092915050565b61284c828285600001612c3d9092919063ffffffff16565b505050565b60008260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6128b482826121f9565b6128f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128ea90613f9f565b60405180910390fd5b6129098183600001612df190919063ffffffff16565b5050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61293a848461276f565b1415905092915050565b6000806129d6848054806020026020016040519081016040528092919081815260200182805480156129cb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612981575b50505050508461276f565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8103612a09576000915050612b63565b600084805480602002602001604051908101604052809291908181526020018280548015612a8c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612a42575b505050505090508060018251612aa29190613de7565b81518110612ab357612ab2613e1b565b5b6020026020010151858381548110612ace57612acd613e1b565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084805480612b2757612b26613e4a565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556001925050505b92915050565b60608260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054612bb7906136bb565b80601f0160208091040260200160405190810160405280929190818152602001828054612be3906136bb565b8015612c305780601f10612c0557610100808354040283529160200191612c30565b820191906000526020600020905b815481529060010190602001808311612c1357829003601f168201915b5050505050905092915050565b8260030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16612d9d5782600001805490508360020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060018360030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555082600001829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b808360010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081612deb9190613a32565b50505050565b8160030160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156130bd578160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000612e9291906130c1565b8160030160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905560008260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600060018460000180549050612f3f9190613de7565b90506000846000018281548110612f5957612f58613e1b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828560020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508460020160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090558085600001848154811061302857613027613e1b565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508460000180548061308457613083613e4a565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555050505b5050565b5080546130cd906136bb565b6000825580601f106130df57506130fe565b601f0160209004906000526020600020908101906130fd9190613101565b5b50565b5b8082111561311a576000816000905550600101613102565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061315d82613132565b9050919050565b61316d81613152565b811461317857600080fd5b50565b60008135905061318a81613164565b92915050565b6000602082840312156131a6576131a5613128565b5b60006131b48482850161317b565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156131f75780820151818401526020810190506131dc565b60008484015250505050565b6000601f19601f8301169050919050565b600061321f826131bd565b61322981856131c8565b93506132398185602086016131d9565b61324281613203565b840191505092915050565b600060208201905081810360008301526132678184613214565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6132a481613152565b82525050565b60006132b6838361329b565b60208301905092915050565b6000602082019050919050565b60006132da8261326f565b6132e4818561327a565b93506132ef8361328b565b8060005b8381101561332057815161330788826132aa565b9750613312836132c2565b9250506001810190506132f3565b5085935050505092915050565b6000602082019050818103600083015261334781846132cf565b905092915050565b61335881613152565b82525050565b6000602082019050613373600083018461334f565b92915050565b60008115159050919050565b61338e81613379565b82525050565b60006020820190506133a96000830184613385565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6133f182613203565b810181811067ffffffffffffffff821117156134105761340f6133b9565b5b80604052505050565b600061342361311e565b905061342f82826133e8565b919050565b600067ffffffffffffffff82111561344f5761344e6133b9565b5b61345882613203565b9050602081019050919050565b82818337600083830152505050565b600061348761348284613434565b613419565b9050828152602081018484840111156134a3576134a26133b4565b5b6134ae848285613465565b509392505050565b600082601f8301126134cb576134ca6133af565b5b81356134db848260208601613474565b91505092915050565b6000602082840312156134fa576134f9613128565b5b600082013567ffffffffffffffff8111156135185761351761312d565b5b613524848285016134b6565b91505092915050565b6000806040838503121561354457613543613128565b5b600083013567ffffffffffffffff8111156135625761356161312d565b5b61356e858286016134b6565b925050602083013567ffffffffffffffff81111561358f5761358e61312d565b5b61359b858286016134b6565b9150509250929050565b600080604083850312156135bc576135bb613128565b5b60006135ca8582860161317b565b925050602083013567ffffffffffffffff8111156135eb576135ea61312d565b5b6135f7858286016134b6565b9150509250929050565b60008060006060848603121561361a57613619613128565b5b60006136288682870161317b565b935050602084013567ffffffffffffffff8111156136495761364861312d565b5b613655868287016134b6565b925050604084013567ffffffffffffffff8111156136765761367561312d565b5b613682868287016134b6565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806136d357607f821691505b6020821081036136e6576136e561368c565b5b50919050565b7f436f6e74726163743a204164647265737320616c72656164792072656769737460008201527f657265642061732070617469656e740000000000000000000000000000000000602082015250565b6000613748602f836131c8565b9150613753826136ec565b604082019050919050565b600060208201905081810360008301526137778161373b565b9050919050565b7f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60008201527f7765640000000000000000000000000000000000000000000000000000000000602082015250565b60006137da6023836131c8565b91506137e58261377e565b604082019050919050565b60006020820190508181036000830152613809816137cd565b9050919050565b7f4e6f7420416c6c6f776564000000000000000000000000000000000000000000600082015250565b6000613846600b836131c8565b915061385182613810565b602082019050919050565b6000602082019050818103600083015261387581613839565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026138de7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826138a1565b6138e886836138a1565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061392f61392a61392584613900565b61390a565b613900565b9050919050565b6000819050919050565b61394983613914565b61395d61395582613936565b8484546138ae565b825550505050565b600090565b613972613965565b61397d818484613940565b505050565b5b818110156139a15761399660008261396a565b600181019050613983565b5050565b601f8211156139e6576139b78161387c565b6139c084613891565b810160208510156139cf578190505b6139e36139db85613891565b830182613982565b50505b505050565b600082821c905092915050565b6000613a09600019846008026139eb565b1980831691505092915050565b6000613a2283836139f8565b9150826002028217905092915050565b613a3b826131bd565b67ffffffffffffffff811115613a5457613a536133b9565b5b613a5e82546136bb565b613a698282856139a5565b600060209050601f831160018114613a9c5760008415613a8a578287015190505b613a948582613a16565b865550613afc565b601f198416613aaa8661387c565b60005b82811015613ad257848901518255600182019150602085019450602081019050613aad565b86831015613aef5784890151613aeb601f8916826139f8565b8355505b6001600288020188555050505b505050505050565b7f436f6e74726163743a20446f63746f72206e6f74207265676973746572656400600082015250565b6000613b3a601f836131c8565b9150613b4582613b04565b602082019050919050565b60006020820190508181036000830152613b6981613b2d565b9050919050565b7f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60008201527f7765642100000000000000000000000000000000000000000000000000000000602082015250565b6000613bcc6024836131c8565b9150613bd782613b70565b604082019050919050565b60006020820190508181036000830152613bfb81613bbf565b9050919050565b7f436f6e74726163743a204164647265737320616c72656164792072656769737460008201527f6572656420617320646f63746f72000000000000000000000000000000000000602082015250565b6000613c5e602e836131c8565b9150613c6982613c02565b604082019050919050565b60006020820190508181036000830152613c8d81613c51565b9050919050565b7f436f6e74726163743a20456d707479207075626c6963206b6579206973206e6f60008201527f7420616c6c6f7765642100000000000000000000000000000000000000000000602082015250565b6000613cf0602a836131c8565b9150613cfb82613c94565b604082019050919050565b60006020820190508181036000830152613d1f81613ce3565b9050919050565b7f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000613d826022836131c8565b9150613d8d82613d26565b604082019050919050565b60006020820190508181036000830152613db181613d75565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613df282613900565b9150613dfd83613900565b9250828203905081811115613e1557613e14613db8565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500600082015250565b6000613eaf601f836131c8565b9150613eba82613e79565b602082019050919050565b60006020820190508181036000830152613ede81613ea2565b9050919050565b6000613ef082613900565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613f2257613f21613db8565b5b600182019050919050565b7f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c60008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b6000613f896021836131c8565b9150613f9482613f2d565b604082019050919050565b60006020820190508181036000830152613fb881613f7c565b905091905056fea2646970667358221220da37b65d7dd6e3fc83f16086e5b8e0407897c66613ebcf6cf085fbd1dae9252d64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 575,
        "contract": "contracts/Contract.sol:Contract",
        "label": "admin",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(Admin)550_storage"
      },
      {
        "astId": 578,
        "contract": "contracts/Contract.sol:Contract",
        "label": "doctors",
        "offset": 0,
        "slot": "5",
        "type": "t_struct(Doctors)572_storage"
      },
      {
        "astId": 581,
        "contract": "contracts/Contract.sol:Contract",
        "label": "patients",
        "offset": 0,
        "slot": "11",
        "type": "t_struct(Patients)559_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_address,t_struct(Map)13_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct AddToBoolMapping.Map)",
        "numberOfBytes": "32",
        "value": "t_struct(Map)13_storage"
      },
      "t_mapping(t_address,t_struct(MedicalRecord)542_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Contract.MedicalRecord)",
        "numberOfBytes": "32",
        "value": "t_struct(MedicalRecord)542_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Admin)550_storage": {
        "encoding": "inplace",
        "label": "struct Contract.Admin",
        "members": [
          {
            "astId": 544,
            "contract": "contracts/Contract.sol:Contract",
            "label": "user",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 546,
            "contract": "contracts/Contract.sol:Contract",
            "label": "public_key",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 549,
            "contract": "contracts/Contract.sol:Contract",
            "label": "pending_doctors",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(Map)13_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Doctors)572_storage": {
        "encoding": "inplace",
        "label": "struct Contract.Doctors",
        "members": [
          {
            "astId": 562,
            "contract": "contracts/Contract.sol:Contract",
            "label": "users",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Role)1504_storage"
          },
          {
            "astId": 566,
            "contract": "contracts/Contract.sol:Contract",
            "label": "public_keys",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_string_storage)"
          },
          {
            "astId": 571,
            "contract": "contracts/Contract.sol:Contract",
            "label": "docToPatAccess",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(Map)13_storage)"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Map)13_storage": {
        "encoding": "inplace",
        "label": "struct AddToBoolMapping.Map",
        "members": [
          {
            "astId": 4,
            "contract": "contracts/Contract.sol:Contract",
            "label": "keys",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 8,
            "contract": "contracts/Contract.sol:Contract",
            "label": "values",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 12,
            "contract": "contracts/Contract.sol:Contract",
            "label": "indexOf",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Map)204_storage": {
        "encoding": "inplace",
        "label": "struct AddToStrMapping.Map",
        "members": [
          {
            "astId": 191,
            "contract": "contracts/Contract.sol:Contract",
            "label": "keys",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 195,
            "contract": "contracts/Contract.sol:Contract",
            "label": "values",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_string_storage)"
          },
          {
            "astId": 199,
            "contract": "contracts/Contract.sol:Contract",
            "label": "indexOf",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 203,
            "contract": "contracts/Contract.sol:Contract",
            "label": "inserted",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(MedicalRecord)542_storage": {
        "encoding": "inplace",
        "label": "struct Contract.MedicalRecord",
        "members": [
          {
            "astId": 536,
            "contract": "contracts/Contract.sol:Contract",
            "label": "editor",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 539,
            "contract": "contracts/Contract.sol:Contract",
            "label": "viewers",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 541,
            "contract": "contracts/Contract.sol:Contract",
            "label": "key_data_hash",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Patients)559_storage": {
        "encoding": "inplace",
        "label": "struct Contract.Patients",
        "members": [
          {
            "astId": 553,
            "contract": "contracts/Contract.sol:Contract",
            "label": "users",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Role)1504_storage"
          },
          {
            "astId": 558,
            "contract": "contracts/Contract.sol:Contract",
            "label": "records",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(MedicalRecord)542_storage)"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Role)1504_storage": {
        "encoding": "inplace",
        "label": "struct Roles.Role",
        "members": [
          {
            "astId": 1503,
            "contract": "contracts/Contract.sol:Contract",
            "label": "bearer",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Map)204_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}