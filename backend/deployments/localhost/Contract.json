{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Contract__DoctorPublicKeyMissing",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__NotAdmin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__NotDoctor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__NotPatient",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__PendingDoctorApproval",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "approveDr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_general_hash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_key_hash",
          "type": "string"
        }
      ],
      "name": "changeEditorAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdminPubKey",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllDrs",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllPts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getDrHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDrOfPt",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getDrPubKey",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPatViewers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPendingDrs",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getPtGeneralHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getPtRecordHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPtsOfDr",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "grantViewerAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isDoctor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isDrPending",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isDrRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isPatient",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "registerDr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_public_key",
          "type": "string"
        }
      ],
      "name": "registerDrConfirm",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_key_data_hash",
          "type": "string"
        }
      ],
      "name": "registerPt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_general_hash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_key_hash",
          "type": "string"
        }
      ],
      "name": "removeEditorAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "revokeViewerAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_public_key",
          "type": "string"
        }
      ],
      "name": "setAdminPubKey",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "setDrHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "setPtGeneralHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "setPtRecordHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x46112f600c22f33e4997a9424bbf86051e80ae6f1a2b6ed921e1baaf0de21cea",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "3296122",
    "logsBloom": "0x
    "blockHash": "0xb45d9fc397671dc86a7944c188909e6ba10532d68a6673b816b74e84ec7ef3e8",
    "transactionHash": "0x46112f600c22f33e4997a9424bbf86051e80ae6f1a2b6ed921e1baaf0de21cea",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "3296122",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "1c012af9bab53d5ddd5d2a66547697ce",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Contract__DoctorPublicKeyMissing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__NotAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__NotDoctor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__NotPatient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__PendingDoctorApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"approveDr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_general_hash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_key_hash\",\"type\":\"string\"}],\"name\":\"changeEditorAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdminPubKey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllDrs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getDrHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDrOfPt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getDrPubKey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPatViewers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPendingDrs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getPtGeneralHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getPtRecordHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPtsOfDr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"grantViewerAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isDoctor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isDrPending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isDrRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isPatient\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"registerDr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_public_key\",\"type\":\"string\"}],\"name\":\"registerDrConfirm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_key_data_hash\",\"type\":\"string\"}],\"name\":\"registerPt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_general_hash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_key_hash\",\"type\":\"string\"}],\"name\":\"removeEditorAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"revokeViewerAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_public_key\",\"type\":\"string\"}],\"name\":\"setAdminPubKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setDrHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setPtGeneralHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setPtRecordHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Contract.sol\":\"Contract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AddToBoolMapping.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary AddToBoolMapping {\\n    // mapping address => bool\\n    struct Map {\\n        address[] keys;\\n        mapping(address => bool) values;\\n        mapping(address => uint256) indexOf;\\n    }\\n\\n    function get(Map storage map, address key) internal view returns (bool) {\\n        return map.values[key];\\n    }\\n\\n    function getKeys(Map storage map) internal view returns (address[] memory) {\\n        return map.keys;\\n    }\\n\\n    function getKeyAtIndex(Map storage map, uint256 index) internal view returns (address) {\\n        return map.keys[index];\\n    }\\n\\n    function size(Map storage map) internal view returns (uint256) {\\n        return map.keys.length;\\n    }\\n\\n    function set(Map storage map, address key) internal {\\n        if (map.values[key]) return;\\n\\n        // add address => true mapping to values\\n        map.values[key] = true;\\n\\n        // add index of address to indexOf mapping\\n        map.indexOf[key] = map.keys.length;\\n\\n        // add address to keys\\n        map.keys.push(key);\\n    }\\n\\n    function unset(Map storage map, address key) internal {\\n        if (!map.values[key]) return;\\n\\n        // remove from values\\n        delete map.values[key];\\n\\n        // important backups\\n        uint256 index = map.indexOf[key];\\n        uint256 lastIndex = map.keys.length - 1;\\n        address lastKey = map.keys[lastIndex];\\n\\n        // update indexOf last element\\n        map.indexOf[lastKey] = index;\\n        delete map.indexOf[key];\\n\\n        // remove from keys\\n        map.keys[index] = lastKey;\\n        map.keys.pop();\\n    }\\n}\\n\",\"keccak256\":\"0xf4944f25058b889d9bebf1d53283eab488e3200f3e2a48e47f52849b113644cc\",\"license\":\"MIT\"},\"contracts/AddToStrMapping.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary AddToStrMapping {\\n    // mapping address => string\\n    struct Map {\\n        address[] keys;\\n        mapping(address => string) values;\\n        mapping(address => uint256) indexOf;\\n        mapping(address => bool) inserted;\\n    }\\n\\n    function get(Map storage map, address key) internal view returns (string memory) {\\n        return map.values[key];\\n    }\\n\\n    function getKeys(Map storage map) internal view returns (address[] memory) {\\n        return map.keys;\\n    }\\n\\n    function getKeyAtIndex(Map storage map, uint256 index) internal view returns (address) {\\n        return map.keys[index];\\n    }\\n\\n    function size(Map storage map) internal view returns (uint256) {\\n        return map.keys.length;\\n    }\\n\\n    function set(Map storage map, address key, string memory val) internal {\\n        if (!map.inserted[key]) {\\n            // add index of address to indexOf mapping\\n            map.indexOf[key] = map.keys.length;\\n\\n            // make value of address in inserted to true\\n            map.inserted[key] = true;\\n\\n            // add address to keys\\n            map.keys.push(key);\\n        }\\n\\n        // add address => true mapping to values\\n        map.values[key] = val;\\n    }\\n\\n    function remove(Map storage map, address key) internal {\\n        if (!map.inserted[key]) return;\\n\\n        // remove from values\\n        delete map.values[key];\\n        delete map.inserted[key];\\n\\n        // important backups\\n        uint256 index = map.indexOf[key];\\n        uint256 lastIndex = map.keys.length - 1;\\n        address lastKey = map.keys[lastIndex];\\n\\n        // update indexOf last element\\n        map.indexOf[lastKey] = index;\\n        delete map.indexOf[key];\\n\\n        // remove from keys\\n        map.keys[index] = lastKey;\\n        map.keys.pop();\\n    }\\n}\\n\",\"keccak256\":\"0x44a19745fb3130275849bcaaf82f085c8a50d1d105b431e5c6df0625e9289f14\",\"license\":\"MIT\"},\"contracts/AddressArrayUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary AddressArrayUtils {\\n    function indexOf(address[] memory arr, address key) internal pure returns (int256) {\\n        for (uint256 i = 0; i < arr.length; i++) {\\n            if (arr[i] == key) return int256(i);\\n        }\\n        return -1;\\n    }\\n\\n    function contains(address[] memory arr, address key) internal pure returns (bool) {\\n        return indexOf(arr, key) != -1;\\n    }\\n\\n    function remove(address[] storage arr, address key) internal returns (bool) {\\n        int256 i = indexOf(arr, key);\\n\\n        if (i == -1) return false;\\n\\n        address[] memory temp = arr;\\n        arr[uint256(i)] = temp[temp.length - 1];\\n        arr.pop();\\n\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x29555ad812fd5509ead59914b9bc59285a5f7b96bedcfed493bca55994271d67\",\"license\":\"MIT\"},\"contracts/Contract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"./Roles.sol\\\";\\nimport \\\"./AddressArrayUtils.sol\\\";\\nimport \\\"./AddToBoolMapping.sol\\\";\\n\\nerror Contract__NotAdmin();\\nerror Contract__NotDoctor();\\nerror Contract__NotPatient();\\nerror Contract__PendingDoctorApproval();\\nerror Contract__DoctorPublicKeyMissing();\\n\\ncontract Contract {\\n    // using methods of Roles for Role struct in Roles\\n    using Roles for Roles.Role;\\n    using AddToBoolMapping for AddToBoolMapping.Map;\\n    using AddressArrayUtils for address[];\\n\\n    struct MedicalRecord {\\n        address editor;\\n        address[] viewers;\\n        string key_data_hash;\\n    }\\n\\n    struct Admin {\\n        address user;\\n        string public_key;\\n        AddToBoolMapping.Map pending_doctors;\\n    }\\n\\n    struct Patients {\\n        Roles.Role users;\\n        mapping(address => MedicalRecord) records;\\n    }\\n\\n    struct Doctors {\\n        Roles.Role users;\\n        mapping(address => string) public_keys;\\n        mapping(address => AddToBoolMapping.Map) docToPatAccess;\\n    }\\n\\n    // defining roles - contains hashes\\n    Admin private admin;\\n    Doctors private doctors;\\n    Patients private patients;\\n\\n    // Initializing admin\\n    constructor() {\\n        admin.user = msg.sender;\\n    }\\n\\n    // Admin methods\\n    function isAdmin(address _address) public view returns (bool) {\\n        if (admin.user == _address) return true;\\n        return false;\\n    }\\n\\n    function getAdmin() public view returns (address) {\\n        return admin.user;\\n    }\\n\\n    function setAdminPubKey(string memory _public_key) public onlyAdmin {\\n        admin.public_key = _public_key;\\n    }\\n\\n    function getAdminPubKey() public view returns (string memory) {\\n        return admin.public_key;\\n    }\\n\\n    // Doctor methods\\n    function isDrRegistered(address _address) public view returns (bool) {\\n        return doctors.users.has(_address);\\n    }\\n\\n    function isDrPending(address _address) public view returns (bool) {\\n        return admin.pending_doctors.get(_address);\\n    }\\n\\n    function isDoctor(address _address) public view returns (bool) {\\n        if (!doctors.users.has(_address)) return false;\\n        if (admin.pending_doctors.get(_address)) return false;\\n        if (bytes(doctors.public_keys[_address]).length == 0) return false;\\n        return true;\\n    }\\n\\n    function registerDr(string memory _hash) public {\\n        if (isPatient(msg.sender)) revert(\\\"Contract: Address already registered as patient\\\");\\n        if (bytes(_hash).length == 0) revert(\\\"Contract: Empty hash is not allowed!\\\");\\n        doctors.users.add(msg.sender, _hash);\\n        admin.pending_doctors.set(msg.sender);\\n    }\\n\\n    function approveDr(address _address) public onlyAdmin {\\n        if (isDoctor(_address)) return;\\n        if (!doctors.users.has(_address)) return;\\n        admin.pending_doctors.unset(_address);\\n    }\\n\\n    function registerDrConfirm(string memory _public_key) public {\\n        if (bytes(_public_key).length == 0) revert(\\\"Contract: Empty public key is not allowed!\\\");\\n        if (!doctors.users.has(msg.sender)) revert Contract__NotDoctor();\\n        if (admin.pending_doctors.get(msg.sender)) revert Contract__PendingDoctorApproval();\\n        doctors.public_keys[msg.sender] = _public_key;\\n    }\\n\\n    function setDrHash(string memory _hash) public onlyDoctor {\\n        if (bytes(_hash).length == 0) revert(\\\"Contract: Empty hash is not allowed!\\\");\\n        doctors.users.setHash(msg.sender, _hash);\\n    }\\n\\n    function getDrHash(address _address) public view returns (string memory) {\\n        if (!isDrRegistered(_address)) revert Contract__NotDoctor();\\n        return doctors.users.getHash(_address);\\n    }\\n\\n    function getDrPubKey(address _address) public view returns (string memory) {\\n        return doctors.public_keys[_address];\\n    }\\n\\n    function getAllDrs() public view returns (address[] memory) {\\n        return doctors.users.getMembers();\\n    }\\n\\n    function getPendingDrs() public view returns (address[] memory) {\\n        return admin.pending_doctors.keys;\\n    }\\n\\n    function getPtsOfDr() public view onlyDoctor returns (address[] memory) {\\n        return doctors.docToPatAccess[msg.sender].keys;\\n    }\\n\\n    // Patient methods\\n    function isPatient(address _address) public view returns (bool) {\\n        return patients.users.has(_address);\\n    }\\n\\n    function registerPt(string memory _hash, string memory _key_data_hash) public {\\n        if (isDrRegistered(msg.sender) || isDoctor(msg.sender))\\n            revert(\\\"Contract: Address already registered as doctor\\\");\\n        if (bytes(_hash).length == 0) revert(\\\"Contract: Empty hash is not allowed\\\");\\n        patients.users.add(msg.sender, _hash);\\n        patients.records[msg.sender].editor = msg.sender;\\n        patients.records[msg.sender].key_data_hash = _key_data_hash;\\n    }\\n\\n    function setPtGeneralHash(string memory _hash) public onlyPatient {\\n        patients.users.setHash(msg.sender, _hash);\\n    }\\n\\n    function getPtGeneralHash(address _address) public view returns (string memory) {\\n        if (!isPatient(_address)) revert Contract__NotPatient();\\n\\n        if (\\n            msg.sender == _address ||\\n            patients.records[_address].editor == msg.sender ||\\n            patients.records[_address].viewers.indexOf(msg.sender) != -1\\n        ) return patients.users.getHash(_address);\\n\\n        revert(\\\"Not Allowed\\\");\\n    }\\n\\n    function setPtRecordHash(address _address, string memory _hash) public {\\n        if (!isPatient(_address)) revert Contract__NotPatient();\\n        if (!(patients.records[_address].editor == msg.sender)) revert(\\\"Not Allowed\\\");\\n        patients.records[_address].key_data_hash = _hash;\\n    }\\n\\n    function getPtRecordHash(address _address) public view returns (string memory) {\\n        if (!isPatient(_address)) revert Contract__NotPatient();\\n\\n        if (\\n            msg.sender == _address ||\\n            patients.records[_address].editor == msg.sender ||\\n            patients.records[_address].viewers.indexOf(msg.sender) != -1\\n        ) return patients.records[_address].key_data_hash;\\n\\n        revert(\\\"Not Allowed\\\");\\n    }\\n\\n    function getAllPts() public view returns (address[] memory) {\\n        return patients.users.getMembers();\\n    }\\n\\n    function changeEditorAccess(\\n        address _address,\\n        string memory _general_hash,\\n        string memory _key_hash\\n    ) public onlyPatient {\\n        // pending update - when user changes access, symmetric key S must be changed\\n        if (!isDoctor(_address)) revert Contract__NotDoctor();\\n\\n        // remove old editor access\\n        removeEditorAccess(_general_hash, _key_hash);\\n\\n        // add new editor access\\n        patients.records[msg.sender].editor = _address;\\n        doctors.docToPatAccess[_address].set(msg.sender);\\n    }\\n\\n    function removeEditorAccess(\\n        string memory _general_hash,\\n        string memory _key_hash\\n    ) public onlyPatient {\\n        address old_editor = patients.records[msg.sender].editor;\\n        patients.records[msg.sender].editor = msg.sender;\\n        doctors.docToPatAccess[old_editor].unset(msg.sender);\\n\\n        patients.users.setHash(msg.sender, _general_hash);\\n        patients.records[msg.sender].key_data_hash = _key_hash;\\n    }\\n\\n    function getDrOfPt() public view onlyPatient returns (address) {\\n        return patients.records[msg.sender].editor;\\n    }\\n\\n    function grantViewerAccess(address _address) public onlyPatient {\\n        if (!isDoctor(_address)) revert Contract__NotDoctor();\\n\\n        if (!patients.records[msg.sender].viewers.contains(_address)) {\\n            patients.records[msg.sender].viewers.push(_address);\\n        }\\n    }\\n\\n    function revokeViewerAccess(address _address) public onlyPatient {\\n        // pending update - when user revokes access, symmetric key S must be changed\\n        if (!isDoctor(_address)) revert Contract__NotDoctor();\\n\\n        patients.records[msg.sender].viewers.remove(_address);\\n    }\\n\\n    function getPatViewers() public view onlyPatient returns (address[] memory) {\\n        return patients.records[msg.sender].viewers;\\n    }\\n\\n    // modifiers\\n    modifier onlyAdmin() {\\n        if (!isAdmin(msg.sender)) revert Contract__NotAdmin();\\n        _;\\n    }\\n\\n    modifier onlyDoctor() {\\n        if (!doctors.users.has(msg.sender)) revert Contract__NotDoctor();\\n        if (admin.pending_doctors.get(msg.sender)) revert Contract__PendingDoctorApproval();\\n        if (bytes(doctors.public_keys[msg.sender]).length == 0)\\n            revert Contract__DoctorPublicKeyMissing();\\n        _;\\n    }\\n\\n    modifier onlyPatient() {\\n        if (!isPatient(msg.sender)) revert Contract__NotPatient();\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x460deb8680361b556e567c53560e188506f03f2e3efd041be882f0bde95e8b15\",\"license\":\"MIT\"},\"contracts/Roles.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"./AddToStrMapping.sol\\\";\\n\\nlibrary Roles {\\n    using AddToStrMapping for AddToStrMapping.Map;\\n\\n    // This is to keep track of roles\\n    // Reduces searching cost\\n    struct Role {\\n        AddToStrMapping.Map bearer;\\n    }\\n\\n    function add(Role storage role, address account, string memory hash) internal {\\n        require(!has(role, account), \\\"Roles: account already has role\\\");\\n        role.bearer.set(account, hash);\\n    }\\n\\n    function remove(Role storage role, address account) internal {\\n        require(has(role, account), \\\"Roles: account does not have role\\\");\\n        role.bearer.remove(account);\\n    }\\n\\n    function has(Role storage role, address account) internal view returns (bool) {\\n        require(account != address(0), \\\"Roles: account is the zero address\\\");\\n        return bytes(role.bearer.get(account)).length != 0;\\n    }\\n\\n    function setHash(Role storage role, address account, string memory _hash) internal {\\n        role.bearer.set(account, _hash);\\n    }\\n\\n    function getHash(Role storage role, address account) internal view returns (string memory) {\\n        return role.bearer.get(account);\\n    }\\n\\n    function getMembers(Role storage role) internal view returns (address[] memory) {\\n        return role.bearer.keys;\\n    }\\n}\\n\",\"keccak256\":\"0x35319b78de3f838d4fdae2c499ccf5b4ed9407222e38d041a303fb7b42bf47aa\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613a88806100636000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80638f9c79ed11610104578063c70597ad116100a2578063d3cd4df411610071578063d3cd4df41461053e578063dc823aaf1461055a578063e2877b4e1461058a578063f7a03a1e146105a8576101cf565b8063c70597ad146104b8578063cce9d43e146104d4578063ccfaed1614610504578063d0d9a5e314610520576101cf565b8063a03de49e116100de578063a03de49e14610446578063a53f514d14610462578063afb97e3d14610480578063b1e758a41461049c576101cf565b80638f9c79ed146103ca578063996440c6146103fa57806399eedd2a1461042a576101cf565b80633d8198b4116101715780636d4bce201161014b5780636d4bce20146103425780636e9960c31461037257806388c432e1146103905780638f7f43a9146103ac576101cf565b80633d8198b4146102c65780634df0a2d4146102f65780635b0a7aad14610326576101cf565b806321639f04116101ad57806321639f041461022c57806324d7806c1461024a578063290c61b01461027a57806332991838146102aa576101cf565b80630de99991146101d4578063116461e9146101f05780631da3e2dc1461020e575b600080fd5b6101ee60048036038101906101e99190612d21565b6105c4565b005b6101f8610647565b6040516102059190612dde565b60405180910390f35b6102166106dc565b6040516102239190612ebe565b60405180910390f35b6102346106f0565b6040516102419190612eef565b60405180910390f35b610264600480360381019061025f9190612d21565b61079c565b6040516102719190612f25565b60405180910390f35b610294600480360381019061028f9190612d21565b610808565b6040516102a19190612f25565b60405180910390f35b6102c460048036038101906102bf9190613075565b610828565b005b6102e060048036038101906102db9190612d21565b6108e8565b6040516102ed9190612dde565b60405180910390f35b610310600480360381019061030b9190612d21565b610c13565b60405161031d9190612dde565b60405180910390f35b610340600480360381019061033b91906130be565b610e87565b005b61035c60048036038101906103579190612d21565b611078565b6040516103699190612f25565b60405180910390f35b61037a611098565b6040516103879190612eef565b60405180910390f35b6103aa60048036038101906103a59190613075565b6110c4565b005b6103b461111f565b6040516103c19190612ebe565b60405180910390f35b6103e460048036038101906103df9190612d21565b61122f565b6040516103f19190612f25565b60405180910390f35b610414600480360381019061040f9190612d21565b61124f565b6040516104219190612f25565b60405180910390f35b610444600480360381019061043f9190613075565b611303565b005b610460600480360381019061045b91906130be565b611486565b005b61046a611617565b6040516104779190612ebe565b60405180910390f35b61049a60048036038101906104959190613075565b61162b565b005b6104b660048036038101906104b19190612d21565b611680565b005b6104d260048036038101906104cd9190613136565b611888565b005b6104ee60048036038101906104e99190612d21565b6119f1565b6040516104fb9190612dde565b60405180910390f35b61051e60048036038101906105199190613075565b611a50565b005b610528611b82565b6040516105359190612ebe565b60405180910390f35b61055860048036038101906105539190613192565b611d75565b005b610574600480360381019061056f9190612d21565b611ed9565b6040516105819190612dde565b60405180910390f35b610592611fad565b60405161059f9190612ebe565b60405180910390f35b6105c260048036038101906105bd9190612d21565b612041565b005b6105cd3361079c565b610603576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61060c8161124f565b6106445761062781600560000161211a90919063ffffffff16565b15610644576106438160006002016121ad90919063ffffffff16565b5b50565b6060600060010180546106599061324c565b80601f01602080910402602001604051908101604052809291908181526020018280546106859061324c565b80156106d25780601f106106a7576101008083540402835291602001916106d2565b820191906000526020600020905b8154815290600101906020018083116106b557829003601f168201915b5050505050905090565b60606106eb6005600001612430565b905090565b60006106fb3361122f565b610731576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008173ffffffffffffffffffffffffffffffffffffffff166000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036107fe5760019050610803565b600090505b919050565b600061082182600560000161211a90919063ffffffff16565b9050919050565b6108313361122f565b15610871576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610868906132ef565b60405180910390fd5b60008151036108b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ac90613381565b60405180910390fd5b6108ce338260056000016124c59092919063ffffffff16565b6108e533600060020161252c90919063ffffffff16565b50565b60606108f38261122f565b610929576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806109f357503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610af957507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610af633600b60040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015610ae357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610a99575b505050505061269090919063ffffffff16565b14155b15610bd357600b60040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018054610b4e9061324c565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7a9061324c565b8015610bc75780601f10610b9c57610100808354040283529160200191610bc7565b820191906000526020600020905b815481529060010190602001808311610baa57829003601f168201915b50505050509050610c0e565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c05906133ed565b60405180910390fd5b919050565b6060610c1e8261122f565b610c54576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610d1e57503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610e2457507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610e2133600b60040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015610e0e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610dc4575b505050505061269090919063ffffffff16565b14155b15610e4757610e4082600b60000161273590919063ffffffff16565b9050610e82565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e79906133ed565b60405180910390fd5b919050565b610e903361122f565b610ec6576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905033600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611007336005800160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206121ad90919063ffffffff16565b6110203384600b6000016127559092919063ffffffff16565b81600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201908161107291906135c3565b50505050565b600061109182600060020161277290919063ffffffff16565b9050919050565b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6110cd3361122f565b611103576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61111c3382600b6000016127559092919063ffffffff16565b50565b606061112a3361122f565b611160576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561122557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116111db575b5050505050905090565b600061124882600b60000161211a90919063ffffffff16565b9050919050565b600061126882600560000161211a90919063ffffffff16565b61127557600090506112fe565b61128c82600060020161277290919063ffffffff16565b1561129a57600090506112fe565b6000600560040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546112e99061324c565b9050036112f957600090506112fe565b600190505b919050565b61131a33600560000161211a90919063ffffffff16565b611350576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61136733600060020161277290919063ffffffff16565b1561139e576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546113ed9061324c565b905003611426576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081510361146a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146190613381565b60405180910390fd5b611483338260056000016127559092919063ffffffff16565b50565b61148f33610808565b8061149f575061149e3361124f565b5b156114df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d690613707565b60405180910390fd5b6000825103611523576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161151a90613799565b60405180910390fd5b61153c3383600b6000016124c59092919063ffffffff16565b33600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201908161161291906135c3565b505050565b6060611626600b600001612430565b905090565b6116343361079c565b61166a576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000600101908161167c91906135c3565b5050565b6116893361122f565b6116bf576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116c88161124f565b6116fe576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6117da81600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054806020026020016040519081016040528092919081815260200182805480156117c757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161177d575b50505050506127cb90919063ffffffff16565b61188557600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6118918261122f565b6118c7576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461199a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611991906133ed565b60405180910390fd5b80600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020190816119ec91906135c3565b505050565b60606119fc82610808565b611a32576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611a4982600560000161273590919063ffffffff16565b9050919050565b6000815103611a94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a8b9061382b565b60405180910390fd5b611aab33600560000161211a90919063ffffffff16565b611ae1576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611af833600060020161277290919063ffffffff16565b15611b2f576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081611b7e91906135c3565b5050565b6060611b9b33600560000161211a90919063ffffffff16565b611bd1576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611be833600060020161277290919063ffffffff16565b15611c1f576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054611c6e9061324c565b905003611ca7576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005800160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805480602002602001604051908101604052809291908181526020018280548015611d6b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611d21575b5050505050905090565b611d7e3361122f565b611db4576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611dbd8361124f565b611df3576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611dfd8282610e87565b82600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611ed4336005800160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061252c90919063ffffffff16565b505050565b6060600560040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054611f289061324c565b80601f0160208091040260200160405190810160405280929190818152602001828054611f549061324c565b8015611fa15780601f10611f7657610100808354040283529160200191611fa1565b820191906000526020600020905b815481529060010190602001808311611f8457829003601f168201915b50505050509050919050565b6060600060020160000180548060200260200160405190810160405280929190818152602001828054801561203757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611fed575b5050505050905090565b61204a3361122f565b612080576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6120898161124f565b6120bf576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61211681600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010161280290919063ffffffff16565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361218a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612181906138bd565b60405180910390fd5b60006121a28385600001612a2790919063ffffffff16565b511415905092915050565b8160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561242c578160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905560008260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600184600001805490506122ae919061390c565b905060008460000182815481106122c8576122c7613940565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828560020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508460020160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090558085600001848154811061239757612396613940565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846000018054806123f3576123f261396f565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555050505b5050565b6060816000016000018054806020026020016040519081016040528092919081815260200182805480156124b957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161246f575b50505050509050919050565b6124cf838361211a565b1561250f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612506906139ea565b60405180910390fd5b612527828285600001612afb9092919063ffffffff16565b505050565b8160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661268c5760018260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555081600001805490508260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b600080600090505b835181101561270a578273ffffffffffffffffffffffffffffffffffffffff168482815181106126cb576126ca613940565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036126f7578091505061272f565b808061270290613a0a565b915050612698565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b92915050565b606061274d8284600001612a2790919063ffffffff16565b905092915050565b61276d828285600001612afb9092919063ffffffff16565b505050565b60008260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6127f88484612690565b1415905092915050565b6000806128948480548060200260200160405190810160405280929190818152602001828054801561288957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161283f575b505050505084612690565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81036128c7576000915050612a21565b60008480548060200260200160405190810160405280929190818152602001828054801561294a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612900575b505050505090508060018251612960919061390c565b8151811061297157612970613940565b5b602002602001015185838154811061298c5761298b613940565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848054806129e5576129e461396f565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556001925050505b92915050565b60608260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054612a759061324c565b80601f0160208091040260200160405190810160405280929190818152602001828054612aa19061324c565b8015612aee5780601f10612ac357610100808354040283529160200191612aee565b820191906000526020600020905b815481529060010190602001808311612ad157829003601f168201915b5050505050905092915050565b8260030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16612c5b5782600001805490508360020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060018360030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555082600001829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b808360010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081612ca991906135c3565b50505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612cee82612cc3565b9050919050565b612cfe81612ce3565b8114612d0957600080fd5b50565b600081359050612d1b81612cf5565b92915050565b600060208284031215612d3757612d36612cb9565b5b6000612d4584828501612d0c565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612d88578082015181840152602081019050612d6d565b60008484015250505050565b6000601f19601f8301169050919050565b6000612db082612d4e565b612dba8185612d59565b9350612dca818560208601612d6a565b612dd381612d94565b840191505092915050565b60006020820190508181036000830152612df88184612da5565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612e3581612ce3565b82525050565b6000612e478383612e2c565b60208301905092915050565b6000602082019050919050565b6000612e6b82612e00565b612e758185612e0b565b9350612e8083612e1c565b8060005b83811015612eb1578151612e988882612e3b565b9750612ea383612e53565b925050600181019050612e84565b5085935050505092915050565b60006020820190508181036000830152612ed88184612e60565b905092915050565b612ee981612ce3565b82525050565b6000602082019050612f046000830184612ee0565b92915050565b60008115159050919050565b612f1f81612f0a565b82525050565b6000602082019050612f3a6000830184612f16565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612f8282612d94565b810181811067ffffffffffffffff82111715612fa157612fa0612f4a565b5b80604052505050565b6000612fb4612caf565b9050612fc08282612f79565b919050565b600067ffffffffffffffff821115612fe057612fdf612f4a565b5b612fe982612d94565b9050602081019050919050565b82818337600083830152505050565b600061301861301384612fc5565b612faa565b90508281526020810184848401111561303457613033612f45565b5b61303f848285612ff6565b509392505050565b600082601f83011261305c5761305b612f40565b5b813561306c848260208601613005565b91505092915050565b60006020828403121561308b5761308a612cb9565b5b600082013567ffffffffffffffff8111156130a9576130a8612cbe565b5b6130b584828501613047565b91505092915050565b600080604083850312156130d5576130d4612cb9565b5b600083013567ffffffffffffffff8111156130f3576130f2612cbe565b5b6130ff85828601613047565b925050602083013567ffffffffffffffff8111156131205761311f612cbe565b5b61312c85828601613047565b9150509250929050565b6000806040838503121561314d5761314c612cb9565b5b600061315b85828601612d0c565b925050602083013567ffffffffffffffff81111561317c5761317b612cbe565b5b61318885828601613047565b9150509250929050565b6000806000606084860312156131ab576131aa612cb9565b5b60006131b986828701612d0c565b935050602084013567ffffffffffffffff8111156131da576131d9612cbe565b5b6131e686828701613047565b925050604084013567ffffffffffffffff81111561320757613206612cbe565b5b61321386828701613047565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061326457607f821691505b6020821081036132775761327661321d565b5b50919050565b7f436f6e74726163743a204164647265737320616c72656164792072656769737460008201527f657265642061732070617469656e740000000000000000000000000000000000602082015250565b60006132d9602f83612d59565b91506132e48261327d565b604082019050919050565b60006020820190508181036000830152613308816132cc565b9050919050565b7f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60008201527f7765642100000000000000000000000000000000000000000000000000000000602082015250565b600061336b602483612d59565b91506133768261330f565b604082019050919050565b6000602082019050818103600083015261339a8161335e565b9050919050565b7f4e6f7420416c6c6f776564000000000000000000000000000000000000000000600082015250565b60006133d7600b83612d59565b91506133e2826133a1565b602082019050919050565b60006020820190508181036000830152613406816133ca565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261346f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613432565b6134798683613432565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006134c06134bb6134b684613491565b61349b565b613491565b9050919050565b6000819050919050565b6134da836134a5565b6134ee6134e6826134c7565b84845461343f565b825550505050565b600090565b6135036134f6565b61350e8184846134d1565b505050565b5b81811015613532576135276000826134fb565b600181019050613514565b5050565b601f821115613577576135488161340d565b61355184613422565b81016020851015613560578190505b61357461356c85613422565b830182613513565b50505b505050565b600082821c905092915050565b600061359a6000198460080261357c565b1980831691505092915050565b60006135b38383613589565b9150826002028217905092915050565b6135cc82612d4e565b67ffffffffffffffff8111156135e5576135e4612f4a565b5b6135ef825461324c565b6135fa828285613536565b600060209050601f83116001811461362d576000841561361b578287015190505b61362585826135a7565b86555061368d565b601f19841661363b8661340d565b60005b828110156136635784890151825560018201915060208501945060208101905061363e565b86831015613680578489015161367c601f891682613589565b8355505b6001600288020188555050505b505050505050565b7f436f6e74726163743a204164647265737320616c72656164792072656769737460008201527f6572656420617320646f63746f72000000000000000000000000000000000000602082015250565b60006136f1602e83612d59565b91506136fc82613695565b604082019050919050565b60006020820190508181036000830152613720816136e4565b9050919050565b7f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60008201527f7765640000000000000000000000000000000000000000000000000000000000602082015250565b6000613783602383612d59565b915061378e82613727565b604082019050919050565b600060208201905081810360008301526137b281613776565b9050919050565b7f436f6e74726163743a20456d707479207075626c6963206b6579206973206e6f60008201527f7420616c6c6f7765642100000000000000000000000000000000000000000000602082015250565b6000613815602a83612d59565b9150613820826137b9565b604082019050919050565b6000602082019050818103600083015261384481613808565b9050919050565b7f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006138a7602283612d59565b91506138b28261384b565b604082019050919050565b600060208201905081810360008301526138d68161389a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061391782613491565b915061392283613491565b925082820390508181111561393a576139396138dd565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500600082015250565b60006139d4601f83612d59565b91506139df8261399e565b602082019050919050565b60006020820190508181036000830152613a03816139c7565b9050919050565b6000613a1582613491565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613a4757613a466138dd565b5b60018201905091905056fea26469706673582212208c35785d0111eb0e29b5c05f1daad47b5b81ca18de1e1f79a6e02b593c6f891564736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c80638f9c79ed11610104578063c70597ad116100a2578063d3cd4df411610071578063d3cd4df41461053e578063dc823aaf1461055a578063e2877b4e1461058a578063f7a03a1e146105a8576101cf565b8063c70597ad146104b8578063cce9d43e146104d4578063ccfaed1614610504578063d0d9a5e314610520576101cf565b8063a03de49e116100de578063a03de49e14610446578063a53f514d14610462578063afb97e3d14610480578063b1e758a41461049c576101cf565b80638f9c79ed146103ca578063996440c6146103fa57806399eedd2a1461042a576101cf565b80633d8198b4116101715780636d4bce201161014b5780636d4bce20146103425780636e9960c31461037257806388c432e1146103905780638f7f43a9146103ac576101cf565b80633d8198b4146102c65780634df0a2d4146102f65780635b0a7aad14610326576101cf565b806321639f04116101ad57806321639f041461022c57806324d7806c1461024a578063290c61b01461027a57806332991838146102aa576101cf565b80630de99991146101d4578063116461e9146101f05780631da3e2dc1461020e575b600080fd5b6101ee60048036038101906101e99190612d21565b6105c4565b005b6101f8610647565b6040516102059190612dde565b60405180910390f35b6102166106dc565b6040516102239190612ebe565b60405180910390f35b6102346106f0565b6040516102419190612eef565b60405180910390f35b610264600480360381019061025f9190612d21565b61079c565b6040516102719190612f25565b60405180910390f35b610294600480360381019061028f9190612d21565b610808565b6040516102a19190612f25565b60405180910390f35b6102c460048036038101906102bf9190613075565b610828565b005b6102e060048036038101906102db9190612d21565b6108e8565b6040516102ed9190612dde565b60405180910390f35b610310600480360381019061030b9190612d21565b610c13565b60405161031d9190612dde565b60405180910390f35b610340600480360381019061033b91906130be565b610e87565b005b61035c60048036038101906103579190612d21565b611078565b6040516103699190612f25565b60405180910390f35b61037a611098565b6040516103879190612eef565b60405180910390f35b6103aa60048036038101906103a59190613075565b6110c4565b005b6103b461111f565b6040516103c19190612ebe565b60405180910390f35b6103e460048036038101906103df9190612d21565b61122f565b6040516103f19190612f25565b60405180910390f35b610414600480360381019061040f9190612d21565b61124f565b6040516104219190612f25565b60405180910390f35b610444600480360381019061043f9190613075565b611303565b005b610460600480360381019061045b91906130be565b611486565b005b61046a611617565b6040516104779190612ebe565b60405180910390f35b61049a60048036038101906104959190613075565b61162b565b005b6104b660048036038101906104b19190612d21565b611680565b005b6104d260048036038101906104cd9190613136565b611888565b005b6104ee60048036038101906104e99190612d21565b6119f1565b6040516104fb9190612dde565b60405180910390f35b61051e60048036038101906105199190613075565b611a50565b005b610528611b82565b6040516105359190612ebe565b60405180910390f35b61055860048036038101906105539190613192565b611d75565b005b610574600480360381019061056f9190612d21565b611ed9565b6040516105819190612dde565b60405180910390f35b610592611fad565b60405161059f9190612ebe565b60405180910390f35b6105c260048036038101906105bd9190612d21565b612041565b005b6105cd3361079c565b610603576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61060c8161124f565b6106445761062781600560000161211a90919063ffffffff16565b15610644576106438160006002016121ad90919063ffffffff16565b5b50565b6060600060010180546106599061324c565b80601f01602080910402602001604051908101604052809291908181526020018280546106859061324c565b80156106d25780601f106106a7576101008083540402835291602001916106d2565b820191906000526020600020905b8154815290600101906020018083116106b557829003601f168201915b5050505050905090565b60606106eb6005600001612430565b905090565b60006106fb3361122f565b610731576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008173ffffffffffffffffffffffffffffffffffffffff166000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036107fe5760019050610803565b600090505b919050565b600061082182600560000161211a90919063ffffffff16565b9050919050565b6108313361122f565b15610871576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610868906132ef565b60405180910390fd5b60008151036108b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ac90613381565b60405180910390fd5b6108ce338260056000016124c59092919063ffffffff16565b6108e533600060020161252c90919063ffffffff16565b50565b60606108f38261122f565b610929576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806109f357503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610af957507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610af633600b60040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015610ae357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610a99575b505050505061269090919063ffffffff16565b14155b15610bd357600b60040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018054610b4e9061324c565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7a9061324c565b8015610bc75780601f10610b9c57610100808354040283529160200191610bc7565b820191906000526020600020905b815481529060010190602001808311610baa57829003601f168201915b50505050509050610c0e565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c05906133ed565b60405180910390fd5b919050565b6060610c1e8261122f565b610c54576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610d1e57503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610e2457507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610e2133600b60040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015610e0e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610dc4575b505050505061269090919063ffffffff16565b14155b15610e4757610e4082600b60000161273590919063ffffffff16565b9050610e82565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e79906133ed565b60405180910390fd5b919050565b610e903361122f565b610ec6576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905033600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611007336005800160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206121ad90919063ffffffff16565b6110203384600b6000016127559092919063ffffffff16565b81600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201908161107291906135c3565b50505050565b600061109182600060020161277290919063ffffffff16565b9050919050565b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6110cd3361122f565b611103576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61111c3382600b6000016127559092919063ffffffff16565b50565b606061112a3361122f565b611160576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561122557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116111db575b5050505050905090565b600061124882600b60000161211a90919063ffffffff16565b9050919050565b600061126882600560000161211a90919063ffffffff16565b61127557600090506112fe565b61128c82600060020161277290919063ffffffff16565b1561129a57600090506112fe565b6000600560040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546112e99061324c565b9050036112f957600090506112fe565b600190505b919050565b61131a33600560000161211a90919063ffffffff16565b611350576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61136733600060020161277290919063ffffffff16565b1561139e576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546113ed9061324c565b905003611426576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081510361146a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146190613381565b60405180910390fd5b611483338260056000016127559092919063ffffffff16565b50565b61148f33610808565b8061149f575061149e3361124f565b5b156114df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d690613707565b60405180910390fd5b6000825103611523576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161151a90613799565b60405180910390fd5b61153c3383600b6000016124c59092919063ffffffff16565b33600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201908161161291906135c3565b505050565b6060611626600b600001612430565b905090565b6116343361079c565b61166a576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000600101908161167c91906135c3565b5050565b6116893361122f565b6116bf576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116c88161124f565b6116fe576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6117da81600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054806020026020016040519081016040528092919081815260200182805480156117c757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161177d575b50505050506127cb90919063ffffffff16565b61188557600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6118918261122f565b6118c7576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461199a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611991906133ed565b60405180910390fd5b80600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020190816119ec91906135c3565b505050565b60606119fc82610808565b611a32576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611a4982600560000161273590919063ffffffff16565b9050919050565b6000815103611a94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a8b9061382b565b60405180910390fd5b611aab33600560000161211a90919063ffffffff16565b611ae1576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611af833600060020161277290919063ffffffff16565b15611b2f576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081611b7e91906135c3565b5050565b6060611b9b33600560000161211a90919063ffffffff16565b611bd1576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611be833600060020161277290919063ffffffff16565b15611c1f576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054611c6e9061324c565b905003611ca7576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005800160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805480602002602001604051908101604052809291908181526020018280548015611d6b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611d21575b5050505050905090565b611d7e3361122f565b611db4576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611dbd8361124f565b611df3576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611dfd8282610e87565b82600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611ed4336005800160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061252c90919063ffffffff16565b505050565b6060600560040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054611f289061324c565b80601f0160208091040260200160405190810160405280929190818152602001828054611f549061324c565b8015611fa15780601f10611f7657610100808354040283529160200191611fa1565b820191906000526020600020905b815481529060010190602001808311611f8457829003601f168201915b50505050509050919050565b6060600060020160000180548060200260200160405190810160405280929190818152602001828054801561203757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611fed575b5050505050905090565b61204a3361122f565b612080576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6120898161124f565b6120bf576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61211681600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010161280290919063ffffffff16565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361218a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612181906138bd565b60405180910390fd5b60006121a28385600001612a2790919063ffffffff16565b511415905092915050565b8160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561242c578160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905560008260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600184600001805490506122ae919061390c565b905060008460000182815481106122c8576122c7613940565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828560020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508460020160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090558085600001848154811061239757612396613940565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846000018054806123f3576123f261396f565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555050505b5050565b6060816000016000018054806020026020016040519081016040528092919081815260200182805480156124b957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161246f575b50505050509050919050565b6124cf838361211a565b1561250f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612506906139ea565b60405180910390fd5b612527828285600001612afb9092919063ffffffff16565b505050565b8160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661268c5760018260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555081600001805490508260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b600080600090505b835181101561270a578273ffffffffffffffffffffffffffffffffffffffff168482815181106126cb576126ca613940565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036126f7578091505061272f565b808061270290613a0a565b915050612698565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b92915050565b606061274d8284600001612a2790919063ffffffff16565b905092915050565b61276d828285600001612afb9092919063ffffffff16565b505050565b60008260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6127f88484612690565b1415905092915050565b6000806128948480548060200260200160405190810160405280929190818152602001828054801561288957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161283f575b505050505084612690565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81036128c7576000915050612a21565b60008480548060200260200160405190810160405280929190818152602001828054801561294a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612900575b505050505090508060018251612960919061390c565b8151811061297157612970613940565b5b602002602001015185838154811061298c5761298b613940565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848054806129e5576129e461396f565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556001925050505b92915050565b60608260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054612a759061324c565b80601f0160208091040260200160405190810160405280929190818152602001828054612aa19061324c565b8015612aee5780601f10612ac357610100808354040283529160200191612aee565b820191906000526020600020905b815481529060010190602001808311612ad157829003601f168201915b5050505050905092915050565b8260030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16612c5b5782600001805490508360020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060018360030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555082600001829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b808360010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081612ca991906135c3565b50505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612cee82612cc3565b9050919050565b612cfe81612ce3565b8114612d0957600080fd5b50565b600081359050612d1b81612cf5565b92915050565b600060208284031215612d3757612d36612cb9565b5b6000612d4584828501612d0c565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612d88578082015181840152602081019050612d6d565b60008484015250505050565b6000601f19601f8301169050919050565b6000612db082612d4e565b612dba8185612d59565b9350612dca818560208601612d6a565b612dd381612d94565b840191505092915050565b60006020820190508181036000830152612df88184612da5565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612e3581612ce3565b82525050565b6000612e478383612e2c565b60208301905092915050565b6000602082019050919050565b6000612e6b82612e00565b612e758185612e0b565b9350612e8083612e1c565b8060005b83811015612eb1578151612e988882612e3b565b9750612ea383612e53565b925050600181019050612e84565b5085935050505092915050565b60006020820190508181036000830152612ed88184612e60565b905092915050565b612ee981612ce3565b82525050565b6000602082019050612f046000830184612ee0565b92915050565b60008115159050919050565b612f1f81612f0a565b82525050565b6000602082019050612f3a6000830184612f16565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612f8282612d94565b810181811067ffffffffffffffff82111715612fa157612fa0612f4a565b5b80604052505050565b6000612fb4612caf565b9050612fc08282612f79565b919050565b600067ffffffffffffffff821115612fe057612fdf612f4a565b5b612fe982612d94565b9050602081019050919050565b82818337600083830152505050565b600061301861301384612fc5565b612faa565b90508281526020810184848401111561303457613033612f45565b5b61303f848285612ff6565b509392505050565b600082601f83011261305c5761305b612f40565b5b813561306c848260208601613005565b91505092915050565b60006020828403121561308b5761308a612cb9565b5b600082013567ffffffffffffffff8111156130a9576130a8612cbe565b5b6130b584828501613047565b91505092915050565b600080604083850312156130d5576130d4612cb9565b5b600083013567ffffffffffffffff8111156130f3576130f2612cbe565b5b6130ff85828601613047565b925050602083013567ffffffffffffffff8111156131205761311f612cbe565b5b61312c85828601613047565b9150509250929050565b6000806040838503121561314d5761314c612cb9565b5b600061315b85828601612d0c565b925050602083013567ffffffffffffffff81111561317c5761317b612cbe565b5b61318885828601613047565b9150509250929050565b6000806000606084860312156131ab576131aa612cb9565b5b60006131b986828701612d0c565b935050602084013567ffffffffffffffff8111156131da576131d9612cbe565b5b6131e686828701613047565b925050604084013567ffffffffffffffff81111561320757613206612cbe565b5b61321386828701613047565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061326457607f821691505b6020821081036132775761327661321d565b5b50919050565b7f436f6e74726163743a204164647265737320616c72656164792072656769737460008201527f657265642061732070617469656e740000000000000000000000000000000000602082015250565b60006132d9602f83612d59565b91506132e48261327d565b604082019050919050565b60006020820190508181036000830152613308816132cc565b9050919050565b7f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60008201527f7765642100000000000000000000000000000000000000000000000000000000602082015250565b600061336b602483612d59565b91506133768261330f565b604082019050919050565b6000602082019050818103600083015261339a8161335e565b9050919050565b7f4e6f7420416c6c6f776564000000000000000000000000000000000000000000600082015250565b60006133d7600b83612d59565b91506133e2826133a1565b602082019050919050565b60006020820190508181036000830152613406816133ca565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261346f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613432565b6134798683613432565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006134c06134bb6134b684613491565b61349b565b613491565b9050919050565b6000819050919050565b6134da836134a5565b6134ee6134e6826134c7565b84845461343f565b825550505050565b600090565b6135036134f6565b61350e8184846134d1565b505050565b5b81811015613532576135276000826134fb565b600181019050613514565b5050565b601f821115613577576135488161340d565b61355184613422565b81016020851015613560578190505b61357461356c85613422565b830182613513565b50505b505050565b600082821c905092915050565b600061359a6000198460080261357c565b1980831691505092915050565b60006135b38383613589565b9150826002028217905092915050565b6135cc82612d4e565b67ffffffffffffffff8111156135e5576135e4612f4a565b5b6135ef825461324c565b6135fa828285613536565b600060209050601f83116001811461362d576000841561361b578287015190505b61362585826135a7565b86555061368d565b601f19841661363b8661340d565b60005b828110156136635784890151825560018201915060208501945060208101905061363e565b86831015613680578489015161367c601f891682613589565b8355505b6001600288020188555050505b505050505050565b7f436f6e74726163743a204164647265737320616c72656164792072656769737460008201527f6572656420617320646f63746f72000000000000000000000000000000000000602082015250565b60006136f1602e83612d59565b91506136fc82613695565b604082019050919050565b60006020820190508181036000830152613720816136e4565b9050919050565b7f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60008201527f7765640000000000000000000000000000000000000000000000000000000000602082015250565b6000613783602383612d59565b915061378e82613727565b604082019050919050565b600060208201905081810360008301526137b281613776565b9050919050565b7f436f6e74726163743a20456d707479207075626c6963206b6579206973206e6f60008201527f7420616c6c6f7765642100000000000000000000000000000000000000000000602082015250565b6000613815602a83612d59565b9150613820826137b9565b604082019050919050565b6000602082019050818103600083015261384481613808565b9050919050565b7f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006138a7602283612d59565b91506138b28261384b565b604082019050919050565b600060208201905081810360008301526138d68161389a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061391782613491565b915061392283613491565b925082820390508181111561393a576139396138dd565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500600082015250565b60006139d4601f83612d59565b91506139df8261399e565b602082019050919050565b60006020820190508181036000830152613a03816139c7565b9050919050565b6000613a1582613491565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613a4757613a466138dd565b5b60018201905091905056fea26469706673582212208c35785d0111eb0e29b5c05f1daad47b5b81ca18de1e1f79a6e02b593c6f891564736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 575,
        "contract": "contracts/Contract.sol:Contract",
        "label": "admin",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(Admin)550_storage"
      },
      {
        "astId": 578,
        "contract": "contracts/Contract.sol:Contract",
        "label": "doctors",
        "offset": 0,
        "slot": "5",
        "type": "t_struct(Doctors)572_storage"
      },
      {
        "astId": 581,
        "contract": "contracts/Contract.sol:Contract",
        "label": "patients",
        "offset": 0,
        "slot": "11",
        "type": "t_struct(Patients)559_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_address,t_struct(Map)13_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct AddToBoolMapping.Map)",
        "numberOfBytes": "32",
        "value": "t_struct(Map)13_storage"
      },
      "t_mapping(t_address,t_struct(MedicalRecord)542_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Contract.MedicalRecord)",
        "numberOfBytes": "32",
        "value": "t_struct(MedicalRecord)542_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Admin)550_storage": {
        "encoding": "inplace",
        "label": "struct Contract.Admin",
        "members": [
          {
            "astId": 544,
            "contract": "contracts/Contract.sol:Contract",
            "label": "user",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 546,
            "contract": "contracts/Contract.sol:Contract",
            "label": "public_key",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 549,
            "contract": "contracts/Contract.sol:Contract",
            "label": "pending_doctors",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(Map)13_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Doctors)572_storage": {
        "encoding": "inplace",
        "label": "struct Contract.Doctors",
        "members": [
          {
            "astId": 562,
            "contract": "contracts/Contract.sol:Contract",
            "label": "users",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Role)1471_storage"
          },
          {
            "astId": 566,
            "contract": "contracts/Contract.sol:Contract",
            "label": "public_keys",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_string_storage)"
          },
          {
            "astId": 571,
            "contract": "contracts/Contract.sol:Contract",
            "label": "docToPatAccess",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(Map)13_storage)"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Map)13_storage": {
        "encoding": "inplace",
        "label": "struct AddToBoolMapping.Map",
        "members": [
          {
            "astId": 4,
            "contract": "contracts/Contract.sol:Contract",
            "label": "keys",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 8,
            "contract": "contracts/Contract.sol:Contract",
            "label": "values",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 12,
            "contract": "contracts/Contract.sol:Contract",
            "label": "indexOf",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Map)204_storage": {
        "encoding": "inplace",
        "label": "struct AddToStrMapping.Map",
        "members": [
          {
            "astId": 191,
            "contract": "contracts/Contract.sol:Contract",
            "label": "keys",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 195,
            "contract": "contracts/Contract.sol:Contract",
            "label": "values",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_string_storage)"
          },
          {
            "astId": 199,
            "contract": "contracts/Contract.sol:Contract",
            "label": "indexOf",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 203,
            "contract": "contracts/Contract.sol:Contract",
            "label": "inserted",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(MedicalRecord)542_storage": {
        "encoding": "inplace",
        "label": "struct Contract.MedicalRecord",
        "members": [
          {
            "astId": 536,
            "contract": "contracts/Contract.sol:Contract",
            "label": "editor",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 539,
            "contract": "contracts/Contract.sol:Contract",
            "label": "viewers",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 541,
            "contract": "contracts/Contract.sol:Contract",
            "label": "key_data_hash",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Patients)559_storage": {
        "encoding": "inplace",
        "label": "struct Contract.Patients",
        "members": [
          {
            "astId": 553,
            "contract": "contracts/Contract.sol:Contract",
            "label": "users",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Role)1471_storage"
          },
          {
            "astId": 558,
            "contract": "contracts/Contract.sol:Contract",
            "label": "records",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(MedicalRecord)542_storage)"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Role)1471_storage": {
        "encoding": "inplace",
        "label": "struct Roles.Role",
        "members": [
          {
            "astId": 1470,
            "contract": "contracts/Contract.sol:Contract",
            "label": "bearer",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Map)204_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}