{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Contract__DoctorPublicKeyMissing",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__NotAdmin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__NotDoctor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__NotPatient",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__PendingDoctorApproval",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "addDoctor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_key_data_hash",
          "type": "string"
        }
      ],
      "name": "addPatient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "approveDoctor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "changeEditorAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_public_key",
          "type": "string"
        }
      ],
      "name": "confirmAddDr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdminPubKey",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllDrs",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllPats",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDocPats",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getDrHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getDrPubKey",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPatDr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getPatGeneralHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getPatRecordHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPatViewers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPendingDrs",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "grantViewerAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isDoctor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isDoctorRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isPatient",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "removeEditorAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "revokeViewerAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_public_key",
          "type": "string"
        }
      ],
      "name": "setAdminPubKey",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "setDrHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "setPatGeneralHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "setPatRecordHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9170a4d4ae037087903e391a909352d434edc2b23913f31f405909214a228a30",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "3240596",
    "logsBloom": "0x
    "blockHash": "0xb7d7b3cf58321ae20bc7e20375b7abacc958a047936fb04a1e74476f9cfb51cd",
    "transactionHash": "0x9170a4d4ae037087903e391a909352d434edc2b23913f31f405909214a228a30",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "3240596",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "f12fd207737dcff3cc9abe84f5d5054e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Contract__DoctorPublicKeyMissing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__NotAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__NotDoctor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__NotPatient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__PendingDoctorApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"addDoctor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_key_data_hash\",\"type\":\"string\"}],\"name\":\"addPatient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"approveDoctor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"changeEditorAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_public_key\",\"type\":\"string\"}],\"name\":\"confirmAddDr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdminPubKey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllDrs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPats\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDocPats\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getDrHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getDrPubKey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPatDr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getPatGeneralHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getPatRecordHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPatViewers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPendingDrs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"grantViewerAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isDoctor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isDoctorRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isPatient\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeEditorAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"revokeViewerAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_public_key\",\"type\":\"string\"}],\"name\":\"setAdminPubKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setDrHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setPatGeneralHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setPatRecordHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Contract.sol\":\"Contract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AddToBoolMapping.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary AddToBoolMapping {\\n    // mapping address => bool\\n    struct Map {\\n        address[] keys;\\n        mapping(address => bool) values;\\n        mapping(address => uint256) indexOf;\\n    }\\n\\n    function get(Map storage map, address key) internal view returns (bool) {\\n        return map.values[key];\\n    }\\n\\n    function getKeys(Map storage map) internal view returns (address[] memory) {\\n        return map.keys;\\n    }\\n\\n    function getKeyAtIndex(Map storage map, uint256 index) internal view returns (address) {\\n        return map.keys[index];\\n    }\\n\\n    function size(Map storage map) internal view returns (uint256) {\\n        return map.keys.length;\\n    }\\n\\n    function set(Map storage map, address key) internal {\\n        if (map.values[key]) return;\\n\\n        // add address => true mapping to values\\n        map.values[key] = true;\\n\\n        // add index of address to indexOf mapping\\n        map.indexOf[key] = map.keys.length;\\n\\n        // add address to keys\\n        map.keys.push(key);\\n    }\\n\\n    function unset(Map storage map, address key) internal {\\n        if (!map.values[key]) return;\\n\\n        // remove from values\\n        delete map.values[key];\\n\\n        // important backups\\n        uint256 index = map.indexOf[key];\\n        uint256 lastIndex = map.keys.length - 1;\\n        address lastKey = map.keys[lastIndex];\\n\\n        // update indexOf last element\\n        map.indexOf[lastKey] = index;\\n        delete map.indexOf[key];\\n\\n        // remove from keys\\n        map.keys[index] = lastKey;\\n        map.keys.pop();\\n    }\\n}\\n\",\"keccak256\":\"0xf4944f25058b889d9bebf1d53283eab488e3200f3e2a48e47f52849b113644cc\",\"license\":\"MIT\"},\"contracts/AddToStrMapping.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary AddToStrMapping {\\n    // mapping address => string\\n    struct Map {\\n        address[] keys;\\n        mapping(address => string) values;\\n        mapping(address => uint256) indexOf;\\n        mapping(address => bool) inserted;\\n    }\\n\\n    function get(Map storage map, address key) internal view returns (string memory) {\\n        return map.values[key];\\n    }\\n\\n    function getKeys(Map storage map) internal view returns (address[] memory) {\\n        return map.keys;\\n    }\\n\\n    function getKeyAtIndex(Map storage map, uint256 index) internal view returns (address) {\\n        return map.keys[index];\\n    }\\n\\n    function size(Map storage map) internal view returns (uint256) {\\n        return map.keys.length;\\n    }\\n\\n    function set(Map storage map, address key, string memory val) internal {\\n        if (!map.inserted[key]) {\\n            // add index of address to indexOf mapping\\n            map.indexOf[key] = map.keys.length;\\n\\n            // make value of address in inserted to true\\n            map.inserted[key] = true;\\n\\n            // add address to keys\\n            map.keys.push(key);\\n        }\\n\\n        // add address => true mapping to values\\n        map.values[key] = val;\\n    }\\n\\n    function remove(Map storage map, address key) internal {\\n        if (!map.inserted[key]) return;\\n\\n        // remove from values\\n        delete map.values[key];\\n        delete map.inserted[key];\\n\\n        // important backups\\n        uint256 index = map.indexOf[key];\\n        uint256 lastIndex = map.keys.length - 1;\\n        address lastKey = map.keys[lastIndex];\\n\\n        // update indexOf last element\\n        map.indexOf[lastKey] = index;\\n        delete map.indexOf[key];\\n\\n        // remove from keys\\n        map.keys[index] = lastKey;\\n        map.keys.pop();\\n    }\\n}\\n\",\"keccak256\":\"0x44a19745fb3130275849bcaaf82f085c8a50d1d105b431e5c6df0625e9289f14\",\"license\":\"MIT\"},\"contracts/AddressArrayUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary AddressArrayUtils {\\n    function indexOf(address[] memory arr, address key) internal pure returns (int256) {\\n        for (uint256 i = 0; i < arr.length; i++) {\\n            if (arr[i] == key) return int256(i);\\n        }\\n        return -1;\\n    }\\n\\n    function contains(address[] memory arr, address key) internal pure returns (bool) {\\n        return indexOf(arr, key) != -1;\\n    }\\n\\n    function remove(address[] storage arr, address key) internal returns (bool) {\\n        int256 i = indexOf(arr, key);\\n\\n        if (i == -1) return false;\\n\\n        address[] memory temp = arr;\\n        arr[uint256(i)] = temp[temp.length - 1];\\n        arr.pop();\\n\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x29555ad812fd5509ead59914b9bc59285a5f7b96bedcfed493bca55994271d67\",\"license\":\"MIT\"},\"contracts/Contract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"./Roles.sol\\\";\\nimport \\\"./AddressArrayUtils.sol\\\";\\nimport \\\"./AddToBoolMapping.sol\\\";\\n\\nerror Contract__NotAdmin();\\nerror Contract__NotDoctor();\\nerror Contract__NotPatient();\\nerror Contract__PendingDoctorApproval();\\nerror Contract__DoctorPublicKeyMissing();\\n\\ncontract Contract {\\n    // using methods of Roles for Role struct in Roles\\n    using Roles for Roles.Role;\\n    using AddToBoolMapping for AddToBoolMapping.Map;\\n    using AddressArrayUtils for address[];\\n\\n    struct MedicalRecord {\\n        address editor;\\n        address[] viewers;\\n        string key_data_hash;\\n    }\\n\\n    struct Admin {\\n        address user;\\n        string public_key;\\n        AddToBoolMapping.Map pending_doctors;\\n    }\\n\\n    struct Patients {\\n        Roles.Role users;\\n        mapping(address => MedicalRecord) records;\\n    }\\n\\n    struct Doctors {\\n        Roles.Role users;\\n        mapping(address => string) public_keys;\\n        mapping(address => AddToBoolMapping.Map) docToPatAccess;\\n    }\\n\\n    // defining roles - contains hashes\\n    Admin private admin;\\n    Doctors private doctors;\\n    Patients private patients;\\n\\n    // Initializing admin\\n    constructor() {\\n        admin.user = msg.sender;\\n    }\\n\\n    // Admin methods\\n    function getAdmin() public view returns (address) {\\n        return admin.user;\\n    }\\n\\n    function isAdmin(address _address) public view returns (bool) {\\n        if (admin.user == _address) return true;\\n        return false;\\n    }\\n\\n    function setAdminPubKey(string memory _public_key) public onlyAdmin {\\n        admin.public_key = _public_key;\\n    }\\n\\n    function getAdminPubKey() public view returns (string memory) {\\n        return admin.public_key;\\n    }\\n\\n    // Doctor methods\\n    function isDoctorRegistered(address _address) public view returns (bool) {\\n        return doctors.users.has(_address);\\n    }\\n\\n    function isDoctor(address _address) public view returns (bool) {\\n        if (!doctors.users.has(_address)) return false;\\n        if (admin.pending_doctors.get(_address)) return false;\\n        if (bytes(doctors.public_keys[_address]).length == 0) return false;\\n        return true;\\n    }\\n\\n    function addDoctor(string memory _hash) public {\\n        if (isPatient(msg.sender)) revert(\\\"Contract: Address already registered as patient\\\");\\n        if (bytes(_hash).length == 0) revert(\\\"Contract: Empty hash is not allowed!\\\");\\n        doctors.users.add(msg.sender, _hash);\\n        admin.pending_doctors.set(msg.sender);\\n    }\\n\\n    function approveDoctor(address _address) public onlyAdmin {\\n        if (isDoctor(_address)) return;\\n        if (!doctors.users.has(_address)) return;\\n        admin.pending_doctors.unset(_address);\\n    }\\n\\n    function confirmAddDr(string memory _public_key) public {\\n        if (bytes(_public_key).length == 0) revert(\\\"Contract: Empty public key is not allowed!\\\");\\n        if (!doctors.users.has(msg.sender)) revert Contract__NotDoctor();\\n        if (admin.pending_doctors.get(msg.sender)) revert Contract__PendingDoctorApproval();\\n        doctors.public_keys[msg.sender] = _public_key;\\n    }\\n\\n    function setDrHash(string memory _hash) public onlyDoctor {\\n        if (bytes(_hash).length == 0) revert(\\\"Contract: Empty hash is not allowed!\\\");\\n        doctors.users.setHash(msg.sender, _hash);\\n    }\\n\\n    function getDrHash(address _address) public view returns (string memory) {\\n        if (!isDoctorRegistered(_address)) revert Contract__NotDoctor();\\n        return doctors.users.getHash(_address);\\n    }\\n\\n    function getDrPubKey(address _address) public view returns (string memory) {\\n        return doctors.public_keys[_address];\\n    }\\n\\n    function getAllDrs() public view returns (address[] memory) {\\n        return doctors.users.getMembers();\\n    }\\n\\n    function getPendingDrs() public view returns (address[] memory) {\\n        return admin.pending_doctors.keys;\\n    }\\n\\n    function getDocPats() public view onlyDoctor returns (address[] memory) {\\n        return doctors.docToPatAccess[msg.sender].keys;\\n    }\\n\\n    // Patient methods\\n    function isPatient(address _address) public view returns (bool) {\\n        return patients.users.has(_address);\\n    }\\n\\n    function addPatient(string memory _hash, string memory _key_data_hash) public {\\n        if (isDoctorRegistered(msg.sender) || isDoctor(msg.sender))\\n            revert(\\\"Contract: Address already registered as doctor\\\");\\n        if (bytes(_hash).length == 0) revert(\\\"Contract: Empty hash is not allowed\\\");\\n        patients.users.add(msg.sender, _hash);\\n        patients.records[msg.sender].key_data_hash = _key_data_hash;\\n    }\\n\\n    function setPatGeneralHash(string memory _hash) public onlyPatient {\\n        patients.users.setHash(msg.sender, _hash);\\n    }\\n\\n    function getPatGeneralHash(address _address) public view returns (string memory) {\\n        if (!isPatient(_address)) revert Contract__NotPatient();\\n\\n        if (\\n            msg.sender == _address ||\\n            patients.records[_address].editor == msg.sender ||\\n            patients.records[_address].viewers.indexOf(msg.sender) != -1\\n        ) return patients.users.getHash(_address);\\n\\n        revert(\\\"Not Allowed\\\");\\n    }\\n\\n    function setPatRecordHash(address _address, string memory _hash) public {\\n        if (!isPatient(_address)) revert Contract__NotPatient();\\n        if (!(msg.sender == _address || patients.records[_address].editor == msg.sender))\\n            revert(\\\"Not Allowed\\\");\\n        patients.records[_address].key_data_hash = _hash;\\n    }\\n\\n    function getPatRecordHash(address _address) public view returns (string memory) {\\n        if (!isPatient(_address)) revert Contract__NotPatient();\\n\\n        if (\\n            msg.sender == _address ||\\n            patients.records[_address].editor == msg.sender ||\\n            patients.records[_address].viewers.indexOf(msg.sender) != -1\\n        ) return patients.records[_address].key_data_hash;\\n\\n        revert(\\\"Not Allowed\\\");\\n    }\\n\\n    function getAllPats() public view returns (address[] memory) {\\n        return patients.users.getMembers();\\n    }\\n\\n    function changeEditorAccess(address _address) public onlyPatient {\\n        // pending update - when user changes access, symmetric key S must be changed\\n        if (!isDoctor(_address)) revert Contract__NotDoctor();\\n\\n        // remove old editor access\\n        address old_editor = patients.records[msg.sender].editor;\\n        doctors.docToPatAccess[old_editor].unset(msg.sender);\\n\\n        // add new editor access\\n        patients.records[msg.sender].editor = _address;\\n        doctors.docToPatAccess[_address].set(msg.sender);\\n    }\\n\\n    function removeEditorAccess() public onlyPatient {\\n        address old_editor = patients.records[msg.sender].editor;\\n        patients.records[msg.sender].editor = address(0);\\n        doctors.docToPatAccess[old_editor].unset(msg.sender);\\n    }\\n\\n    function getPatDr() public view onlyPatient returns (address) {\\n        return patients.records[msg.sender].editor;\\n    }\\n\\n    function grantViewerAccess(address _address) public onlyPatient {\\n        if (!isDoctor(_address)) revert Contract__NotDoctor();\\n\\n        if (!patients.records[msg.sender].viewers.contains(_address)) {\\n            patients.records[msg.sender].viewers.push(_address);\\n        }\\n    }\\n\\n    function revokeViewerAccess(address _address) public onlyPatient {\\n        // pending update - when user revokes access, symmetric key S must be changed\\n        if (!isDoctor(_address)) revert Contract__NotDoctor();\\n\\n        patients.records[msg.sender].viewers.remove(_address);\\n    }\\n\\n    function getPatViewers() public view onlyPatient returns (address[] memory) {\\n        return patients.records[msg.sender].viewers;\\n    }\\n\\n    // modifiers\\n    modifier onlyAdmin() {\\n        if (!isAdmin(msg.sender)) revert Contract__NotAdmin();\\n        _;\\n    }\\n\\n    modifier onlyDoctor() {\\n        if (!doctors.users.has(msg.sender)) revert Contract__NotDoctor();\\n        if (admin.pending_doctors.get(msg.sender)) revert Contract__PendingDoctorApproval();\\n        if (bytes(doctors.public_keys[msg.sender]).length == 0)\\n            revert Contract__DoctorPublicKeyMissing();\\n        _;\\n    }\\n\\n    modifier onlyPatient() {\\n        if (!isPatient(msg.sender)) revert Contract__NotPatient();\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x8993b220f6c334f04a7a2843da4cb251cb69fad364c741747ca587c6ab1351be\",\"license\":\"MIT\"},\"contracts/Roles.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"./AddToStrMapping.sol\\\";\\n\\nlibrary Roles {\\n    using AddToStrMapping for AddToStrMapping.Map;\\n\\n    // This is to keep track of roles\\n    // Reduces searching cost\\n    struct Role {\\n        AddToStrMapping.Map bearer;\\n    }\\n\\n    function add(Role storage role, address account, string memory hash) internal {\\n        require(!has(role, account), \\\"Roles: account already has role\\\");\\n        role.bearer.set(account, hash);\\n    }\\n\\n    function remove(Role storage role, address account) internal {\\n        require(has(role, account), \\\"Roles: account does not have role\\\");\\n        role.bearer.remove(account);\\n    }\\n\\n    function has(Role storage role, address account) internal view returns (bool) {\\n        require(account != address(0), \\\"Roles: account is the zero address\\\");\\n        return bytes(role.bearer.get(account)).length != 0;\\n    }\\n\\n    function setHash(Role storage role, address account, string memory _hash) internal {\\n        role.bearer.set(account, _hash);\\n    }\\n\\n    function getHash(Role storage role, address account) internal view returns (string memory) {\\n        return role.bearer.get(account);\\n    }\\n\\n    function getMembers(Role storage role) internal view returns (address[] memory) {\\n        return role.bearer.keys;\\n    }\\n}\\n\",\"keccak256\":\"0x35319b78de3f838d4fdae2c499ccf5b4ed9407222e38d041a303fb7b42bf47aa\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613987806100636000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80638f472639116100f9578063cce9d43e11610097578063df70345c11610071578063df70345c14610505578063e2877b4e14610521578063ecfe0cbe1461053f578063f7a03a1e1461055b576101c4565b8063cce9d43e14610489578063dc823aaf146104b9578063dd36d4ae146104e9576101c4565b8063996440c6116100d3578063996440c61461040557806399eedd2a14610435578063afb97e3d14610451578063b1e758a41461046d576101c4565b80638f472639146103995780638f7f43a9146103b75780638f9c79ed146103d5576101c4565b806339b0f922116101665780636650b3f0116101405780636650b3f0146102ff5780636e9960c31461032f5780637428197f1461034d5780637855039014610369576101c4565b806339b0f922146102955780635ced594b146102c55780636160a5c2146102e3576101c4565b80631d613801116101a25780631d613801146102215780631da3e2dc1461022b578063239ee6c11461024957806324d7806c14610265576101c4565b80630be61700146101c95780630d52fb4d146101e5578063116461e914610203575b600080fd5b6101e360048036038101906101de9190612d93565b610577565b005b6101ed610637565b6040516101fa9190612ecc565b60405180910390f35b61020b61082a565b6040516102189190612f6d565b60405180910390f35b6102296108bf565b005b610233610a43565b6040516102409190612ecc565b60405180910390f35b610263600480360381019061025e9190612f8f565b610a57565b005b61027f600480360381019061027a9190613033565b610b64565b60405161028c919061307b565b60405180910390f35b6102af60048036038101906102aa9190613033565b610bd0565b6040516102bc9190612f6d565b60405180910390f35b6102cd610efb565b6040516102da9190612ecc565b60405180910390f35b6102fd60048036038101906102f89190613033565b610f0f565b005b61031960048036038101906103149190613033565b610f92565b6040516103269190612f6d565b60405180910390f35b610337611206565b60405161034491906130a5565b60405180910390f35b61036760048036038101906103629190612d93565b611232565b005b610383600480360381019061037e9190613033565b61128d565b604051610390919061307b565b60405180910390f35b6103a16112ad565b6040516103ae91906130a5565b60405180910390f35b6103bf611359565b6040516103cc9190612ecc565b60405180910390f35b6103ef60048036038101906103ea9190613033565b611469565b6040516103fc919061307b565b60405180910390f35b61041f600480360381019061041a9190613033565b611489565b60405161042c919061307b565b60405180910390f35b61044f600480360381019061044a9190612d93565b61153d565b005b61046b60048036038101906104669190612d93565b6116c0565b005b61048760048036038101906104829190613033565b611715565b005b6104a3600480360381019061049e9190613033565b61191d565b6040516104b09190612f6d565b60405180910390f35b6104d360048036038101906104ce9190613033565b61197c565b6040516104e09190612f6d565b60405180910390f35b61050360048036038101906104fe91906130c0565b611a50565b005b61051f600480360381019061051a9190613033565b611bef565b005b610529611e05565b6040516105369190612ecc565b60405180910390f35b61055960048036038101906105549190612d93565b611e99565b005b61057560048036038101906105709190613033565b611fcb565b005b61058033611469565b156105c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b79061318e565b60405180910390fd5b6000815103610604576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fb90613220565b60405180910390fd5b61061d338260056000016120a49092919063ffffffff16565b61063433600060020161210b90919063ffffffff16565b50565b606061065033600560000161226f90919063ffffffff16565b610686576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61069d33600060020161230290919063ffffffff16565b156106d4576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546107239061326f565b90500361075c576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005800160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180548060200260200160405190810160405280929190818152602001828054801561082057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107d6575b5050505050905090565b60606000600101805461083c9061326f565b80601f01602080910402602001604051908101604052809291908181526020018280546108689061326f565b80156108b55780601f1061088a576101008083540402835291602001916108b5565b820191906000526020600020905b81548152906001019060200180831161089857829003601f168201915b5050505050905090565b6108c833611469565b6108fe576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610a40336005800160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061235b90919063ffffffff16565b50565b6060610a5260056000016125de565b905090565b610a603361128d565b80610a705750610a6f33611489565b5b15610ab0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa790613312565b60405180910390fd5b6000825103610af4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aeb906133a4565b60405180910390fd5b610b0d3383600b6000016120a49092919063ffffffff16565b80600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002019081610b5f919061357a565b505050565b60008173ffffffffffffffffffffffffffffffffffffffff166000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610bc65760019050610bcb565b600090505b919050565b6060610bdb82611469565b610c11576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610cdb57503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610de157507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610dde33600b60040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015610dcb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d81575b505050505061267390919063ffffffff16565b14155b15610ebb57600b60040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018054610e369061326f565b80601f0160208091040260200160405190810160405280929190818152602001828054610e629061326f565b8015610eaf5780601f10610e8457610100808354040283529160200191610eaf565b820191906000526020600020905b815481529060010190602001808311610e9257829003601f168201915b50505050509050610ef6565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eed90613698565b60405180910390fd5b919050565b6060610f0a600b6000016125de565b905090565b610f1833610b64565b610f4e576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f5781611489565b610f8f57610f7281600560000161226f90919063ffffffff16565b15610f8f57610f8e81600060020161235b90919063ffffffff16565b5b50565b6060610f9d82611469565b610fd3576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061109d57503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b806111a357507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6111a033600b60040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561118d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611143575b505050505061267390919063ffffffff16565b14155b156111c6576111bf82600b60000161271890919063ffffffff16565b9050611201565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f890613698565b60405180910390fd5b919050565b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61123b33611469565b611271576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61128a3382600b6000016127389092919063ffffffff16565b50565b60006112a682600560000161226f90919063ffffffff16565b9050919050565b60006112b833611469565b6112ee576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606061136433611469565b61139a576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561145f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611415575b5050505050905090565b600061148282600b60000161226f90919063ffffffff16565b9050919050565b60006114a282600560000161226f90919063ffffffff16565b6114af5760009050611538565b6114c682600060020161230290919063ffffffff16565b156114d45760009050611538565b6000600560040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546115239061326f565b9050036115335760009050611538565b600190505b919050565b61155433600560000161226f90919063ffffffff16565b61158a576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115a133600060020161230290919063ffffffff16565b156115d8576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546116279061326f565b905003611660576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008151036116a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169b90613220565b60405180910390fd5b6116bd338260056000016127389092919063ffffffff16565b50565b6116c933610b64565b6116ff576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060006001019081611711919061357a565b5050565b61171e33611469565b611754576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61175d81611489565b611793576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61186f81600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561185c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611812575b505050505061275590919063ffffffff16565b61191a57600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60606119288261128d565b61195e576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61197582600560000161271890919063ffffffff16565b9050919050565b6060600560040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546119cb9061326f565b80601f01602080910402602001604051908101604052809291908181526020018280546119f79061326f565b8015611a445780601f10611a1957610100808354040283529160200191611a44565b820191906000526020600020905b815481529060010190602001808311611a2757829003601f168201915b50505050509050919050565b611a5982611469565b611a8f576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611b5957503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b611b98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b8f90613698565b60405180910390fd5b80600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002019081611bea919061357a565b505050565b611bf833611469565b611c2e576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611c3781611489565b611c6d576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611d2a336005800160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061235b90919063ffffffff16565b81600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611e01336005800160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061210b90919063ffffffff16565b5050565b60606000600201600001805480602002602001604051908101604052809291908181526020018280548015611e8f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611e45575b5050505050905090565b6000815103611edd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ed49061372a565b60405180910390fd5b611ef433600560000161226f90919063ffffffff16565b611f2a576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611f4133600060020161230290919063ffffffff16565b15611f78576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081611fc7919061357a565b5050565b611fd433611469565b61200a576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61201381611489565b612049576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6120a081600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010161278c90919063ffffffff16565b5050565b6120ae838361226f565b156120ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120e590613796565b60405180910390fd5b6121068282856000016129b19092919063ffffffff16565b505050565b8160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661226b5760018260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555081600001805490508260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036122df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122d690613828565b60405180910390fd5b60006122f78385600001612b6590919063ffffffff16565b511415905092915050565b60008260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b8160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156125da578160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905560008260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006001846000018054905061245c9190613877565b90506000846000018281548110612476576124756138ab565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828560020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508460020160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905580856000018481548110612545576125446138ab565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846000018054806125a1576125a06138da565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555050505b5050565b60608160000160000180548060200260200160405190810160405280929190818152602001828054801561266757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161261d575b50505050509050919050565b600080600090505b83518110156126ed578273ffffffffffffffffffffffffffffffffffffffff168482815181106126ae576126ad6138ab565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036126da5780915050612712565b80806126e590613909565b91505061267b565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b92915050565b60606127308284600001612b6590919063ffffffff16565b905092915050565b6127508282856000016129b19092919063ffffffff16565b505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6127828484612673565b1415905092915050565b60008061281e8480548060200260200160405190810160405280929190818152602001828054801561281357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116127c9575b505050505084612673565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81036128515760009150506129ab565b6000848054806020026020016040519081016040528092919081815260200182805480156128d457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161288a575b5050505050905080600182516128ea9190613877565b815181106128fb576128fa6138ab565b5b6020026020010151858381548110612916576129156138ab565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508480548061296f5761296e6138da565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556001925050505b92915050565b8260030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16612b115782600001805490508360020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060018360030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555082600001829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b808360010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081612b5f919061357a565b50505050565b60608260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054612bb39061326f565b80601f0160208091040260200160405190810160405280929190818152602001828054612bdf9061326f565b8015612c2c5780601f10612c0157610100808354040283529160200191612c2c565b820191906000526020600020905b815481529060010190602001808311612c0f57829003601f168201915b5050505050905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612ca082612c57565b810181811067ffffffffffffffff82111715612cbf57612cbe612c68565b5b80604052505050565b6000612cd2612c39565b9050612cde8282612c97565b919050565b600067ffffffffffffffff821115612cfe57612cfd612c68565b5b612d0782612c57565b9050602081019050919050565b82818337600083830152505050565b6000612d36612d3184612ce3565b612cc8565b905082815260208101848484011115612d5257612d51612c52565b5b612d5d848285612d14565b509392505050565b600082601f830112612d7a57612d79612c4d565b5b8135612d8a848260208601612d23565b91505092915050565b600060208284031215612da957612da8612c43565b5b600082013567ffffffffffffffff811115612dc757612dc6612c48565b5b612dd384828501612d65565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612e3382612e08565b9050919050565b612e4381612e28565b82525050565b6000612e558383612e3a565b60208301905092915050565b6000602082019050919050565b6000612e7982612ddc565b612e838185612de7565b9350612e8e83612df8565b8060005b83811015612ebf578151612ea68882612e49565b9750612eb183612e61565b925050600181019050612e92565b5085935050505092915050565b60006020820190508181036000830152612ee68184612e6e565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612f28578082015181840152602081019050612f0d565b60008484015250505050565b6000612f3f82612eee565b612f498185612ef9565b9350612f59818560208601612f0a565b612f6281612c57565b840191505092915050565b60006020820190508181036000830152612f878184612f34565b905092915050565b60008060408385031215612fa657612fa5612c43565b5b600083013567ffffffffffffffff811115612fc457612fc3612c48565b5b612fd085828601612d65565b925050602083013567ffffffffffffffff811115612ff157612ff0612c48565b5b612ffd85828601612d65565b9150509250929050565b61301081612e28565b811461301b57600080fd5b50565b60008135905061302d81613007565b92915050565b60006020828403121561304957613048612c43565b5b60006130578482850161301e565b91505092915050565b60008115159050919050565b61307581613060565b82525050565b6000602082019050613090600083018461306c565b92915050565b61309f81612e28565b82525050565b60006020820190506130ba6000830184613096565b92915050565b600080604083850312156130d7576130d6612c43565b5b60006130e58582860161301e565b925050602083013567ffffffffffffffff81111561310657613105612c48565b5b61311285828601612d65565b9150509250929050565b7f436f6e74726163743a204164647265737320616c72656164792072656769737460008201527f657265642061732070617469656e740000000000000000000000000000000000602082015250565b6000613178602f83612ef9565b91506131838261311c565b604082019050919050565b600060208201905081810360008301526131a78161316b565b9050919050565b7f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60008201527f7765642100000000000000000000000000000000000000000000000000000000602082015250565b600061320a602483612ef9565b9150613215826131ae565b604082019050919050565b60006020820190508181036000830152613239816131fd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061328757607f821691505b60208210810361329a57613299613240565b5b50919050565b7f436f6e74726163743a204164647265737320616c72656164792072656769737460008201527f6572656420617320646f63746f72000000000000000000000000000000000000602082015250565b60006132fc602e83612ef9565b9150613307826132a0565b604082019050919050565b6000602082019050818103600083015261332b816132ef565b9050919050565b7f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60008201527f7765640000000000000000000000000000000000000000000000000000000000602082015250565b600061338e602383612ef9565b915061339982613332565b604082019050919050565b600060208201905081810360008301526133bd81613381565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026134267fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826133e9565b61343086836133e9565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061347761347261346d84613448565b613452565b613448565b9050919050565b6000819050919050565b6134918361345c565b6134a561349d8261347e565b8484546133f6565b825550505050565b600090565b6134ba6134ad565b6134c5818484613488565b505050565b5b818110156134e9576134de6000826134b2565b6001810190506134cb565b5050565b601f82111561352e576134ff816133c4565b613508846133d9565b81016020851015613517578190505b61352b613523856133d9565b8301826134ca565b50505b505050565b600082821c905092915050565b600061355160001984600802613533565b1980831691505092915050565b600061356a8383613540565b9150826002028217905092915050565b61358382612eee565b67ffffffffffffffff81111561359c5761359b612c68565b5b6135a6825461326f565b6135b18282856134ed565b600060209050601f8311600181146135e457600084156135d2578287015190505b6135dc858261355e565b865550613644565b601f1984166135f2866133c4565b60005b8281101561361a578489015182556001820191506020850194506020810190506135f5565b868310156136375784890151613633601f891682613540565b8355505b6001600288020188555050505b505050505050565b7f4e6f7420416c6c6f776564000000000000000000000000000000000000000000600082015250565b6000613682600b83612ef9565b915061368d8261364c565b602082019050919050565b600060208201905081810360008301526136b181613675565b9050919050565b7f436f6e74726163743a20456d707479207075626c6963206b6579206973206e6f60008201527f7420616c6c6f7765642100000000000000000000000000000000000000000000602082015250565b6000613714602a83612ef9565b915061371f826136b8565b604082019050919050565b6000602082019050818103600083015261374381613707565b9050919050565b7f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500600082015250565b6000613780601f83612ef9565b915061378b8261374a565b602082019050919050565b600060208201905081810360008301526137af81613773565b9050919050565b7f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000613812602283612ef9565b915061381d826137b6565b604082019050919050565b6000602082019050818103600083015261384181613805565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061388282613448565b915061388d83613448565b92508282039050818111156138a5576138a4613848565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600061391482613448565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361394657613945613848565b5b60018201905091905056fea2646970667358221220e763060d62c0232c6768344f3d0494fc6b2e8c41253bf0bfd75347b14e52a13764736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c80638f472639116100f9578063cce9d43e11610097578063df70345c11610071578063df70345c14610505578063e2877b4e14610521578063ecfe0cbe1461053f578063f7a03a1e1461055b576101c4565b8063cce9d43e14610489578063dc823aaf146104b9578063dd36d4ae146104e9576101c4565b8063996440c6116100d3578063996440c61461040557806399eedd2a14610435578063afb97e3d14610451578063b1e758a41461046d576101c4565b80638f472639146103995780638f7f43a9146103b75780638f9c79ed146103d5576101c4565b806339b0f922116101665780636650b3f0116101405780636650b3f0146102ff5780636e9960c31461032f5780637428197f1461034d5780637855039014610369576101c4565b806339b0f922146102955780635ced594b146102c55780636160a5c2146102e3576101c4565b80631d613801116101a25780631d613801146102215780631da3e2dc1461022b578063239ee6c11461024957806324d7806c14610265576101c4565b80630be61700146101c95780630d52fb4d146101e5578063116461e914610203575b600080fd5b6101e360048036038101906101de9190612d93565b610577565b005b6101ed610637565b6040516101fa9190612ecc565b60405180910390f35b61020b61082a565b6040516102189190612f6d565b60405180910390f35b6102296108bf565b005b610233610a43565b6040516102409190612ecc565b60405180910390f35b610263600480360381019061025e9190612f8f565b610a57565b005b61027f600480360381019061027a9190613033565b610b64565b60405161028c919061307b565b60405180910390f35b6102af60048036038101906102aa9190613033565b610bd0565b6040516102bc9190612f6d565b60405180910390f35b6102cd610efb565b6040516102da9190612ecc565b60405180910390f35b6102fd60048036038101906102f89190613033565b610f0f565b005b61031960048036038101906103149190613033565b610f92565b6040516103269190612f6d565b60405180910390f35b610337611206565b60405161034491906130a5565b60405180910390f35b61036760048036038101906103629190612d93565b611232565b005b610383600480360381019061037e9190613033565b61128d565b604051610390919061307b565b60405180910390f35b6103a16112ad565b6040516103ae91906130a5565b60405180910390f35b6103bf611359565b6040516103cc9190612ecc565b60405180910390f35b6103ef60048036038101906103ea9190613033565b611469565b6040516103fc919061307b565b60405180910390f35b61041f600480360381019061041a9190613033565b611489565b60405161042c919061307b565b60405180910390f35b61044f600480360381019061044a9190612d93565b61153d565b005b61046b60048036038101906104669190612d93565b6116c0565b005b61048760048036038101906104829190613033565b611715565b005b6104a3600480360381019061049e9190613033565b61191d565b6040516104b09190612f6d565b60405180910390f35b6104d360048036038101906104ce9190613033565b61197c565b6040516104e09190612f6d565b60405180910390f35b61050360048036038101906104fe91906130c0565b611a50565b005b61051f600480360381019061051a9190613033565b611bef565b005b610529611e05565b6040516105369190612ecc565b60405180910390f35b61055960048036038101906105549190612d93565b611e99565b005b61057560048036038101906105709190613033565b611fcb565b005b61058033611469565b156105c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b79061318e565b60405180910390fd5b6000815103610604576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fb90613220565b60405180910390fd5b61061d338260056000016120a49092919063ffffffff16565b61063433600060020161210b90919063ffffffff16565b50565b606061065033600560000161226f90919063ffffffff16565b610686576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61069d33600060020161230290919063ffffffff16565b156106d4576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546107239061326f565b90500361075c576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005800160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180548060200260200160405190810160405280929190818152602001828054801561082057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107d6575b5050505050905090565b60606000600101805461083c9061326f565b80601f01602080910402602001604051908101604052809291908181526020018280546108689061326f565b80156108b55780601f1061088a576101008083540402835291602001916108b5565b820191906000526020600020905b81548152906001019060200180831161089857829003601f168201915b5050505050905090565b6108c833611469565b6108fe576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610a40336005800160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061235b90919063ffffffff16565b50565b6060610a5260056000016125de565b905090565b610a603361128d565b80610a705750610a6f33611489565b5b15610ab0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa790613312565b60405180910390fd5b6000825103610af4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aeb906133a4565b60405180910390fd5b610b0d3383600b6000016120a49092919063ffffffff16565b80600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002019081610b5f919061357a565b505050565b60008173ffffffffffffffffffffffffffffffffffffffff166000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610bc65760019050610bcb565b600090505b919050565b6060610bdb82611469565b610c11576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610cdb57503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610de157507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610dde33600b60040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015610dcb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d81575b505050505061267390919063ffffffff16565b14155b15610ebb57600b60040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018054610e369061326f565b80601f0160208091040260200160405190810160405280929190818152602001828054610e629061326f565b8015610eaf5780601f10610e8457610100808354040283529160200191610eaf565b820191906000526020600020905b815481529060010190602001808311610e9257829003601f168201915b50505050509050610ef6565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eed90613698565b60405180910390fd5b919050565b6060610f0a600b6000016125de565b905090565b610f1833610b64565b610f4e576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f5781611489565b610f8f57610f7281600560000161226f90919063ffffffff16565b15610f8f57610f8e81600060020161235b90919063ffffffff16565b5b50565b6060610f9d82611469565b610fd3576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061109d57503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b806111a357507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6111a033600b60040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561118d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611143575b505050505061267390919063ffffffff16565b14155b156111c6576111bf82600b60000161271890919063ffffffff16565b9050611201565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f890613698565b60405180910390fd5b919050565b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61123b33611469565b611271576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61128a3382600b6000016127389092919063ffffffff16565b50565b60006112a682600560000161226f90919063ffffffff16565b9050919050565b60006112b833611469565b6112ee576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606061136433611469565b61139a576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561145f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611415575b5050505050905090565b600061148282600b60000161226f90919063ffffffff16565b9050919050565b60006114a282600560000161226f90919063ffffffff16565b6114af5760009050611538565b6114c682600060020161230290919063ffffffff16565b156114d45760009050611538565b6000600560040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546115239061326f565b9050036115335760009050611538565b600190505b919050565b61155433600560000161226f90919063ffffffff16565b61158a576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115a133600060020161230290919063ffffffff16565b156115d8576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546116279061326f565b905003611660576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008151036116a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169b90613220565b60405180910390fd5b6116bd338260056000016127389092919063ffffffff16565b50565b6116c933610b64565b6116ff576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060006001019081611711919061357a565b5050565b61171e33611469565b611754576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61175d81611489565b611793576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61186f81600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561185c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611812575b505050505061275590919063ffffffff16565b61191a57600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60606119288261128d565b61195e576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61197582600560000161271890919063ffffffff16565b9050919050565b6060600560040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546119cb9061326f565b80601f01602080910402602001604051908101604052809291908181526020018280546119f79061326f565b8015611a445780601f10611a1957610100808354040283529160200191611a44565b820191906000526020600020905b815481529060010190602001808311611a2757829003601f168201915b50505050509050919050565b611a5982611469565b611a8f576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611b5957503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b611b98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b8f90613698565b60405180910390fd5b80600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002019081611bea919061357a565b505050565b611bf833611469565b611c2e576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611c3781611489565b611c6d576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611d2a336005800160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061235b90919063ffffffff16565b81600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611e01336005800160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061210b90919063ffffffff16565b5050565b60606000600201600001805480602002602001604051908101604052809291908181526020018280548015611e8f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611e45575b5050505050905090565b6000815103611edd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ed49061372a565b60405180910390fd5b611ef433600560000161226f90919063ffffffff16565b611f2a576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611f4133600060020161230290919063ffffffff16565b15611f78576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081611fc7919061357a565b5050565b611fd433611469565b61200a576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61201381611489565b612049576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6120a081600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010161278c90919063ffffffff16565b5050565b6120ae838361226f565b156120ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120e590613796565b60405180910390fd5b6121068282856000016129b19092919063ffffffff16565b505050565b8160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661226b5760018260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555081600001805490508260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036122df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122d690613828565b60405180910390fd5b60006122f78385600001612b6590919063ffffffff16565b511415905092915050565b60008260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b8160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156125da578160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905560008260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006001846000018054905061245c9190613877565b90506000846000018281548110612476576124756138ab565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828560020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508460020160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905580856000018481548110612545576125446138ab565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846000018054806125a1576125a06138da565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555050505b5050565b60608160000160000180548060200260200160405190810160405280929190818152602001828054801561266757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161261d575b50505050509050919050565b600080600090505b83518110156126ed578273ffffffffffffffffffffffffffffffffffffffff168482815181106126ae576126ad6138ab565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036126da5780915050612712565b80806126e590613909565b91505061267b565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b92915050565b60606127308284600001612b6590919063ffffffff16565b905092915050565b6127508282856000016129b19092919063ffffffff16565b505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6127828484612673565b1415905092915050565b60008061281e8480548060200260200160405190810160405280929190818152602001828054801561281357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116127c9575b505050505084612673565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81036128515760009150506129ab565b6000848054806020026020016040519081016040528092919081815260200182805480156128d457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161288a575b5050505050905080600182516128ea9190613877565b815181106128fb576128fa6138ab565b5b6020026020010151858381548110612916576129156138ab565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508480548061296f5761296e6138da565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556001925050505b92915050565b8260030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16612b115782600001805490508360020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060018360030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555082600001829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b808360010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081612b5f919061357a565b50505050565b60608260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054612bb39061326f565b80601f0160208091040260200160405190810160405280929190818152602001828054612bdf9061326f565b8015612c2c5780601f10612c0157610100808354040283529160200191612c2c565b820191906000526020600020905b815481529060010190602001808311612c0f57829003601f168201915b5050505050905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612ca082612c57565b810181811067ffffffffffffffff82111715612cbf57612cbe612c68565b5b80604052505050565b6000612cd2612c39565b9050612cde8282612c97565b919050565b600067ffffffffffffffff821115612cfe57612cfd612c68565b5b612d0782612c57565b9050602081019050919050565b82818337600083830152505050565b6000612d36612d3184612ce3565b612cc8565b905082815260208101848484011115612d5257612d51612c52565b5b612d5d848285612d14565b509392505050565b600082601f830112612d7a57612d79612c4d565b5b8135612d8a848260208601612d23565b91505092915050565b600060208284031215612da957612da8612c43565b5b600082013567ffffffffffffffff811115612dc757612dc6612c48565b5b612dd384828501612d65565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612e3382612e08565b9050919050565b612e4381612e28565b82525050565b6000612e558383612e3a565b60208301905092915050565b6000602082019050919050565b6000612e7982612ddc565b612e838185612de7565b9350612e8e83612df8565b8060005b83811015612ebf578151612ea68882612e49565b9750612eb183612e61565b925050600181019050612e92565b5085935050505092915050565b60006020820190508181036000830152612ee68184612e6e565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612f28578082015181840152602081019050612f0d565b60008484015250505050565b6000612f3f82612eee565b612f498185612ef9565b9350612f59818560208601612f0a565b612f6281612c57565b840191505092915050565b60006020820190508181036000830152612f878184612f34565b905092915050565b60008060408385031215612fa657612fa5612c43565b5b600083013567ffffffffffffffff811115612fc457612fc3612c48565b5b612fd085828601612d65565b925050602083013567ffffffffffffffff811115612ff157612ff0612c48565b5b612ffd85828601612d65565b9150509250929050565b61301081612e28565b811461301b57600080fd5b50565b60008135905061302d81613007565b92915050565b60006020828403121561304957613048612c43565b5b60006130578482850161301e565b91505092915050565b60008115159050919050565b61307581613060565b82525050565b6000602082019050613090600083018461306c565b92915050565b61309f81612e28565b82525050565b60006020820190506130ba6000830184613096565b92915050565b600080604083850312156130d7576130d6612c43565b5b60006130e58582860161301e565b925050602083013567ffffffffffffffff81111561310657613105612c48565b5b61311285828601612d65565b9150509250929050565b7f436f6e74726163743a204164647265737320616c72656164792072656769737460008201527f657265642061732070617469656e740000000000000000000000000000000000602082015250565b6000613178602f83612ef9565b91506131838261311c565b604082019050919050565b600060208201905081810360008301526131a78161316b565b9050919050565b7f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60008201527f7765642100000000000000000000000000000000000000000000000000000000602082015250565b600061320a602483612ef9565b9150613215826131ae565b604082019050919050565b60006020820190508181036000830152613239816131fd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061328757607f821691505b60208210810361329a57613299613240565b5b50919050565b7f436f6e74726163743a204164647265737320616c72656164792072656769737460008201527f6572656420617320646f63746f72000000000000000000000000000000000000602082015250565b60006132fc602e83612ef9565b9150613307826132a0565b604082019050919050565b6000602082019050818103600083015261332b816132ef565b9050919050565b7f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60008201527f7765640000000000000000000000000000000000000000000000000000000000602082015250565b600061338e602383612ef9565b915061339982613332565b604082019050919050565b600060208201905081810360008301526133bd81613381565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026134267fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826133e9565b61343086836133e9565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061347761347261346d84613448565b613452565b613448565b9050919050565b6000819050919050565b6134918361345c565b6134a561349d8261347e565b8484546133f6565b825550505050565b600090565b6134ba6134ad565b6134c5818484613488565b505050565b5b818110156134e9576134de6000826134b2565b6001810190506134cb565b5050565b601f82111561352e576134ff816133c4565b613508846133d9565b81016020851015613517578190505b61352b613523856133d9565b8301826134ca565b50505b505050565b600082821c905092915050565b600061355160001984600802613533565b1980831691505092915050565b600061356a8383613540565b9150826002028217905092915050565b61358382612eee565b67ffffffffffffffff81111561359c5761359b612c68565b5b6135a6825461326f565b6135b18282856134ed565b600060209050601f8311600181146135e457600084156135d2578287015190505b6135dc858261355e565b865550613644565b601f1984166135f2866133c4565b60005b8281101561361a578489015182556001820191506020850194506020810190506135f5565b868310156136375784890151613633601f891682613540565b8355505b6001600288020188555050505b505050505050565b7f4e6f7420416c6c6f776564000000000000000000000000000000000000000000600082015250565b6000613682600b83612ef9565b915061368d8261364c565b602082019050919050565b600060208201905081810360008301526136b181613675565b9050919050565b7f436f6e74726163743a20456d707479207075626c6963206b6579206973206e6f60008201527f7420616c6c6f7765642100000000000000000000000000000000000000000000602082015250565b6000613714602a83612ef9565b915061371f826136b8565b604082019050919050565b6000602082019050818103600083015261374381613707565b9050919050565b7f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500600082015250565b6000613780601f83612ef9565b915061378b8261374a565b602082019050919050565b600060208201905081810360008301526137af81613773565b9050919050565b7f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000613812602283612ef9565b915061381d826137b6565b604082019050919050565b6000602082019050818103600083015261384181613805565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061388282613448565b915061388d83613448565b92508282039050818111156138a5576138a4613848565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600061391482613448565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361394657613945613848565b5b60018201905091905056fea2646970667358221220e763060d62c0232c6768344f3d0494fc6b2e8c41253bf0bfd75347b14e52a13764736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 575,
        "contract": "contracts/Contract.sol:Contract",
        "label": "admin",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(Admin)550_storage"
      },
      {
        "astId": 578,
        "contract": "contracts/Contract.sol:Contract",
        "label": "doctors",
        "offset": 0,
        "slot": "5",
        "type": "t_struct(Doctors)572_storage"
      },
      {
        "astId": 581,
        "contract": "contracts/Contract.sol:Contract",
        "label": "patients",
        "offset": 0,
        "slot": "11",
        "type": "t_struct(Patients)559_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_address,t_struct(Map)13_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct AddToBoolMapping.Map)",
        "numberOfBytes": "32",
        "value": "t_struct(Map)13_storage"
      },
      "t_mapping(t_address,t_struct(MedicalRecord)542_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Contract.MedicalRecord)",
        "numberOfBytes": "32",
        "value": "t_struct(MedicalRecord)542_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Admin)550_storage": {
        "encoding": "inplace",
        "label": "struct Contract.Admin",
        "members": [
          {
            "astId": 544,
            "contract": "contracts/Contract.sol:Contract",
            "label": "user",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 546,
            "contract": "contracts/Contract.sol:Contract",
            "label": "public_key",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 549,
            "contract": "contracts/Contract.sol:Contract",
            "label": "pending_doctors",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(Map)13_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Doctors)572_storage": {
        "encoding": "inplace",
        "label": "struct Contract.Doctors",
        "members": [
          {
            "astId": 562,
            "contract": "contracts/Contract.sol:Contract",
            "label": "users",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Role)1439_storage"
          },
          {
            "astId": 566,
            "contract": "contracts/Contract.sol:Contract",
            "label": "public_keys",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_string_storage)"
          },
          {
            "astId": 571,
            "contract": "contracts/Contract.sol:Contract",
            "label": "docToPatAccess",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(Map)13_storage)"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Map)13_storage": {
        "encoding": "inplace",
        "label": "struct AddToBoolMapping.Map",
        "members": [
          {
            "astId": 4,
            "contract": "contracts/Contract.sol:Contract",
            "label": "keys",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 8,
            "contract": "contracts/Contract.sol:Contract",
            "label": "values",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 12,
            "contract": "contracts/Contract.sol:Contract",
            "label": "indexOf",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Map)204_storage": {
        "encoding": "inplace",
        "label": "struct AddToStrMapping.Map",
        "members": [
          {
            "astId": 191,
            "contract": "contracts/Contract.sol:Contract",
            "label": "keys",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 195,
            "contract": "contracts/Contract.sol:Contract",
            "label": "values",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_string_storage)"
          },
          {
            "astId": 199,
            "contract": "contracts/Contract.sol:Contract",
            "label": "indexOf",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 203,
            "contract": "contracts/Contract.sol:Contract",
            "label": "inserted",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(MedicalRecord)542_storage": {
        "encoding": "inplace",
        "label": "struct Contract.MedicalRecord",
        "members": [
          {
            "astId": 536,
            "contract": "contracts/Contract.sol:Contract",
            "label": "editor",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 539,
            "contract": "contracts/Contract.sol:Contract",
            "label": "viewers",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 541,
            "contract": "contracts/Contract.sol:Contract",
            "label": "key_data_hash",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Patients)559_storage": {
        "encoding": "inplace",
        "label": "struct Contract.Patients",
        "members": [
          {
            "astId": 553,
            "contract": "contracts/Contract.sol:Contract",
            "label": "users",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Role)1439_storage"
          },
          {
            "astId": 558,
            "contract": "contracts/Contract.sol:Contract",
            "label": "records",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(MedicalRecord)542_storage)"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Role)1439_storage": {
        "encoding": "inplace",
        "label": "struct Roles.Role",
        "members": [
          {
            "astId": 1438,
            "contract": "contracts/Contract.sol:Contract",
            "label": "bearer",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Map)204_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}