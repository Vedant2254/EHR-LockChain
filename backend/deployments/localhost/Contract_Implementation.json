{
  "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
  "abi": [
    {
      "inputs": [],
      "name": "Contract__DoctorPublicKeyMissing",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__NotAdmin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__NotDoctor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__NotPatient",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__PendingDoctorApproval",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "approveDr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_general_hash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_key_hash",
          "type": "string"
        }
      ],
      "name": "changeEditorAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "disapproveDr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdminPubKey",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllDrs",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllPts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getDrHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDrOfPt",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getDrPubKey",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPatViewers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPendingDrs",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getPtGeneralHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getPtRecordHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPtsOfDr",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "grantViewerAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isDoctor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isDrPending",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isDrRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isPatient",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "registerDr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_public_key",
          "type": "string"
        }
      ],
      "name": "registerDrConfirm",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_key_data_hash",
          "type": "string"
        }
      ],
      "name": "registerPt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_general_hash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_key_hash",
          "type": "string"
        }
      ],
      "name": "removeEditorAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "revokeViewerAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_public_key",
          "type": "string"
        }
      ],
      "name": "setAdminPubKey",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "setDrHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "setPtGeneralHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "setPtRecordHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFunc",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTxn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xfd646fad2f1a0cbd6f238a9f9273363e0929438fde6a06c18da2e1ff801c6f75",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
    "transactionIndex": 0,
    "gasUsed": "2161524",
    "logsBloom": "0x
    "blockHash": "0x65f4f0f19e1d2b3d8f22275feab984213116682ecbd803059d9e3ac3aa594e96",
    "transactionHash": "0xfd646fad2f1a0cbd6f238a9f9273363e0929438fde6a06c18da2e1ff801c6f75",
    "logs": [],
    "blockNumber": 5,
    "cumulativeGasUsed": "2161524",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "2b28bb7dcbc6b9b84a2b6d67e350ec47",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Contract__DoctorPublicKeyMissing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__NotAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__NotDoctor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__NotPatient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__PendingDoctorApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"approveDr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_general_hash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_key_hash\",\"type\":\"string\"}],\"name\":\"changeEditorAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"disapproveDr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdminPubKey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllDrs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getDrHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDrOfPt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getDrPubKey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPatViewers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPendingDrs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getPtGeneralHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getPtRecordHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPtsOfDr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"grantViewerAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isDoctor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isDrPending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isDrRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isPatient\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"registerDr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_public_key\",\"type\":\"string\"}],\"name\":\"registerDrConfirm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_key_data_hash\",\"type\":\"string\"}],\"name\":\"registerPt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_general_hash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_key_hash\",\"type\":\"string\"}],\"name\":\"removeEditorAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"revokeViewerAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_public_key\",\"type\":\"string\"}],\"name\":\"setAdminPubKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setDrHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setPtGeneralHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setPtRecordHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFunc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTxn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Contract.sol\":\"Contract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/AddToBoolMapping.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary AddToBoolMapping {\\n    // mapping address => bool\\n    struct Map {\\n        address[] keys;\\n        mapping(address => bool) values;\\n        mapping(address => uint256) indexOf;\\n    }\\n\\n    function get(Map storage map, address key) internal view returns (bool) {\\n        return map.values[key];\\n    }\\n\\n    function getKeys(Map storage map) internal view returns (address[] memory) {\\n        return map.keys;\\n    }\\n\\n    function getKeyAtIndex(Map storage map, uint256 index) internal view returns (address) {\\n        return map.keys[index];\\n    }\\n\\n    function size(Map storage map) internal view returns (uint256) {\\n        return map.keys.length;\\n    }\\n\\n    function set(Map storage map, address key) internal {\\n        if (map.values[key]) return;\\n\\n        // add address => true mapping to values\\n        map.values[key] = true;\\n\\n        // add index of address to indexOf mapping\\n        map.indexOf[key] = map.keys.length;\\n\\n        // add address to keys\\n        map.keys.push(key);\\n    }\\n\\n    function unset(Map storage map, address key) internal {\\n        if (!map.values[key]) return;\\n\\n        // remove from values\\n        delete map.values[key];\\n\\n        // important backups\\n        uint256 index = map.indexOf[key];\\n        uint256 lastIndex = map.keys.length - 1;\\n        address lastKey = map.keys[lastIndex];\\n\\n        // update indexOf last element\\n        map.indexOf[lastKey] = index;\\n        delete map.indexOf[key];\\n\\n        // remove from keys\\n        map.keys[index] = lastKey;\\n        map.keys.pop();\\n    }\\n}\\n\",\"keccak256\":\"0xf4944f25058b889d9bebf1d53283eab488e3200f3e2a48e47f52849b113644cc\",\"license\":\"MIT\"},\"contracts/AddToStrMapping.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary AddToStrMapping {\\n    // mapping address => string\\n    struct Map {\\n        address[] keys;\\n        mapping(address => string) values;\\n        mapping(address => uint256) indexOf;\\n        mapping(address => bool) inserted;\\n    }\\n\\n    function get(Map storage map, address key) internal view returns (string memory) {\\n        return map.values[key];\\n    }\\n\\n    function getKeys(Map storage map) internal view returns (address[] memory) {\\n        return map.keys;\\n    }\\n\\n    function getKeyAtIndex(Map storage map, uint256 index) internal view returns (address) {\\n        return map.keys[index];\\n    }\\n\\n    function size(Map storage map) internal view returns (uint256) {\\n        return map.keys.length;\\n    }\\n\\n    function set(Map storage map, address key, string memory val) internal {\\n        if (!map.inserted[key]) {\\n            // add index of address to indexOf mapping\\n            map.indexOf[key] = map.keys.length;\\n\\n            // make value of address in inserted to true\\n            map.inserted[key] = true;\\n\\n            // add address to keys\\n            map.keys.push(key);\\n        }\\n\\n        // add address => true mapping to values\\n        map.values[key] = val;\\n    }\\n\\n    function remove(Map storage map, address key) internal {\\n        if (!map.inserted[key]) return;\\n\\n        // remove from values\\n        delete map.values[key];\\n        delete map.inserted[key];\\n\\n        // important backups\\n        uint256 index = map.indexOf[key];\\n        uint256 lastIndex = map.keys.length - 1;\\n        address lastKey = map.keys[lastIndex];\\n\\n        // update indexOf last element\\n        map.indexOf[lastKey] = index;\\n        delete map.indexOf[key];\\n\\n        // remove from keys\\n        map.keys[index] = lastKey;\\n        map.keys.pop();\\n    }\\n}\\n\",\"keccak256\":\"0x44a19745fb3130275849bcaaf82f085c8a50d1d105b431e5c6df0625e9289f14\",\"license\":\"MIT\"},\"contracts/AddressArrayUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary AddressArrayUtils {\\n    function indexOf(address[] memory arr, address key) internal pure returns (int256) {\\n        for (uint256 i = 0; i < arr.length; i++) {\\n            if (arr[i] == key) return int256(i);\\n        }\\n        return -1;\\n    }\\n\\n    function contains(address[] memory arr, address key) internal pure returns (bool) {\\n        return indexOf(arr, key) != -1;\\n    }\\n\\n    function remove(address[] storage arr, address key) internal returns (bool) {\\n        int256 i = indexOf(arr, key);\\n\\n        if (i == -1) return false;\\n\\n        address[] memory temp = arr;\\n        arr[uint256(i)] = temp[temp.length - 1];\\n        arr.pop();\\n\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x29555ad812fd5509ead59914b9bc59285a5f7b96bedcfed493bca55994271d67\",\"license\":\"MIT\"},\"contracts/Contract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"./Roles.sol\\\";\\nimport \\\"./AddressArrayUtils.sol\\\";\\nimport \\\"./AddToBoolMapping.sol\\\";\\n\\nerror Contract__NotAdmin();\\nerror Contract__NotDoctor();\\nerror Contract__NotPatient();\\nerror Contract__PendingDoctorApproval();\\nerror Contract__DoctorPublicKeyMissing();\\n\\ncontract Contract {\\n    // using methods of Roles for Role struct in Roles\\n    using Roles for Roles.Role;\\n    using AddToBoolMapping for AddToBoolMapping.Map;\\n    using AddressArrayUtils for address[];\\n\\n    struct MedicalRecord {\\n        address editor;\\n        address[] viewers;\\n        string key_data_hash;\\n    }\\n\\n    struct Admin {\\n        address user;\\n        string public_key;\\n        AddToBoolMapping.Map pending_doctors;\\n    }\\n\\n    struct Patients {\\n        Roles.Role users;\\n        mapping(address => MedicalRecord) records;\\n    }\\n\\n    struct Doctors {\\n        Roles.Role users;\\n        mapping(address => string) public_keys;\\n        mapping(address => AddToBoolMapping.Map) docToPatAccess;\\n    }\\n\\n    // defining roles - contains hashes\\n    Admin private admin;\\n    Doctors private doctors;\\n    Patients private patients;\\n\\n    // Initializing admin\\n    // constructor() {\\n    //     admin.user = msg.sender;\\n    // }\\n\\n    bool initialized;\\n\\n    uint256 testVar = 10;\\n\\n    function initialize() public {\\n        require(!initialized, \\\"Contract already initialized!\\\");\\n        admin.user = msg.sender;\\n        initialized = true;\\n    }\\n\\n    function testTxn() public {\\n        testVar = 30;\\n    }\\n\\n    function testFunc() public view returns (uint256) {\\n        return testVar;\\n    }\\n\\n    // Admin methods\\n    function isAdmin(address _address) public view returns (bool) {\\n        if (admin.user == _address) return true;\\n        return false;\\n    }\\n\\n    function getAdmin() public view returns (address) {\\n        return admin.user;\\n    }\\n\\n    function setAdminPubKey(string memory _public_key) public onlyAdmin {\\n        admin.public_key = _public_key;\\n    }\\n\\n    function getAdminPubKey() public view returns (string memory) {\\n        return admin.public_key;\\n    }\\n\\n    // Doctor methods\\n    function isDrRegistered(address _address) public view returns (bool) {\\n        return doctors.users.has(_address);\\n    }\\n\\n    function isDrPending(address _address) public view returns (bool) {\\n        return admin.pending_doctors.get(_address);\\n    }\\n\\n    function isDoctor(address _address) public view returns (bool) {\\n        if (!doctors.users.has(_address)) return false;\\n        if (admin.pending_doctors.get(_address)) return false;\\n        if (bytes(doctors.public_keys[_address]).length == 0) return false;\\n        return true;\\n    }\\n\\n    function registerDr(string memory _hash) public {\\n        if (isPatient(msg.sender)) revert(\\\"Contract: Address already registered as patient\\\");\\n        if (bytes(_hash).length == 0) revert(\\\"Contract: Empty hash is not allowed\\\");\\n        doctors.users.add(msg.sender, _hash);\\n        admin.pending_doctors.set(msg.sender);\\n    }\\n\\n    function approveDr(address _address) public onlyAdmin {\\n        if (isDoctor(_address)) return;\\n        if (!doctors.users.has(_address)) return;\\n        admin.pending_doctors.unset(_address);\\n    }\\n\\n    function disapproveDr(address _address) public onlyAdmin {\\n        if (!isDrPending(_address)) revert(\\\"Contract: Doctor not registered\\\");\\n        doctors.users.remove(_address);\\n        admin.pending_doctors.unset(_address);\\n    }\\n\\n    function registerDrConfirm(string memory _public_key) public {\\n        if (bytes(_public_key).length == 0) revert(\\\"Contract: Empty public key is not allowed!\\\");\\n        if (!doctors.users.has(msg.sender)) revert Contract__NotDoctor();\\n        if (admin.pending_doctors.get(msg.sender)) revert Contract__PendingDoctorApproval();\\n        doctors.public_keys[msg.sender] = _public_key;\\n    }\\n\\n    function setDrHash(string memory _hash) public onlyDoctor {\\n        if (bytes(_hash).length == 0) revert(\\\"Contract: Empty hash is not allowed!\\\");\\n        doctors.users.setHash(msg.sender, _hash);\\n    }\\n\\n    function getDrHash(address _address) public view returns (string memory) {\\n        if (!isDrRegistered(_address)) revert Contract__NotDoctor();\\n        return doctors.users.getHash(_address);\\n    }\\n\\n    function getDrPubKey(address _address) public view returns (string memory) {\\n        return doctors.public_keys[_address];\\n    }\\n\\n    function getAllDrs() public view returns (address[] memory) {\\n        return doctors.users.getMembers();\\n    }\\n\\n    function getPendingDrs() public view returns (address[] memory) {\\n        return admin.pending_doctors.keys;\\n    }\\n\\n    function getPtsOfDr() public view onlyDoctor returns (address[] memory) {\\n        return doctors.docToPatAccess[msg.sender].keys;\\n    }\\n\\n    // Patient methods\\n    function isPatient(address _address) public view returns (bool) {\\n        return patients.users.has(_address);\\n    }\\n\\n    function registerPt(string memory _hash, string memory _key_data_hash) public {\\n        if (isDrRegistered(msg.sender) || isDoctor(msg.sender))\\n            revert(\\\"Contract: Address already registered as doctor\\\");\\n        if (bytes(_hash).length == 0) revert(\\\"Contract: Empty hash is not allowed\\\");\\n        patients.users.add(msg.sender, _hash);\\n        patients.records[msg.sender].editor = msg.sender;\\n        patients.records[msg.sender].key_data_hash = _key_data_hash;\\n    }\\n\\n    function setPtGeneralHash(string memory _hash) public onlyPatient {\\n        patients.users.setHash(msg.sender, _hash);\\n    }\\n\\n    function getPtGeneralHash(address _address) public view returns (string memory) {\\n        if (!isPatient(_address)) revert Contract__NotPatient();\\n\\n        if (\\n            msg.sender == _address ||\\n            patients.records[_address].editor == msg.sender ||\\n            patients.records[_address].viewers.indexOf(msg.sender) != -1\\n        ) return patients.users.getHash(_address);\\n\\n        revert(\\\"Not Allowed\\\");\\n    }\\n\\n    function setPtRecordHash(address _address, string memory _hash) public {\\n        if (!isPatient(_address)) revert Contract__NotPatient();\\n        if (!(patients.records[_address].editor == msg.sender)) revert(\\\"Not Allowed\\\");\\n        patients.records[_address].key_data_hash = _hash;\\n    }\\n\\n    function getPtRecordHash(address _address) public view returns (string memory) {\\n        if (!isPatient(_address)) revert Contract__NotPatient();\\n\\n        if (\\n            msg.sender == _address ||\\n            patients.records[_address].editor == msg.sender ||\\n            patients.records[_address].viewers.indexOf(msg.sender) != -1\\n        ) return patients.records[_address].key_data_hash;\\n\\n        revert(\\\"Not Allowed\\\");\\n    }\\n\\n    function getAllPts() public view returns (address[] memory) {\\n        return patients.users.getMembers();\\n    }\\n\\n    function changeEditorAccess(\\n        address _address,\\n        string memory _general_hash,\\n        string memory _key_hash\\n    ) public onlyPatient {\\n        // pending update - when user changes access, symmetric key S must be changed\\n        if (!isDoctor(_address)) revert Contract__NotDoctor();\\n\\n        // remove old editor access\\n        removeEditorAccess(_general_hash, _key_hash);\\n\\n        // add new editor access\\n        patients.records[msg.sender].editor = _address;\\n        doctors.docToPatAccess[_address].set(msg.sender);\\n    }\\n\\n    function removeEditorAccess(\\n        string memory _general_hash,\\n        string memory _key_hash\\n    ) public onlyPatient {\\n        address old_editor = patients.records[msg.sender].editor;\\n        patients.records[msg.sender].editor = msg.sender;\\n        doctors.docToPatAccess[old_editor].unset(msg.sender);\\n\\n        patients.users.setHash(msg.sender, _general_hash);\\n        patients.records[msg.sender].key_data_hash = _key_hash;\\n    }\\n\\n    function getDrOfPt() public view onlyPatient returns (address) {\\n        return patients.records[msg.sender].editor;\\n    }\\n\\n    function grantViewerAccess(address _address) public onlyPatient {\\n        if (!isDoctor(_address)) revert Contract__NotDoctor();\\n\\n        if (!patients.records[msg.sender].viewers.contains(_address)) {\\n            patients.records[msg.sender].viewers.push(_address);\\n        }\\n    }\\n\\n    function revokeViewerAccess(address _address) public onlyPatient {\\n        // pending update - when user revokes access, symmetric key S must be changed\\n        if (!isDoctor(_address)) revert Contract__NotDoctor();\\n\\n        patients.records[msg.sender].viewers.remove(_address);\\n    }\\n\\n    function getPatViewers() public view onlyPatient returns (address[] memory) {\\n        return patients.records[msg.sender].viewers;\\n    }\\n\\n    // modifiers\\n    modifier onlyAdmin() {\\n        if (!isAdmin(msg.sender)) revert Contract__NotAdmin();\\n        _;\\n    }\\n\\n    modifier onlyDoctor() {\\n        if (!doctors.users.has(msg.sender)) revert Contract__NotDoctor();\\n        if (admin.pending_doctors.get(msg.sender)) revert Contract__PendingDoctorApproval();\\n        if (bytes(doctors.public_keys[msg.sender]).length == 0)\\n            revert Contract__DoctorPublicKeyMissing();\\n        _;\\n    }\\n\\n    modifier onlyPatient() {\\n        if (!isPatient(msg.sender)) revert Contract__NotPatient();\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x5fb2b99660d99e61077ab4ac84b522377c61c2e4df459847a0c989607b445db0\",\"license\":\"MIT\"},\"contracts/Roles.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"./AddToStrMapping.sol\\\";\\n\\nlibrary Roles {\\n    using AddToStrMapping for AddToStrMapping.Map;\\n\\n    // This is to keep track of roles\\n    // Reduces searching cost\\n    struct Role {\\n        AddToStrMapping.Map bearer;\\n    }\\n\\n    function add(Role storage role, address account, string memory hash) internal {\\n        require(!has(role, account), \\\"Roles: account already has role\\\");\\n        role.bearer.set(account, hash);\\n    }\\n\\n    function remove(Role storage role, address account) internal {\\n        require(has(role, account), \\\"Roles: account does not have role\\\");\\n        role.bearer.remove(account);\\n    }\\n\\n    function has(Role storage role, address account) internal view returns (bool) {\\n        require(account != address(0), \\\"Roles: account is the zero address\\\");\\n        return bytes(role.bearer.get(account)).length != 0;\\n    }\\n\\n    function setHash(Role storage role, address account, string memory _hash) internal {\\n        role.bearer.set(account, _hash);\\n    }\\n\\n    function getHash(Role storage role, address account) internal view returns (string memory) {\\n        return role.bearer.get(account);\\n    }\\n\\n    function getMembers(Role storage role) internal view returns (address[] memory) {\\n        return role.bearer.keys;\\n    }\\n}\\n\",\"keccak256\":\"0x35319b78de3f838d4fdae2c499ccf5b4ed9407222e38d041a303fb7b42bf47aa\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600a60115534801561001557600080fd5b50612601806100256000396000f3fe608060405234801561001057600080fd5b506004361061020b5760003560e01c806388c432e11161012a578063b1e758a4116100bd578063d0d9a5e31161008c578063dc823aaf11610071578063dc823aaf14610439578063e2877b4e1461044c578063f7a03a1e1461045457600080fd5b8063d0d9a5e31461041e578063d3cd4df41461042657600080fd5b8063b1e758a4146103d2578063c70597ad146103e5578063cce9d43e146103f8578063ccfaed161461040b57600080fd5b806399eedd2a116100f957806399eedd2a14610391578063a03de49e146103a4578063a53f514d146103b7578063afb97e3d146103bf57600080fd5b806388c432e1146103505780638f7f43a9146103635780638f9c79ed1461036b578063996440c61461037e57600080fd5b80633d8198b4116101a25780636d4bce20116101715780636d4bce20146103115780636e9960c314610324578063745ada64146103355780638129fc1c1461034857600080fd5b80633d8198b4146102ce5780634df0a2d4146102e157806359d54d57146102f45780635b0a7aad146102fe57600080fd5b806321639f04116101de57806321639f041461026557806324d7806c14610285578063290c61b0146102a857806332991838146102bb57600080fd5b8063037a417c146102105780630de9999114610226578063116461e91461023b5780631da3e2dc14610250575b600080fd5b6011546040519081526020015b60405180910390f35b61023961023436600461208b565b610467565b005b6102436104d2565b60405161021d91906120a6565b610258610567565b60405161021d9190612112565b61026d610578565b6040516001600160a01b03909116815260200161021d565b61029861029336600461208b565b6105d6565b604051901515815260200161021d565b6102986102b636600461208b565b6105fc565b6102396102c9366004612239565b61060f565b6102436102dc36600461208b565b61071e565b6102436102ef36600461208b565b610919565b610239601e601155565b61023961030c366004612276565b610a2a565b61029861031f36600461208b565b610af3565b6000546001600160a01b031661026d565b61023961034336600461208b565b610b14565b610239610bb3565b61023961035e366004612239565b610c5d565b610258610ca8565b61029861037936600461208b565b610d54565b61029861038c36600461208b565b610d61565b61023961039f366004612239565b610ddf565b6102396103b2366004612276565b610f41565b610258611099565b6102396103cd366004612239565b6110a5565b6102396103e036600461208b565b6110f4565b6102396103f33660046122da565b61124b565b61024361040636600461208b565b611318565b610239610419366004612239565b611364565b61025861147f565b61023961043436600461231e565b6115c8565b61024361044736600461208b565b6116a8565b6102586116cf565b61023961046236600461208b565b61172e565b610470336105d6565b6104a6576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104af81610d61565b6104cf576104be6005826117c8565b156104cf575b6104cf60028261185a565b50565b6060600060010180546104e490612392565b80601f016020809104026020016040519081016040528092919081815260200182805461051090612392565b801561055d5780601f106105325761010080835404028352916020019161055d565b820191906000526020600020905b81548152906001019060200180831161054057829003601f168201915b5050505050905090565b606061057360056119d7565b905090565b600061058333610d54565b6105b9576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50336000908152600f60205260409020546001600160a01b031690565b600080546001600160a01b038084169116036105f457506001919050565b506000919050565b60006106096005836117c8565b92915050565b61061833610d54565b156106905760405162461bcd60e51b815260206004820152602f60248201527f436f6e74726163743a204164647265737320616c72656164792072656769737460448201527f657265642061732070617469656e74000000000000000000000000000000000060648201526084015b60405180910390fd5b80516000036107075760405162461bcd60e51b815260206004820152602360248201527f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60448201527f77656400000000000000000000000000000000000000000000000000000000006064820152608401610687565b61071360053383611a38565b6104cf600233611a9a565b606061072982610d54565b61075f576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336001600160a01b038316148061078f57506001600160a01b038281166000908152600f60205260409020541633145b8061082157506001600160a01b0382166000908152600f6020908152604091829020600101805483518184028101840190945280845261081b9333939092919083018282801561080857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116107ea575b5050505050611b4d90919063ffffffff16565b60001914155b156108d1576001600160a01b0382166000908152600f60205260409020600201805461084c90612392565b80601f016020809104026020016040519081016040528092919081815260200182805461087890612392565b80156108c55780601f1061089a576101008083540402835291602001916108c5565b820191906000526020600020905b8154815290600101906020018083116108a857829003601f168201915b50505050509050919050565b60405162461bcd60e51b815260206004820152600b60248201527f4e6f7420416c6c6f7765640000000000000000000000000000000000000000006044820152606401610687565b606061092482610d54565b61095a576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336001600160a01b038316148061098a57506001600160a01b038281166000908152600f60205260409020541633145b80610a1a57506001600160a01b0382166000908152600f60209081526040918290206001018054835181840281018401909452808452610a1493339390929190830182828015610808576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116107ea575050505050611b4d90919063ffffffff16565b60001914155b156108d157610609600b83611bb0565b610a3333610d54565b610a69576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000818152600f6020908152604080832080547fffffffffffffffffffffffff0000000000000000000000000000000000000000811686179091556001600160a01b0316808452600a9092529091209091610ac5919061185a565b610ad1600b3385611a8f565b336000908152600f60205260409020600201610aed8382612433565b50505050565b6001600160a01b03811660009081526003602052604081205460ff16610609565b610b1d336105d6565b610b53576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b5c81610af3565b610ba85760405162461bcd60e51b815260206004820152601f60248201527f436f6e74726163743a20446f63746f72206e6f742072656769737465726564006044820152606401610687565b6104c4600582611bc3565b60105460ff1615610c065760405162461bcd60e51b815260206004820152601d60248201527f436f6e747261637420616c726561647920696e697469616c697a6564210000006044820152606401610687565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001633179055601080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b610c6633610d54565b610c9c576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104cf600b3383611a8f565b6060610cb333610d54565b610ce9576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152600f60209081526040918290206001018054835181840281018401909452808452909183018282801561055d57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d2d575050505050905090565b6000610609600b836117c8565b6000610d6e6005836117c8565b610d7a57506000919050565b6001600160a01b03821660009081526003602052604090205460ff1615610da357506000919050565b6001600160a01b03821660009081526009602052604090208054610dc690612392565b9050600003610dd757506000919050565b506001919050565b610dea6005336117c8565b610e20576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526003602052604090205460ff1615610e6a576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526009602052604090208054610e8490612392565b9050600003610ebf576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8051600003610f355760405162461bcd60e51b8152602060048201526024808201527f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60448201527f77656421000000000000000000000000000000000000000000000000000000006064820152608401610687565b6104cf60053383611a8f565b610f4a336105fc565b80610f595750610f5933610d61565b15610fcc5760405162461bcd60e51b815260206004820152602e60248201527f436f6e74726163743a204164647265737320616c72656164792072656769737460448201527f6572656420617320646f63746f720000000000000000000000000000000000006064820152608401610687565b81516000036110435760405162461bcd60e51b815260206004820152602360248201527f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60448201527f77656400000000000000000000000000000000000000000000000000000000006064820152608401610687565b61104f600b3384611a38565b336000818152600f6020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911781556002016110948282612433565b505050565b6060610573600b6119d7565b6110ae336105d6565b6110e4576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016110f08282612433565b5050565b6110fd33610d54565b611133576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61113c81610d61565b611172576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152600f602090815260409182902060010180548351818402810184019094528084526111ef938593909291908301828280156111dc57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116111be575b5050505050611c4990919063ffffffff16565b6104cf57336000908152600f602090815260408220600190810180549182018155835291200180546001600160a01b0383167fffffffffffffffffffffffff000000000000000000000000000000000000000090911617905550565b61125482610d54565b61128a576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038281166000908152600f60205260409020541633146112f35760405162461bcd60e51b815260206004820152600b60248201527f4e6f7420416c6c6f7765640000000000000000000000000000000000000000006044820152606401610687565b6001600160a01b0382166000908152600f602052604090206002016110948282612433565b6060611323826105fc565b611359576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610609600583611bb0565b80516000036113db5760405162461bcd60e51b815260206004820152602a60248201527f436f6e74726163743a20456d707479207075626c6963206b6579206973206e6f60448201527f7420616c6c6f77656421000000000000000000000000000000000000000000006064820152608401610687565b6113e66005336117c8565b61141c576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526003602052604090205460ff1615611466576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526009602052604090206110f08282612433565b606061148c6005336117c8565b6114c2576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526003602052604090205460ff161561150c576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152600960205260409020805461152690612392565b9050600003611561576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152600a60209081526040918290208054835181840281018401909452808452909183018282801561055d576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610d2d575050505050905090565b6115d133610d54565b611607576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61161083610d61565b611646576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116508282610a2a565b336000818152600f6020908152604080832080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0389169081179091558352600a909152902061109491611a9a565b6001600160a01b038116600090815260096020526040902080546060919061084c90612392565b60028054604080516020808402820181019092528281526060939092909183018282801561055d576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610d2d575050505050905090565b61173733610d54565b61176d576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61177681610d61565b6117ac576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152600f602052604090206110f09060010182611c61565b60006001600160a01b0382166118465760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610687565b6118508383611df3565b5115159392505050565b6001600160a01b038116600090815260018301602052604090205460ff16611880575050565b6001600160a01b038116600090815260018084016020908152604080842080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690556002860190915282205484549092916118dc91612540565b905060008460000182815481106118f5576118f5612553565b60009182526020808320909101546001600160a01b0390811680845260028901909252604080842087905590871683528220919091558554909150819086908590811061194457611944612553565b600091825260209091200180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055845485908061199657611996612582565b600082815260209020810160001990810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690550190555050505050565b80546040805160208084028201810190925282815260609290918491908301828280156108c557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611a0f5750505050509050919050565b611a4283836117c8565b15611a8f5760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c65006044820152606401610687565b611094838383611ea2565b6001600160a01b038116600090815260018301602052604090205460ff1615611ac1575050565b6001600160a01b0316600081815260018381016020908152604080842080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016841790558554600287018352908420819055918201855593825292902090910180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091179055565b6000805b8351811015611ba557826001600160a01b0316848281518110611b7657611b76612553565b60200260200101516001600160a01b031603611b93579050610609565b80611b9d816125b1565b915050611b51565b506000199392505050565b6060611bbc8383611df3565b9392505050565b611bcd82826117c8565b611c3f5760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c60448201527f65000000000000000000000000000000000000000000000000000000000000006064820152608401610687565b6110f08282611f7a565b6000611c558383611b4d565b60001914159392505050565b600080611cc784805480602002602001604051908101604052809291908181526020018280548015611cbc57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611c9e575b505050505084611b4d565b90508019611cd9576000915050610609565b600084805480602002602001604051908101604052809291908181526020018280548015611d3057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611d12575b505050505090508060018251611d469190612540565b81518110611d5657611d56612553565b6020026020010151858381548110611d7057611d70612553565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555084805480611dae57611dae612582565b600082815260209020600019908201810180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055019055506001949350505050565b6001600160a01b03811660009081526001830160205260409020805460609190611e1c90612392565b80601f0160208091040260200160405190810160405280929190818152602001828054611e4890612392565b8015611e955780601f10611e6a57610100808354040283529160200191611e95565b820191906000526020600020905b815481529060010190602001808311611e7857829003601f168201915b5050505050905092915050565b6001600160a01b038216600090815260038401602052604090205460ff16611f565782546001600160a01b038316600081815260028601602090815260408083209490945560038701815292812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660019081179091558654908101875586825292902090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b6001600160a01b03821660009081526001840160205260409020610aed8282612433565b6001600160a01b038116600090815260038301602052604090205460ff16611fa0575050565b6001600160a01b03811660009081526001830160205260408120611fc391612021565b6001600160a01b0381166000908152600383016020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690556002850190915281205483549091906118dc90600190612540565b50805461202d90612392565b6000825580601f1061203d575050565b601f0160209004906000526020600020908101906104cf91905b8082111561206b5760008155600101612057565b5090565b80356001600160a01b038116811461208657600080fd5b919050565b60006020828403121561209d57600080fd5b611bbc8261206f565b600060208083528351808285015260005b818110156120d3578581018301518582016040015282016120b7565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b6020808252825182820181905260009190848201906040850190845b818110156121535783516001600160a01b03168352928401929184019160010161212e565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261219f57600080fd5b813567ffffffffffffffff808211156121ba576121ba61215f565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156122005761220061215f565b8160405283815286602085880101111561221957600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561224b57600080fd5b813567ffffffffffffffff81111561226257600080fd5b61226e8482850161218e565b949350505050565b6000806040838503121561228957600080fd5b823567ffffffffffffffff808211156122a157600080fd5b6122ad8683870161218e565b935060208501359150808211156122c357600080fd5b506122d08582860161218e565b9150509250929050565b600080604083850312156122ed57600080fd5b6122f68361206f565b9150602083013567ffffffffffffffff81111561231257600080fd5b6122d08582860161218e565b60008060006060848603121561233357600080fd5b61233c8461206f565b9250602084013567ffffffffffffffff8082111561235957600080fd5b6123658783880161218e565b9350604086013591508082111561237b57600080fd5b506123888682870161218e565b9150509250925092565b600181811c908216806123a657607f821691505b6020821081036123df577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561109457600081815260208120601f850160051c8101602086101561240c5750805b601f850160051c820191505b8181101561242b57828155600101612418565b505050505050565b815167ffffffffffffffff81111561244d5761244d61215f565b6124618161245b8454612392565b846123e5565b602080601f831160018114612496576000841561247e5750858301515b600019600386901b1c1916600185901b17855561242b565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156124e3578886015182559484019460019091019084016124c4565b50858210156125015787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561060957610609612511565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600060001982036125c4576125c4612511565b506001019056fea2646970667358221220a557bd6cd29c085bede17d6a3da2fe742aee4cef1764d2378b48fe7a162bc38864736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061020b5760003560e01c806388c432e11161012a578063b1e758a4116100bd578063d0d9a5e31161008c578063dc823aaf11610071578063dc823aaf14610439578063e2877b4e1461044c578063f7a03a1e1461045457600080fd5b8063d0d9a5e31461041e578063d3cd4df41461042657600080fd5b8063b1e758a4146103d2578063c70597ad146103e5578063cce9d43e146103f8578063ccfaed161461040b57600080fd5b806399eedd2a116100f957806399eedd2a14610391578063a03de49e146103a4578063a53f514d146103b7578063afb97e3d146103bf57600080fd5b806388c432e1146103505780638f7f43a9146103635780638f9c79ed1461036b578063996440c61461037e57600080fd5b80633d8198b4116101a25780636d4bce20116101715780636d4bce20146103115780636e9960c314610324578063745ada64146103355780638129fc1c1461034857600080fd5b80633d8198b4146102ce5780634df0a2d4146102e157806359d54d57146102f45780635b0a7aad146102fe57600080fd5b806321639f04116101de57806321639f041461026557806324d7806c14610285578063290c61b0146102a857806332991838146102bb57600080fd5b8063037a417c146102105780630de9999114610226578063116461e91461023b5780631da3e2dc14610250575b600080fd5b6011546040519081526020015b60405180910390f35b61023961023436600461208b565b610467565b005b6102436104d2565b60405161021d91906120a6565b610258610567565b60405161021d9190612112565b61026d610578565b6040516001600160a01b03909116815260200161021d565b61029861029336600461208b565b6105d6565b604051901515815260200161021d565b6102986102b636600461208b565b6105fc565b6102396102c9366004612239565b61060f565b6102436102dc36600461208b565b61071e565b6102436102ef36600461208b565b610919565b610239601e601155565b61023961030c366004612276565b610a2a565b61029861031f36600461208b565b610af3565b6000546001600160a01b031661026d565b61023961034336600461208b565b610b14565b610239610bb3565b61023961035e366004612239565b610c5d565b610258610ca8565b61029861037936600461208b565b610d54565b61029861038c36600461208b565b610d61565b61023961039f366004612239565b610ddf565b6102396103b2366004612276565b610f41565b610258611099565b6102396103cd366004612239565b6110a5565b6102396103e036600461208b565b6110f4565b6102396103f33660046122da565b61124b565b61024361040636600461208b565b611318565b610239610419366004612239565b611364565b61025861147f565b61023961043436600461231e565b6115c8565b61024361044736600461208b565b6116a8565b6102586116cf565b61023961046236600461208b565b61172e565b610470336105d6565b6104a6576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104af81610d61565b6104cf576104be6005826117c8565b156104cf575b6104cf60028261185a565b50565b6060600060010180546104e490612392565b80601f016020809104026020016040519081016040528092919081815260200182805461051090612392565b801561055d5780601f106105325761010080835404028352916020019161055d565b820191906000526020600020905b81548152906001019060200180831161054057829003601f168201915b5050505050905090565b606061057360056119d7565b905090565b600061058333610d54565b6105b9576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50336000908152600f60205260409020546001600160a01b031690565b600080546001600160a01b038084169116036105f457506001919050565b506000919050565b60006106096005836117c8565b92915050565b61061833610d54565b156106905760405162461bcd60e51b815260206004820152602f60248201527f436f6e74726163743a204164647265737320616c72656164792072656769737460448201527f657265642061732070617469656e74000000000000000000000000000000000060648201526084015b60405180910390fd5b80516000036107075760405162461bcd60e51b815260206004820152602360248201527f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60448201527f77656400000000000000000000000000000000000000000000000000000000006064820152608401610687565b61071360053383611a38565b6104cf600233611a9a565b606061072982610d54565b61075f576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336001600160a01b038316148061078f57506001600160a01b038281166000908152600f60205260409020541633145b8061082157506001600160a01b0382166000908152600f6020908152604091829020600101805483518184028101840190945280845261081b9333939092919083018282801561080857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116107ea575b5050505050611b4d90919063ffffffff16565b60001914155b156108d1576001600160a01b0382166000908152600f60205260409020600201805461084c90612392565b80601f016020809104026020016040519081016040528092919081815260200182805461087890612392565b80156108c55780601f1061089a576101008083540402835291602001916108c5565b820191906000526020600020905b8154815290600101906020018083116108a857829003601f168201915b50505050509050919050565b60405162461bcd60e51b815260206004820152600b60248201527f4e6f7420416c6c6f7765640000000000000000000000000000000000000000006044820152606401610687565b606061092482610d54565b61095a576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336001600160a01b038316148061098a57506001600160a01b038281166000908152600f60205260409020541633145b80610a1a57506001600160a01b0382166000908152600f60209081526040918290206001018054835181840281018401909452808452610a1493339390929190830182828015610808576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116107ea575050505050611b4d90919063ffffffff16565b60001914155b156108d157610609600b83611bb0565b610a3333610d54565b610a69576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000818152600f6020908152604080832080547fffffffffffffffffffffffff0000000000000000000000000000000000000000811686179091556001600160a01b0316808452600a9092529091209091610ac5919061185a565b610ad1600b3385611a8f565b336000908152600f60205260409020600201610aed8382612433565b50505050565b6001600160a01b03811660009081526003602052604081205460ff16610609565b610b1d336105d6565b610b53576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b5c81610af3565b610ba85760405162461bcd60e51b815260206004820152601f60248201527f436f6e74726163743a20446f63746f72206e6f742072656769737465726564006044820152606401610687565b6104c4600582611bc3565b60105460ff1615610c065760405162461bcd60e51b815260206004820152601d60248201527f436f6e747261637420616c726561647920696e697469616c697a6564210000006044820152606401610687565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001633179055601080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b610c6633610d54565b610c9c576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104cf600b3383611a8f565b6060610cb333610d54565b610ce9576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152600f60209081526040918290206001018054835181840281018401909452808452909183018282801561055d57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d2d575050505050905090565b6000610609600b836117c8565b6000610d6e6005836117c8565b610d7a57506000919050565b6001600160a01b03821660009081526003602052604090205460ff1615610da357506000919050565b6001600160a01b03821660009081526009602052604090208054610dc690612392565b9050600003610dd757506000919050565b506001919050565b610dea6005336117c8565b610e20576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526003602052604090205460ff1615610e6a576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526009602052604090208054610e8490612392565b9050600003610ebf576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8051600003610f355760405162461bcd60e51b8152602060048201526024808201527f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60448201527f77656421000000000000000000000000000000000000000000000000000000006064820152608401610687565b6104cf60053383611a8f565b610f4a336105fc565b80610f595750610f5933610d61565b15610fcc5760405162461bcd60e51b815260206004820152602e60248201527f436f6e74726163743a204164647265737320616c72656164792072656769737460448201527f6572656420617320646f63746f720000000000000000000000000000000000006064820152608401610687565b81516000036110435760405162461bcd60e51b815260206004820152602360248201527f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60448201527f77656400000000000000000000000000000000000000000000000000000000006064820152608401610687565b61104f600b3384611a38565b336000818152600f6020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911781556002016110948282612433565b505050565b6060610573600b6119d7565b6110ae336105d6565b6110e4576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016110f08282612433565b5050565b6110fd33610d54565b611133576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61113c81610d61565b611172576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152600f602090815260409182902060010180548351818402810184019094528084526111ef938593909291908301828280156111dc57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116111be575b5050505050611c4990919063ffffffff16565b6104cf57336000908152600f602090815260408220600190810180549182018155835291200180546001600160a01b0383167fffffffffffffffffffffffff000000000000000000000000000000000000000090911617905550565b61125482610d54565b61128a576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038281166000908152600f60205260409020541633146112f35760405162461bcd60e51b815260206004820152600b60248201527f4e6f7420416c6c6f7765640000000000000000000000000000000000000000006044820152606401610687565b6001600160a01b0382166000908152600f602052604090206002016110948282612433565b6060611323826105fc565b611359576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610609600583611bb0565b80516000036113db5760405162461bcd60e51b815260206004820152602a60248201527f436f6e74726163743a20456d707479207075626c6963206b6579206973206e6f60448201527f7420616c6c6f77656421000000000000000000000000000000000000000000006064820152608401610687565b6113e66005336117c8565b61141c576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526003602052604090205460ff1615611466576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526009602052604090206110f08282612433565b606061148c6005336117c8565b6114c2576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526003602052604090205460ff161561150c576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152600960205260409020805461152690612392565b9050600003611561576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152600a60209081526040918290208054835181840281018401909452808452909183018282801561055d576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610d2d575050505050905090565b6115d133610d54565b611607576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61161083610d61565b611646576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116508282610a2a565b336000818152600f6020908152604080832080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0389169081179091558352600a909152902061109491611a9a565b6001600160a01b038116600090815260096020526040902080546060919061084c90612392565b60028054604080516020808402820181019092528281526060939092909183018282801561055d576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610d2d575050505050905090565b61173733610d54565b61176d576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61177681610d61565b6117ac576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152600f602052604090206110f09060010182611c61565b60006001600160a01b0382166118465760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610687565b6118508383611df3565b5115159392505050565b6001600160a01b038116600090815260018301602052604090205460ff16611880575050565b6001600160a01b038116600090815260018084016020908152604080842080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690556002860190915282205484549092916118dc91612540565b905060008460000182815481106118f5576118f5612553565b60009182526020808320909101546001600160a01b0390811680845260028901909252604080842087905590871683528220919091558554909150819086908590811061194457611944612553565b600091825260209091200180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055845485908061199657611996612582565b600082815260209020810160001990810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690550190555050505050565b80546040805160208084028201810190925282815260609290918491908301828280156108c557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611a0f5750505050509050919050565b611a4283836117c8565b15611a8f5760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c65006044820152606401610687565b611094838383611ea2565b6001600160a01b038116600090815260018301602052604090205460ff1615611ac1575050565b6001600160a01b0316600081815260018381016020908152604080842080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016841790558554600287018352908420819055918201855593825292902090910180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091179055565b6000805b8351811015611ba557826001600160a01b0316848281518110611b7657611b76612553565b60200260200101516001600160a01b031603611b93579050610609565b80611b9d816125b1565b915050611b51565b506000199392505050565b6060611bbc8383611df3565b9392505050565b611bcd82826117c8565b611c3f5760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c60448201527f65000000000000000000000000000000000000000000000000000000000000006064820152608401610687565b6110f08282611f7a565b6000611c558383611b4d565b60001914159392505050565b600080611cc784805480602002602001604051908101604052809291908181526020018280548015611cbc57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611c9e575b505050505084611b4d565b90508019611cd9576000915050610609565b600084805480602002602001604051908101604052809291908181526020018280548015611d3057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611d12575b505050505090508060018251611d469190612540565b81518110611d5657611d56612553565b6020026020010151858381548110611d7057611d70612553565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555084805480611dae57611dae612582565b600082815260209020600019908201810180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055019055506001949350505050565b6001600160a01b03811660009081526001830160205260409020805460609190611e1c90612392565b80601f0160208091040260200160405190810160405280929190818152602001828054611e4890612392565b8015611e955780601f10611e6a57610100808354040283529160200191611e95565b820191906000526020600020905b815481529060010190602001808311611e7857829003601f168201915b5050505050905092915050565b6001600160a01b038216600090815260038401602052604090205460ff16611f565782546001600160a01b038316600081815260028601602090815260408083209490945560038701815292812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660019081179091558654908101875586825292902090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b6001600160a01b03821660009081526001840160205260409020610aed8282612433565b6001600160a01b038116600090815260038301602052604090205460ff16611fa0575050565b6001600160a01b03811660009081526001830160205260408120611fc391612021565b6001600160a01b0381166000908152600383016020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690556002850190915281205483549091906118dc90600190612540565b50805461202d90612392565b6000825580601f1061203d575050565b601f0160209004906000526020600020908101906104cf91905b8082111561206b5760008155600101612057565b5090565b80356001600160a01b038116811461208657600080fd5b919050565b60006020828403121561209d57600080fd5b611bbc8261206f565b600060208083528351808285015260005b818110156120d3578581018301518582016040015282016120b7565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b6020808252825182820181905260009190848201906040850190845b818110156121535783516001600160a01b03168352928401929184019160010161212e565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261219f57600080fd5b813567ffffffffffffffff808211156121ba576121ba61215f565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156122005761220061215f565b8160405283815286602085880101111561221957600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561224b57600080fd5b813567ffffffffffffffff81111561226257600080fd5b61226e8482850161218e565b949350505050565b6000806040838503121561228957600080fd5b823567ffffffffffffffff808211156122a157600080fd5b6122ad8683870161218e565b935060208501359150808211156122c357600080fd5b506122d08582860161218e565b9150509250929050565b600080604083850312156122ed57600080fd5b6122f68361206f565b9150602083013567ffffffffffffffff81111561231257600080fd5b6122d08582860161218e565b60008060006060848603121561233357600080fd5b61233c8461206f565b9250602084013567ffffffffffffffff8082111561235957600080fd5b6123658783880161218e565b9350604086013591508082111561237b57600080fd5b506123888682870161218e565b9150509250925092565b600181811c908216806123a657607f821691505b6020821081036123df577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561109457600081815260208120601f850160051c8101602086101561240c5750805b601f850160051c820191505b8181101561242b57828155600101612418565b505050505050565b815167ffffffffffffffff81111561244d5761244d61215f565b6124618161245b8454612392565b846123e5565b602080601f831160018114612496576000841561247e5750858301515b600019600386901b1c1916600185901b17855561242b565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156124e3578886015182559484019460019091019084016124c4565b50858210156125015787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561060957610609612511565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600060001982036125c4576125c4612511565b506001019056fea2646970667358221220a557bd6cd29c085bede17d6a3da2fe742aee4cef1764d2378b48fe7a162bc38864736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 575,
        "contract": "contracts/Contract.sol:Contract",
        "label": "admin",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(Admin)550_storage"
      },
      {
        "astId": 578,
        "contract": "contracts/Contract.sol:Contract",
        "label": "doctors",
        "offset": 0,
        "slot": "5",
        "type": "t_struct(Doctors)572_storage"
      },
      {
        "astId": 581,
        "contract": "contracts/Contract.sol:Contract",
        "label": "patients",
        "offset": 0,
        "slot": "11",
        "type": "t_struct(Patients)559_storage"
      },
      {
        "astId": 583,
        "contract": "contracts/Contract.sol:Contract",
        "label": "initialized",
        "offset": 0,
        "slot": "16",
        "type": "t_bool"
      },
      {
        "astId": 586,
        "contract": "contracts/Contract.sol:Contract",
        "label": "testVar",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_address,t_struct(Map)13_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct AddToBoolMapping.Map)",
        "numberOfBytes": "32",
        "value": "t_struct(Map)13_storage"
      },
      "t_mapping(t_address,t_struct(MedicalRecord)542_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Contract.MedicalRecord)",
        "numberOfBytes": "32",
        "value": "t_struct(MedicalRecord)542_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Admin)550_storage": {
        "encoding": "inplace",
        "label": "struct Contract.Admin",
        "members": [
          {
            "astId": 544,
            "contract": "contracts/Contract.sol:Contract",
            "label": "user",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 546,
            "contract": "contracts/Contract.sol:Contract",
            "label": "public_key",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 549,
            "contract": "contracts/Contract.sol:Contract",
            "label": "pending_doctors",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(Map)13_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Doctors)572_storage": {
        "encoding": "inplace",
        "label": "struct Contract.Doctors",
        "members": [
          {
            "astId": 562,
            "contract": "contracts/Contract.sol:Contract",
            "label": "users",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Role)1535_storage"
          },
          {
            "astId": 566,
            "contract": "contracts/Contract.sol:Contract",
            "label": "public_keys",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_string_storage)"
          },
          {
            "astId": 571,
            "contract": "contracts/Contract.sol:Contract",
            "label": "docToPatAccess",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(Map)13_storage)"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Map)13_storage": {
        "encoding": "inplace",
        "label": "struct AddToBoolMapping.Map",
        "members": [
          {
            "astId": 4,
            "contract": "contracts/Contract.sol:Contract",
            "label": "keys",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 8,
            "contract": "contracts/Contract.sol:Contract",
            "label": "values",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 12,
            "contract": "contracts/Contract.sol:Contract",
            "label": "indexOf",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Map)204_storage": {
        "encoding": "inplace",
        "label": "struct AddToStrMapping.Map",
        "members": [
          {
            "astId": 191,
            "contract": "contracts/Contract.sol:Contract",
            "label": "keys",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 195,
            "contract": "contracts/Contract.sol:Contract",
            "label": "values",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_string_storage)"
          },
          {
            "astId": 199,
            "contract": "contracts/Contract.sol:Contract",
            "label": "indexOf",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 203,
            "contract": "contracts/Contract.sol:Contract",
            "label": "inserted",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(MedicalRecord)542_storage": {
        "encoding": "inplace",
        "label": "struct Contract.MedicalRecord",
        "members": [
          {
            "astId": 536,
            "contract": "contracts/Contract.sol:Contract",
            "label": "editor",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 539,
            "contract": "contracts/Contract.sol:Contract",
            "label": "viewers",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 541,
            "contract": "contracts/Contract.sol:Contract",
            "label": "key_data_hash",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Patients)559_storage": {
        "encoding": "inplace",
        "label": "struct Contract.Patients",
        "members": [
          {
            "astId": 553,
            "contract": "contracts/Contract.sol:Contract",
            "label": "users",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Role)1535_storage"
          },
          {
            "astId": 558,
            "contract": "contracts/Contract.sol:Contract",
            "label": "records",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(MedicalRecord)542_storage)"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Role)1535_storage": {
        "encoding": "inplace",
        "label": "struct Roles.Role",
        "members": [
          {
            "astId": 1534,
            "contract": "contracts/Contract.sol:Contract",
            "label": "bearer",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Map)204_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}