{
  "address": "0x0517ba43d4c821Bd49B68dE8298f283B61b9Cb90",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Contract__DoctorPublicKeyMissing",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__NotAdmin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__NotDoctor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__NotPatient",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Contract__PendingDoctorApproval",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "approveDr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "changeEditorAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdminPubKey",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllDrs",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllPts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getDrHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDrOfPt",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getDrPubKey",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPatViewers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPendingDrs",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getPtGeneralHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getPtRecordHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPtsOfDr",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "grantViewerAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isDoctor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isDrPending",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isDrRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isPatient",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "registerDr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_public_key",
          "type": "string"
        }
      ],
      "name": "registerDrConfirm",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_key_data_hash",
          "type": "string"
        }
      ],
      "name": "registerPt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "removeEditorAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "revokeViewerAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_public_key",
          "type": "string"
        }
      ],
      "name": "setAdminPubKey",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "setDrHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "setPtGeneralHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "setPtRecordHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x973013f5c01d88139d340a254bfaa0b7ee84923cf7530c67c74c933fde69cb62",
  "receipt": {
    "to": null,
    "from": "0x1EbbD6c85cfF4335Ae0C182b2781A777676Ee97A",
    "contractAddress": "0x0517ba43d4c821Bd49B68dE8298f283B61b9Cb90",
    "transactionIndex": 2,
    "gasUsed": "3277789",
    "logsBloom": "0x
    "blockHash": "0x0a6993f1c3ffbbd372f8fe35a6a74f226ff062f67c01f065c51493fe5fd1db54",
    "transactionHash": "0x973013f5c01d88139d340a254bfaa0b7ee84923cf7530c67c74c933fde69cb62",
    "logs": [],
    "blockNumber": 3122001,
    "cumulativeGasUsed": "3340284",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "daabf0b0a4c2fd3e132510b2858f19a9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Contract__DoctorPublicKeyMissing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__NotAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__NotDoctor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__NotPatient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contract__PendingDoctorApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"approveDr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"changeEditorAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdminPubKey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllDrs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getDrHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDrOfPt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getDrPubKey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPatViewers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPendingDrs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getPtGeneralHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getPtRecordHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPtsOfDr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"grantViewerAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isDoctor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isDrPending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isDrRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isPatient\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"registerDr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_public_key\",\"type\":\"string\"}],\"name\":\"registerDrConfirm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_key_data_hash\",\"type\":\"string\"}],\"name\":\"registerPt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeEditorAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"revokeViewerAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_public_key\",\"type\":\"string\"}],\"name\":\"setAdminPubKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setDrHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setPtGeneralHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setPtRecordHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Contract.sol\":\"Contract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AddToBoolMapping.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary AddToBoolMapping {\\n    // mapping address => bool\\n    struct Map {\\n        address[] keys;\\n        mapping(address => bool) values;\\n        mapping(address => uint256) indexOf;\\n    }\\n\\n    function get(Map storage map, address key) internal view returns (bool) {\\n        return map.values[key];\\n    }\\n\\n    function getKeys(Map storage map) internal view returns (address[] memory) {\\n        return map.keys;\\n    }\\n\\n    function getKeyAtIndex(Map storage map, uint256 index) internal view returns (address) {\\n        return map.keys[index];\\n    }\\n\\n    function size(Map storage map) internal view returns (uint256) {\\n        return map.keys.length;\\n    }\\n\\n    function set(Map storage map, address key) internal {\\n        if (map.values[key]) return;\\n\\n        // add address => true mapping to values\\n        map.values[key] = true;\\n\\n        // add index of address to indexOf mapping\\n        map.indexOf[key] = map.keys.length;\\n\\n        // add address to keys\\n        map.keys.push(key);\\n    }\\n\\n    function unset(Map storage map, address key) internal {\\n        if (!map.values[key]) return;\\n\\n        // remove from values\\n        delete map.values[key];\\n\\n        // important backups\\n        uint256 index = map.indexOf[key];\\n        uint256 lastIndex = map.keys.length - 1;\\n        address lastKey = map.keys[lastIndex];\\n\\n        // update indexOf last element\\n        map.indexOf[lastKey] = index;\\n        delete map.indexOf[key];\\n\\n        // remove from keys\\n        map.keys[index] = lastKey;\\n        map.keys.pop();\\n    }\\n}\\n\",\"keccak256\":\"0xf4944f25058b889d9bebf1d53283eab488e3200f3e2a48e47f52849b113644cc\",\"license\":\"MIT\"},\"contracts/AddToStrMapping.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary AddToStrMapping {\\n    // mapping address => string\\n    struct Map {\\n        address[] keys;\\n        mapping(address => string) values;\\n        mapping(address => uint256) indexOf;\\n        mapping(address => bool) inserted;\\n    }\\n\\n    function get(Map storage map, address key) internal view returns (string memory) {\\n        return map.values[key];\\n    }\\n\\n    function getKeys(Map storage map) internal view returns (address[] memory) {\\n        return map.keys;\\n    }\\n\\n    function getKeyAtIndex(Map storage map, uint256 index) internal view returns (address) {\\n        return map.keys[index];\\n    }\\n\\n    function size(Map storage map) internal view returns (uint256) {\\n        return map.keys.length;\\n    }\\n\\n    function set(Map storage map, address key, string memory val) internal {\\n        if (!map.inserted[key]) {\\n            // add index of address to indexOf mapping\\n            map.indexOf[key] = map.keys.length;\\n\\n            // make value of address in inserted to true\\n            map.inserted[key] = true;\\n\\n            // add address to keys\\n            map.keys.push(key);\\n        }\\n\\n        // add address => true mapping to values\\n        map.values[key] = val;\\n    }\\n\\n    function remove(Map storage map, address key) internal {\\n        if (!map.inserted[key]) return;\\n\\n        // remove from values\\n        delete map.values[key];\\n        delete map.inserted[key];\\n\\n        // important backups\\n        uint256 index = map.indexOf[key];\\n        uint256 lastIndex = map.keys.length - 1;\\n        address lastKey = map.keys[lastIndex];\\n\\n        // update indexOf last element\\n        map.indexOf[lastKey] = index;\\n        delete map.indexOf[key];\\n\\n        // remove from keys\\n        map.keys[index] = lastKey;\\n        map.keys.pop();\\n    }\\n}\\n\",\"keccak256\":\"0x44a19745fb3130275849bcaaf82f085c8a50d1d105b431e5c6df0625e9289f14\",\"license\":\"MIT\"},\"contracts/AddressArrayUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary AddressArrayUtils {\\n    function indexOf(address[] memory arr, address key) internal pure returns (int256) {\\n        for (uint256 i = 0; i < arr.length; i++) {\\n            if (arr[i] == key) return int256(i);\\n        }\\n        return -1;\\n    }\\n\\n    function contains(address[] memory arr, address key) internal pure returns (bool) {\\n        return indexOf(arr, key) != -1;\\n    }\\n\\n    function remove(address[] storage arr, address key) internal returns (bool) {\\n        int256 i = indexOf(arr, key);\\n\\n        if (i == -1) return false;\\n\\n        address[] memory temp = arr;\\n        arr[uint256(i)] = temp[temp.length - 1];\\n        arr.pop();\\n\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x29555ad812fd5509ead59914b9bc59285a5f7b96bedcfed493bca55994271d67\",\"license\":\"MIT\"},\"contracts/Contract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"./Roles.sol\\\";\\nimport \\\"./AddressArrayUtils.sol\\\";\\nimport \\\"./AddToBoolMapping.sol\\\";\\n\\nerror Contract__NotAdmin();\\nerror Contract__NotDoctor();\\nerror Contract__NotPatient();\\nerror Contract__PendingDoctorApproval();\\nerror Contract__DoctorPublicKeyMissing();\\n\\ncontract Contract {\\n    // using methods of Roles for Role struct in Roles\\n    using Roles for Roles.Role;\\n    using AddToBoolMapping for AddToBoolMapping.Map;\\n    using AddressArrayUtils for address[];\\n\\n    struct MedicalRecord {\\n        address editor;\\n        address[] viewers;\\n        string key_data_hash;\\n    }\\n\\n    struct Admin {\\n        address user;\\n        string public_key;\\n        AddToBoolMapping.Map pending_doctors;\\n    }\\n\\n    struct Patients {\\n        Roles.Role users;\\n        mapping(address => MedicalRecord) records;\\n    }\\n\\n    struct Doctors {\\n        Roles.Role users;\\n        mapping(address => string) public_keys;\\n        mapping(address => AddToBoolMapping.Map) docToPatAccess;\\n    }\\n\\n    // defining roles - contains hashes\\n    Admin private admin;\\n    Doctors private doctors;\\n    Patients private patients;\\n\\n    // Initializing admin\\n    constructor() {\\n        admin.user = msg.sender;\\n    }\\n\\n    // Admin methods\\n    function isAdmin(address _address) public view returns (bool) {\\n        if (admin.user == _address) return true;\\n        return false;\\n    }\\n\\n    function getAdmin() public view returns (address) {\\n        return admin.user;\\n    }\\n\\n    function setAdminPubKey(string memory _public_key) public onlyAdmin {\\n        admin.public_key = _public_key;\\n    }\\n\\n    function getAdminPubKey() public view returns (string memory) {\\n        return admin.public_key;\\n    }\\n\\n    // Doctor methods\\n    function isDrRegistered(address _address) public view returns (bool) {\\n        return doctors.users.has(_address);\\n    }\\n\\n    function isDrPending(address _address) public view returns (bool) {\\n        return admin.pending_doctors.get(_address);\\n    }\\n\\n    function isDoctor(address _address) public view returns (bool) {\\n        if (!doctors.users.has(_address)) return false;\\n        if (admin.pending_doctors.get(_address)) return false;\\n        if (bytes(doctors.public_keys[_address]).length == 0) return false;\\n        return true;\\n    }\\n\\n    function registerDr(string memory _hash) public {\\n        if (isPatient(msg.sender)) revert(\\\"Contract: Address already registered as patient\\\");\\n        if (bytes(_hash).length == 0) revert(\\\"Contract: Empty hash is not allowed!\\\");\\n        doctors.users.add(msg.sender, _hash);\\n        admin.pending_doctors.set(msg.sender);\\n    }\\n\\n    function approveDr(address _address) public onlyAdmin {\\n        if (isDoctor(_address)) return;\\n        if (!doctors.users.has(_address)) return;\\n        admin.pending_doctors.unset(_address);\\n    }\\n\\n    function registerDrConfirm(string memory _public_key) public {\\n        if (bytes(_public_key).length == 0) revert(\\\"Contract: Empty public key is not allowed!\\\");\\n        if (!doctors.users.has(msg.sender)) revert Contract__NotDoctor();\\n        if (admin.pending_doctors.get(msg.sender)) revert Contract__PendingDoctorApproval();\\n        doctors.public_keys[msg.sender] = _public_key;\\n    }\\n\\n    function setDrHash(string memory _hash) public onlyDoctor {\\n        if (bytes(_hash).length == 0) revert(\\\"Contract: Empty hash is not allowed!\\\");\\n        doctors.users.setHash(msg.sender, _hash);\\n    }\\n\\n    function getDrHash(address _address) public view returns (string memory) {\\n        if (!isDrRegistered(_address)) revert Contract__NotDoctor();\\n        return doctors.users.getHash(_address);\\n    }\\n\\n    function getDrPubKey(address _address) public view returns (string memory) {\\n        return doctors.public_keys[_address];\\n    }\\n\\n    function getAllDrs() public view returns (address[] memory) {\\n        return doctors.users.getMembers();\\n    }\\n\\n    function getPendingDrs() public view returns (address[] memory) {\\n        return admin.pending_doctors.keys;\\n    }\\n\\n    function getPtsOfDr() public view onlyDoctor returns (address[] memory) {\\n        return doctors.docToPatAccess[msg.sender].keys;\\n    }\\n\\n    // Patient methods\\n    function isPatient(address _address) public view returns (bool) {\\n        return patients.users.has(_address);\\n    }\\n\\n    function registerPt(string memory _hash, string memory _key_data_hash) public {\\n        if (isDrRegistered(msg.sender) || isDoctor(msg.sender))\\n            revert(\\\"Contract: Address already registered as doctor\\\");\\n        if (bytes(_hash).length == 0) revert(\\\"Contract: Empty hash is not allowed\\\");\\n        patients.users.add(msg.sender, _hash);\\n        patients.records[msg.sender].editor = msg.sender;\\n        patients.records[msg.sender].key_data_hash = _key_data_hash;\\n    }\\n\\n    function setPtGeneralHash(string memory _hash) public onlyPatient {\\n        patients.users.setHash(msg.sender, _hash);\\n    }\\n\\n    function getPtGeneralHash(address _address) public view returns (string memory) {\\n        if (!isPatient(_address)) revert Contract__NotPatient();\\n\\n        if (\\n            msg.sender == _address ||\\n            patients.records[_address].editor == msg.sender ||\\n            patients.records[_address].viewers.indexOf(msg.sender) != -1\\n        ) return patients.users.getHash(_address);\\n\\n        revert(\\\"Not Allowed\\\");\\n    }\\n\\n    function setPtRecordHash(address _address, string memory _hash) public {\\n        if (!isPatient(_address)) revert Contract__NotPatient();\\n        if (!(patients.records[_address].editor == msg.sender)) revert(\\\"Not Allowed\\\");\\n        patients.records[_address].key_data_hash = _hash;\\n    }\\n\\n    function getPtRecordHash(address _address) public view returns (string memory) {\\n        if (!isPatient(_address)) revert Contract__NotPatient();\\n\\n        if (\\n            msg.sender == _address ||\\n            patients.records[_address].editor == msg.sender ||\\n            patients.records[_address].viewers.indexOf(msg.sender) != -1\\n        ) return patients.records[_address].key_data_hash;\\n\\n        revert(\\\"Not Allowed\\\");\\n    }\\n\\n    function getAllPts() public view returns (address[] memory) {\\n        return patients.users.getMembers();\\n    }\\n\\n    function changeEditorAccess(address _address) public onlyPatient {\\n        // pending update - when user changes access, symmetric key S must be changed\\n        if (!isDoctor(_address)) revert Contract__NotDoctor();\\n\\n        // remove old editor access\\n        address old_editor = patients.records[msg.sender].editor;\\n        doctors.docToPatAccess[old_editor].unset(msg.sender);\\n\\n        // add new editor access\\n        patients.records[msg.sender].editor = _address;\\n        doctors.docToPatAccess[_address].set(msg.sender);\\n    }\\n\\n    function removeEditorAccess() public onlyPatient {\\n        address old_editor = patients.records[msg.sender].editor;\\n        patients.records[msg.sender].editor = msg.sender;\\n        doctors.docToPatAccess[old_editor].unset(msg.sender);\\n    }\\n\\n    function getDrOfPt() public view onlyPatient returns (address) {\\n        return patients.records[msg.sender].editor;\\n    }\\n\\n    function grantViewerAccess(address _address) public onlyPatient {\\n        if (!isDoctor(_address)) revert Contract__NotDoctor();\\n\\n        if (!patients.records[msg.sender].viewers.contains(_address)) {\\n            patients.records[msg.sender].viewers.push(_address);\\n        }\\n    }\\n\\n    function revokeViewerAccess(address _address) public onlyPatient {\\n        // pending update - when user revokes access, symmetric key S must be changed\\n        if (!isDoctor(_address)) revert Contract__NotDoctor();\\n\\n        patients.records[msg.sender].viewers.remove(_address);\\n    }\\n\\n    function getPatViewers() public view onlyPatient returns (address[] memory) {\\n        return patients.records[msg.sender].viewers;\\n    }\\n\\n    // modifiers\\n    modifier onlyAdmin() {\\n        if (!isAdmin(msg.sender)) revert Contract__NotAdmin();\\n        _;\\n    }\\n\\n    modifier onlyDoctor() {\\n        if (!doctors.users.has(msg.sender)) revert Contract__NotDoctor();\\n        if (admin.pending_doctors.get(msg.sender)) revert Contract__PendingDoctorApproval();\\n        if (bytes(doctors.public_keys[msg.sender]).length == 0)\\n            revert Contract__DoctorPublicKeyMissing();\\n        _;\\n    }\\n\\n    modifier onlyPatient() {\\n        if (!isPatient(msg.sender)) revert Contract__NotPatient();\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x71dbe69b6e2eac10f9b579fde552f5099b3e718ee24f50d29a92635937cc98d1\",\"license\":\"MIT\"},\"contracts/Roles.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"./AddToStrMapping.sol\\\";\\n\\nlibrary Roles {\\n    using AddToStrMapping for AddToStrMapping.Map;\\n\\n    // This is to keep track of roles\\n    // Reduces searching cost\\n    struct Role {\\n        AddToStrMapping.Map bearer;\\n    }\\n\\n    function add(Role storage role, address account, string memory hash) internal {\\n        require(!has(role, account), \\\"Roles: account already has role\\\");\\n        role.bearer.set(account, hash);\\n    }\\n\\n    function remove(Role storage role, address account) internal {\\n        require(has(role, account), \\\"Roles: account does not have role\\\");\\n        role.bearer.remove(account);\\n    }\\n\\n    function has(Role storage role, address account) internal view returns (bool) {\\n        require(account != address(0), \\\"Roles: account is the zero address\\\");\\n        return bytes(role.bearer.get(account)).length != 0;\\n    }\\n\\n    function setHash(Role storage role, address account, string memory _hash) internal {\\n        role.bearer.set(account, _hash);\\n    }\\n\\n    function getHash(Role storage role, address account) internal view returns (string memory) {\\n        return role.bearer.get(account);\\n    }\\n\\n    function getMembers(Role storage role) internal view returns (address[] memory) {\\n        return role.bearer.keys;\\n    }\\n}\\n\",\"keccak256\":\"0x35319b78de3f838d4fdae2c499ccf5b4ed9407222e38d041a303fb7b42bf47aa\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613a2f806100636000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80638f9c79ed11610104578063c70597ad116100a2578063dc823aaf11610071578063dc823aaf1461052c578063df70345c1461055c578063e2877b4e14610578578063f7a03a1e14610596576101cf565b8063c70597ad146104a6578063cce9d43e146104c2578063ccfaed16146104f2578063d0d9a5e31461050e576101cf565b8063a03de49e116100de578063a03de49e14610434578063a53f514d14610450578063afb97e3d1461046e578063b1e758a41461048a576101cf565b80638f9c79ed146103b8578063996440c6146103e857806399eedd2a14610418576101cf565b806332991838116101715780636d4bce201161014b5780636d4bce20146103305780636e9960c31461036057806388c432e11461037e5780638f7f43a91461039a576101cf565b806332991838146102b45780633d8198b4146102d05780634df0a2d414610300576101cf565b80631da3e2dc116101ad5780631da3e2dc1461021857806321639f041461023657806324d7806c14610254578063290c61b014610284576101cf565b80630de99991146101d4578063116461e9146101f05780631d6138011461020e575b600080fd5b6101ee60048036038101906101e99190612d53565b6105b2565b005b6101f8610635565b6040516102059190612e10565b60405180910390f35b6102166106ca565b005b61022061084d565b60405161022d9190612ef0565b60405180910390f35b61023e610861565b60405161024b9190612f21565b60405180910390f35b61026e60048036038101906102699190612d53565b61090d565b60405161027b9190612f57565b60405180910390f35b61029e60048036038101906102999190612d53565b610979565b6040516102ab9190612f57565b60405180910390f35b6102ce60048036038101906102c991906130a7565b610999565b005b6102ea60048036038101906102e59190612d53565b610a59565b6040516102f79190612e10565b60405180910390f35b61031a60048036038101906103159190612d53565b610d84565b6040516103279190612e10565b60405180910390f35b61034a60048036038101906103459190612d53565b610ff8565b6040516103579190612f57565b60405180910390f35b610368611018565b6040516103759190612f21565b60405180910390f35b610398600480360381019061039391906130a7565b611044565b005b6103a261109f565b6040516103af9190612ef0565b60405180910390f35b6103d260048036038101906103cd9190612d53565b6111af565b6040516103df9190612f57565b60405180910390f35b61040260048036038101906103fd9190612d53565b6111cf565b60405161040f9190612f57565b60405180910390f35b610432600480360381019061042d91906130a7565b611283565b005b61044e600480360381019061044991906130f0565b611406565b005b610458611597565b6040516104659190612ef0565b60405180910390f35b610488600480360381019061048391906130a7565b6115ab565b005b6104a4600480360381019061049f9190612d53565b611600565b005b6104c060048036038101906104bb9190613168565b611808565b005b6104dc60048036038101906104d79190612d53565b611971565b6040516104e99190612e10565b60405180910390f35b61050c600480360381019061050791906130a7565b6119d0565b005b610516611b02565b6040516105239190612ef0565b60405180910390f35b61054660048036038101906105419190612d53565b611cf5565b6040516105539190612e10565b60405180910390f35b61057660048036038101906105719190612d53565b611dc9565b005b610580611fdf565b60405161058d9190612ef0565b60405180910390f35b6105b060048036038101906105ab9190612d53565b612073565b005b6105bb3361090d565b6105f1576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105fa816111cf565b6106325761061581600560000161214c90919063ffffffff16565b15610632576106318160006002016121df90919063ffffffff16565b5b50565b606060006001018054610647906131f3565b80601f0160208091040260200160405190810160405280929190818152602001828054610673906131f3565b80156106c05780601f10610695576101008083540402835291602001916106c0565b820191906000526020600020905b8154815290600101906020018083116106a357829003601f168201915b5050505050905090565b6106d3336111af565b610709576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905033600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061084a336005800160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206121df90919063ffffffff16565b50565b606061085c6005600001612462565b905090565b600061086c336111af565b6108a2576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008173ffffffffffffffffffffffffffffffffffffffff166000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361096f5760019050610974565b600090505b919050565b600061099282600560000161214c90919063ffffffff16565b9050919050565b6109a2336111af565b156109e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d990613296565b60405180910390fd5b6000815103610a26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1d90613328565b60405180910390fd5b610a3f338260056000016124f79092919063ffffffff16565b610a5633600060020161255e90919063ffffffff16565b50565b6060610a64826111af565b610a9a576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b6457503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610c6a57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610c6733600b60040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015610c5457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610c0a575b50505050506126c290919063ffffffff16565b14155b15610d4457600b60040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018054610cbf906131f3565b80601f0160208091040260200160405190810160405280929190818152602001828054610ceb906131f3565b8015610d385780601f10610d0d57610100808354040283529160200191610d38565b820191906000526020600020905b815481529060010190602001808311610d1b57829003601f168201915b50505050509050610d7f565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7690613394565b60405180910390fd5b919050565b6060610d8f826111af565b610dc5576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e8f57503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610f9557507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610f9233600b60040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015610f7f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610f35575b50505050506126c290919063ffffffff16565b14155b15610fb857610fb182600b60000161276790919063ffffffff16565b9050610ff3565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fea90613394565b60405180910390fd5b919050565b600061101182600060020161278790919063ffffffff16565b9050919050565b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61104d336111af565b611083576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61109c3382600b6000016127e09092919063ffffffff16565b50565b60606110aa336111af565b6110e0576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054806020026020016040519081016040528092919081815260200182805480156111a557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161115b575b5050505050905090565b60006111c882600b60000161214c90919063ffffffff16565b9050919050565b60006111e882600560000161214c90919063ffffffff16565b6111f5576000905061127e565b61120c82600060020161278790919063ffffffff16565b1561121a576000905061127e565b6000600560040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054611269906131f3565b905003611279576000905061127e565b600190505b919050565b61129a33600560000161214c90919063ffffffff16565b6112d0576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6112e733600060020161278790919063ffffffff16565b1561131e576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461136d906131f3565b9050036113a6576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008151036113ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e190613328565b60405180910390fd5b611403338260056000016127e09092919063ffffffff16565b50565b61140f33610979565b8061141f575061141e336111cf565b5b1561145f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145690613426565b60405180910390fd5b60008251036114a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149a906134b8565b60405180910390fd5b6114bc3383600b6000016124f79092919063ffffffff16565b33600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002019081611592919061368e565b505050565b60606115a6600b600001612462565b905090565b6115b43361090d565b6115ea576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600060010190816115fc919061368e565b5050565b611609336111af565b61163f576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611648816111cf565b61167e576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61175a81600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561174757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116116fd575b50505050506127fd90919063ffffffff16565b61180557600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b611811826111af565b611847576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461191a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191190613394565b60405180910390fd5b80600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201908161196c919061368e565b505050565b606061197c82610979565b6119b2576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6119c982600560000161276790919063ffffffff16565b9050919050565b6000815103611a14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a0b906137d2565b60405180910390fd5b611a2b33600560000161214c90919063ffffffff16565b611a61576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611a7833600060020161278790919063ffffffff16565b15611aaf576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081611afe919061368e565b5050565b6060611b1b33600560000161214c90919063ffffffff16565b611b51576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611b6833600060020161278790919063ffffffff16565b15611b9f576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054611bee906131f3565b905003611c27576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005800160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805480602002602001604051908101604052809291908181526020018280548015611ceb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611ca1575b5050505050905090565b6060600560040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054611d44906131f3565b80601f0160208091040260200160405190810160405280929190818152602001828054611d70906131f3565b8015611dbd5780601f10611d9257610100808354040283529160200191611dbd565b820191906000526020600020905b815481529060010190602001808311611da057829003601f168201915b50505050509050919050565b611dd2336111af565b611e08576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611e11816111cf565b611e47576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611f04336005800160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206121df90919063ffffffff16565b81600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611fdb336005800160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061255e90919063ffffffff16565b5050565b6060600060020160000180548060200260200160405190810160405280929190818152602001828054801561206957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161201f575b5050505050905090565b61207c336111af565b6120b2576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6120bb816111cf565b6120f1576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61214881600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010161283490919063ffffffff16565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036121bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121b390613864565b60405180910390fd5b60006121d48385600001612a5990919063ffffffff16565b511415905092915050565b8160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561245e578160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905560008260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600184600001805490506122e091906138b3565b905060008460000182815481106122fa576122f96138e7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828560020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508460020160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055808560000184815481106123c9576123c86138e7565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508460000180548061242557612424613916565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555050505b5050565b6060816000016000018054806020026020016040519081016040528092919081815260200182805480156124eb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116124a1575b50505050509050919050565b612501838361214c565b15612541576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161253890613991565b60405180910390fd5b612559828285600001612b2d9092919063ffffffff16565b505050565b8160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166126be5760018260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555081600001805490508260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b600080600090505b835181101561273c578273ffffffffffffffffffffffffffffffffffffffff168482815181106126fd576126fc6138e7565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036127295780915050612761565b8080612734906139b1565b9150506126ca565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b92915050565b606061277f8284600001612a5990919063ffffffff16565b905092915050565b60008260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6127f8828285600001612b2d9092919063ffffffff16565b505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61282a84846126c2565b1415905092915050565b6000806128c6848054806020026020016040519081016040528092919081815260200182805480156128bb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612871575b5050505050846126c2565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81036128f9576000915050612a53565b60008480548060200260200160405190810160405280929190818152602001828054801561297c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612932575b50505050509050806001825161299291906138b3565b815181106129a3576129a26138e7565b5b60200260200101518583815481106129be576129bd6138e7565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084805480612a1757612a16613916565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556001925050505b92915050565b60608260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054612aa7906131f3565b80601f0160208091040260200160405190810160405280929190818152602001828054612ad3906131f3565b8015612b205780601f10612af557610100808354040283529160200191612b20565b820191906000526020600020905b815481529060010190602001808311612b0357829003601f168201915b5050505050905092915050565b8260030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16612c8d5782600001805490508360020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060018360030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555082600001829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b808360010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081612cdb919061368e565b50505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612d2082612cf5565b9050919050565b612d3081612d15565b8114612d3b57600080fd5b50565b600081359050612d4d81612d27565b92915050565b600060208284031215612d6957612d68612ceb565b5b6000612d7784828501612d3e565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612dba578082015181840152602081019050612d9f565b60008484015250505050565b6000601f19601f8301169050919050565b6000612de282612d80565b612dec8185612d8b565b9350612dfc818560208601612d9c565b612e0581612dc6565b840191505092915050565b60006020820190508181036000830152612e2a8184612dd7565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612e6781612d15565b82525050565b6000612e798383612e5e565b60208301905092915050565b6000602082019050919050565b6000612e9d82612e32565b612ea78185612e3d565b9350612eb283612e4e565b8060005b83811015612ee3578151612eca8882612e6d565b9750612ed583612e85565b925050600181019050612eb6565b5085935050505092915050565b60006020820190508181036000830152612f0a8184612e92565b905092915050565b612f1b81612d15565b82525050565b6000602082019050612f366000830184612f12565b92915050565b60008115159050919050565b612f5181612f3c565b82525050565b6000602082019050612f6c6000830184612f48565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612fb482612dc6565b810181811067ffffffffffffffff82111715612fd357612fd2612f7c565b5b80604052505050565b6000612fe6612ce1565b9050612ff28282612fab565b919050565b600067ffffffffffffffff82111561301257613011612f7c565b5b61301b82612dc6565b9050602081019050919050565b82818337600083830152505050565b600061304a61304584612ff7565b612fdc565b90508281526020810184848401111561306657613065612f77565b5b613071848285613028565b509392505050565b600082601f83011261308e5761308d612f72565b5b813561309e848260208601613037565b91505092915050565b6000602082840312156130bd576130bc612ceb565b5b600082013567ffffffffffffffff8111156130db576130da612cf0565b5b6130e784828501613079565b91505092915050565b6000806040838503121561310757613106612ceb565b5b600083013567ffffffffffffffff81111561312557613124612cf0565b5b61313185828601613079565b925050602083013567ffffffffffffffff81111561315257613151612cf0565b5b61315e85828601613079565b9150509250929050565b6000806040838503121561317f5761317e612ceb565b5b600061318d85828601612d3e565b925050602083013567ffffffffffffffff8111156131ae576131ad612cf0565b5b6131ba85828601613079565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061320b57607f821691505b60208210810361321e5761321d6131c4565b5b50919050565b7f436f6e74726163743a204164647265737320616c72656164792072656769737460008201527f657265642061732070617469656e740000000000000000000000000000000000602082015250565b6000613280602f83612d8b565b915061328b82613224565b604082019050919050565b600060208201905081810360008301526132af81613273565b9050919050565b7f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60008201527f7765642100000000000000000000000000000000000000000000000000000000602082015250565b6000613312602483612d8b565b915061331d826132b6565b604082019050919050565b6000602082019050818103600083015261334181613305565b9050919050565b7f4e6f7420416c6c6f776564000000000000000000000000000000000000000000600082015250565b600061337e600b83612d8b565b915061338982613348565b602082019050919050565b600060208201905081810360008301526133ad81613371565b9050919050565b7f436f6e74726163743a204164647265737320616c72656164792072656769737460008201527f6572656420617320646f63746f72000000000000000000000000000000000000602082015250565b6000613410602e83612d8b565b915061341b826133b4565b604082019050919050565b6000602082019050818103600083015261343f81613403565b9050919050565b7f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60008201527f7765640000000000000000000000000000000000000000000000000000000000602082015250565b60006134a2602383612d8b565b91506134ad82613446565b604082019050919050565b600060208201905081810360008301526134d181613495565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261353a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826134fd565b61354486836134fd565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061358b6135866135818461355c565b613566565b61355c565b9050919050565b6000819050919050565b6135a583613570565b6135b96135b182613592565b84845461350a565b825550505050565b600090565b6135ce6135c1565b6135d981848461359c565b505050565b5b818110156135fd576135f26000826135c6565b6001810190506135df565b5050565b601f82111561364257613613816134d8565b61361c846134ed565b8101602085101561362b578190505b61363f613637856134ed565b8301826135de565b50505b505050565b600082821c905092915050565b600061366560001984600802613647565b1980831691505092915050565b600061367e8383613654565b9150826002028217905092915050565b61369782612d80565b67ffffffffffffffff8111156136b0576136af612f7c565b5b6136ba82546131f3565b6136c5828285613601565b600060209050601f8311600181146136f857600084156136e6578287015190505b6136f08582613672565b865550613758565b601f198416613706866134d8565b60005b8281101561372e57848901518255600182019150602085019450602081019050613709565b8683101561374b5784890151613747601f891682613654565b8355505b6001600288020188555050505b505050505050565b7f436f6e74726163743a20456d707479207075626c6963206b6579206973206e6f60008201527f7420616c6c6f7765642100000000000000000000000000000000000000000000602082015250565b60006137bc602a83612d8b565b91506137c782613760565b604082019050919050565b600060208201905081810360008301526137eb816137af565b9050919050565b7f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061384e602283612d8b565b9150613859826137f2565b604082019050919050565b6000602082019050818103600083015261387d81613841565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006138be8261355c565b91506138c98361355c565b92508282039050818111156138e1576138e0613884565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500600082015250565b600061397b601f83612d8b565b915061398682613945565b602082019050919050565b600060208201905081810360008301526139aa8161396e565b9050919050565b60006139bc8261355c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036139ee576139ed613884565b5b60018201905091905056fea264697066735822122084833810aa8292b0ff3ae41b12f0cd9272386971e9403be1700a0cd5fd999c6564736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c80638f9c79ed11610104578063c70597ad116100a2578063dc823aaf11610071578063dc823aaf1461052c578063df70345c1461055c578063e2877b4e14610578578063f7a03a1e14610596576101cf565b8063c70597ad146104a6578063cce9d43e146104c2578063ccfaed16146104f2578063d0d9a5e31461050e576101cf565b8063a03de49e116100de578063a03de49e14610434578063a53f514d14610450578063afb97e3d1461046e578063b1e758a41461048a576101cf565b80638f9c79ed146103b8578063996440c6146103e857806399eedd2a14610418576101cf565b806332991838116101715780636d4bce201161014b5780636d4bce20146103305780636e9960c31461036057806388c432e11461037e5780638f7f43a91461039a576101cf565b806332991838146102b45780633d8198b4146102d05780634df0a2d414610300576101cf565b80631da3e2dc116101ad5780631da3e2dc1461021857806321639f041461023657806324d7806c14610254578063290c61b014610284576101cf565b80630de99991146101d4578063116461e9146101f05780631d6138011461020e575b600080fd5b6101ee60048036038101906101e99190612d53565b6105b2565b005b6101f8610635565b6040516102059190612e10565b60405180910390f35b6102166106ca565b005b61022061084d565b60405161022d9190612ef0565b60405180910390f35b61023e610861565b60405161024b9190612f21565b60405180910390f35b61026e60048036038101906102699190612d53565b61090d565b60405161027b9190612f57565b60405180910390f35b61029e60048036038101906102999190612d53565b610979565b6040516102ab9190612f57565b60405180910390f35b6102ce60048036038101906102c991906130a7565b610999565b005b6102ea60048036038101906102e59190612d53565b610a59565b6040516102f79190612e10565b60405180910390f35b61031a60048036038101906103159190612d53565b610d84565b6040516103279190612e10565b60405180910390f35b61034a60048036038101906103459190612d53565b610ff8565b6040516103579190612f57565b60405180910390f35b610368611018565b6040516103759190612f21565b60405180910390f35b610398600480360381019061039391906130a7565b611044565b005b6103a261109f565b6040516103af9190612ef0565b60405180910390f35b6103d260048036038101906103cd9190612d53565b6111af565b6040516103df9190612f57565b60405180910390f35b61040260048036038101906103fd9190612d53565b6111cf565b60405161040f9190612f57565b60405180910390f35b610432600480360381019061042d91906130a7565b611283565b005b61044e600480360381019061044991906130f0565b611406565b005b610458611597565b6040516104659190612ef0565b60405180910390f35b610488600480360381019061048391906130a7565b6115ab565b005b6104a4600480360381019061049f9190612d53565b611600565b005b6104c060048036038101906104bb9190613168565b611808565b005b6104dc60048036038101906104d79190612d53565b611971565b6040516104e99190612e10565b60405180910390f35b61050c600480360381019061050791906130a7565b6119d0565b005b610516611b02565b6040516105239190612ef0565b60405180910390f35b61054660048036038101906105419190612d53565b611cf5565b6040516105539190612e10565b60405180910390f35b61057660048036038101906105719190612d53565b611dc9565b005b610580611fdf565b60405161058d9190612ef0565b60405180910390f35b6105b060048036038101906105ab9190612d53565b612073565b005b6105bb3361090d565b6105f1576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105fa816111cf565b6106325761061581600560000161214c90919063ffffffff16565b15610632576106318160006002016121df90919063ffffffff16565b5b50565b606060006001018054610647906131f3565b80601f0160208091040260200160405190810160405280929190818152602001828054610673906131f3565b80156106c05780601f10610695576101008083540402835291602001916106c0565b820191906000526020600020905b8154815290600101906020018083116106a357829003601f168201915b5050505050905090565b6106d3336111af565b610709576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905033600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061084a336005800160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206121df90919063ffffffff16565b50565b606061085c6005600001612462565b905090565b600061086c336111af565b6108a2576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008173ffffffffffffffffffffffffffffffffffffffff166000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361096f5760019050610974565b600090505b919050565b600061099282600560000161214c90919063ffffffff16565b9050919050565b6109a2336111af565b156109e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d990613296565b60405180910390fd5b6000815103610a26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1d90613328565b60405180910390fd5b610a3f338260056000016124f79092919063ffffffff16565b610a5633600060020161255e90919063ffffffff16565b50565b6060610a64826111af565b610a9a576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b6457503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610c6a57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610c6733600b60040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015610c5457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610c0a575b50505050506126c290919063ffffffff16565b14155b15610d4457600b60040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018054610cbf906131f3565b80601f0160208091040260200160405190810160405280929190818152602001828054610ceb906131f3565b8015610d385780601f10610d0d57610100808354040283529160200191610d38565b820191906000526020600020905b815481529060010190602001808311610d1b57829003601f168201915b50505050509050610d7f565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7690613394565b60405180910390fd5b919050565b6060610d8f826111af565b610dc5576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e8f57503373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610f9557507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610f9233600b60040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015610f7f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610f35575b50505050506126c290919063ffffffff16565b14155b15610fb857610fb182600b60000161276790919063ffffffff16565b9050610ff3565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fea90613394565b60405180910390fd5b919050565b600061101182600060020161278790919063ffffffff16565b9050919050565b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61104d336111af565b611083576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61109c3382600b6000016127e09092919063ffffffff16565b50565b60606110aa336111af565b6110e0576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054806020026020016040519081016040528092919081815260200182805480156111a557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161115b575b5050505050905090565b60006111c882600b60000161214c90919063ffffffff16565b9050919050565b60006111e882600560000161214c90919063ffffffff16565b6111f5576000905061127e565b61120c82600060020161278790919063ffffffff16565b1561121a576000905061127e565b6000600560040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054611269906131f3565b905003611279576000905061127e565b600190505b919050565b61129a33600560000161214c90919063ffffffff16565b6112d0576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6112e733600060020161278790919063ffffffff16565b1561131e576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461136d906131f3565b9050036113a6576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008151036113ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e190613328565b60405180910390fd5b611403338260056000016127e09092919063ffffffff16565b50565b61140f33610979565b8061141f575061141e336111cf565b5b1561145f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145690613426565b60405180910390fd5b60008251036114a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149a906134b8565b60405180910390fd5b6114bc3383600b6000016124f79092919063ffffffff16565b33600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002019081611592919061368e565b505050565b60606115a6600b600001612462565b905090565b6115b43361090d565b6115ea576040517f4d371dc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600060010190816115fc919061368e565b5050565b611609336111af565b61163f576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611648816111cf565b61167e576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61175a81600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561174757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116116fd575b50505050506127fd90919063ffffffff16565b61180557600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b611811826111af565b611847576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461191a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191190613394565b60405180910390fd5b80600b60040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201908161196c919061368e565b505050565b606061197c82610979565b6119b2576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6119c982600560000161276790919063ffffffff16565b9050919050565b6000815103611a14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a0b906137d2565b60405180910390fd5b611a2b33600560000161214c90919063ffffffff16565b611a61576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611a7833600060020161278790919063ffffffff16565b15611aaf576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081611afe919061368e565b5050565b6060611b1b33600560000161214c90919063ffffffff16565b611b51576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611b6833600060020161278790919063ffffffff16565b15611b9f576040517ff873d3b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054611bee906131f3565b905003611c27576040517fa30132d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005800160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805480602002602001604051908101604052809291908181526020018280548015611ceb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611ca1575b5050505050905090565b6060600560040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054611d44906131f3565b80601f0160208091040260200160405190810160405280929190818152602001828054611d70906131f3565b8015611dbd5780601f10611d9257610100808354040283529160200191611dbd565b820191906000526020600020905b815481529060010190602001808311611da057829003601f168201915b50505050509050919050565b611dd2336111af565b611e08576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611e11816111cf565b611e47576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611f04336005800160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206121df90919063ffffffff16565b81600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611fdb336005800160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061255e90919063ffffffff16565b5050565b6060600060020160000180548060200260200160405190810160405280929190818152602001828054801561206957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161201f575b5050505050905090565b61207c336111af565b6120b2576040517fc11330e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6120bb816111cf565b6120f1576040517ffe2fc9c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61214881600b60040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010161283490919063ffffffff16565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036121bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121b390613864565b60405180910390fd5b60006121d48385600001612a5990919063ffffffff16565b511415905092915050565b8160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561245e578160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905560008260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600184600001805490506122e091906138b3565b905060008460000182815481106122fa576122f96138e7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828560020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508460020160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055808560000184815481106123c9576123c86138e7565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508460000180548061242557612424613916565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555050505b5050565b6060816000016000018054806020026020016040519081016040528092919081815260200182805480156124eb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116124a1575b50505050509050919050565b612501838361214c565b15612541576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161253890613991565b60405180910390fd5b612559828285600001612b2d9092919063ffffffff16565b505050565b8160010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166126be5760018260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555081600001805490508260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b600080600090505b835181101561273c578273ffffffffffffffffffffffffffffffffffffffff168482815181106126fd576126fc6138e7565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036127295780915050612761565b8080612734906139b1565b9150506126ca565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b92915050565b606061277f8284600001612a5990919063ffffffff16565b905092915050565b60008260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6127f8828285600001612b2d9092919063ffffffff16565b505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61282a84846126c2565b1415905092915050565b6000806128c6848054806020026020016040519081016040528092919081815260200182805480156128bb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612871575b5050505050846126c2565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81036128f9576000915050612a53565b60008480548060200260200160405190810160405280929190818152602001828054801561297c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612932575b50505050509050806001825161299291906138b3565b815181106129a3576129a26138e7565b5b60200260200101518583815481106129be576129bd6138e7565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084805480612a1757612a16613916565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556001925050505b92915050565b60608260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054612aa7906131f3565b80601f0160208091040260200160405190810160405280929190818152602001828054612ad3906131f3565b8015612b205780601f10612af557610100808354040283529160200191612b20565b820191906000526020600020905b815481529060010190602001808311612b0357829003601f168201915b5050505050905092915050565b8260030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16612c8d5782600001805490508360020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060018360030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555082600001829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b808360010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081612cdb919061368e565b50505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612d2082612cf5565b9050919050565b612d3081612d15565b8114612d3b57600080fd5b50565b600081359050612d4d81612d27565b92915050565b600060208284031215612d6957612d68612ceb565b5b6000612d7784828501612d3e565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612dba578082015181840152602081019050612d9f565b60008484015250505050565b6000601f19601f8301169050919050565b6000612de282612d80565b612dec8185612d8b565b9350612dfc818560208601612d9c565b612e0581612dc6565b840191505092915050565b60006020820190508181036000830152612e2a8184612dd7565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612e6781612d15565b82525050565b6000612e798383612e5e565b60208301905092915050565b6000602082019050919050565b6000612e9d82612e32565b612ea78185612e3d565b9350612eb283612e4e565b8060005b83811015612ee3578151612eca8882612e6d565b9750612ed583612e85565b925050600181019050612eb6565b5085935050505092915050565b60006020820190508181036000830152612f0a8184612e92565b905092915050565b612f1b81612d15565b82525050565b6000602082019050612f366000830184612f12565b92915050565b60008115159050919050565b612f5181612f3c565b82525050565b6000602082019050612f6c6000830184612f48565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612fb482612dc6565b810181811067ffffffffffffffff82111715612fd357612fd2612f7c565b5b80604052505050565b6000612fe6612ce1565b9050612ff28282612fab565b919050565b600067ffffffffffffffff82111561301257613011612f7c565b5b61301b82612dc6565b9050602081019050919050565b82818337600083830152505050565b600061304a61304584612ff7565b612fdc565b90508281526020810184848401111561306657613065612f77565b5b613071848285613028565b509392505050565b600082601f83011261308e5761308d612f72565b5b813561309e848260208601613037565b91505092915050565b6000602082840312156130bd576130bc612ceb565b5b600082013567ffffffffffffffff8111156130db576130da612cf0565b5b6130e784828501613079565b91505092915050565b6000806040838503121561310757613106612ceb565b5b600083013567ffffffffffffffff81111561312557613124612cf0565b5b61313185828601613079565b925050602083013567ffffffffffffffff81111561315257613151612cf0565b5b61315e85828601613079565b9150509250929050565b6000806040838503121561317f5761317e612ceb565b5b600061318d85828601612d3e565b925050602083013567ffffffffffffffff8111156131ae576131ad612cf0565b5b6131ba85828601613079565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061320b57607f821691505b60208210810361321e5761321d6131c4565b5b50919050565b7f436f6e74726163743a204164647265737320616c72656164792072656769737460008201527f657265642061732070617469656e740000000000000000000000000000000000602082015250565b6000613280602f83612d8b565b915061328b82613224565b604082019050919050565b600060208201905081810360008301526132af81613273565b9050919050565b7f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60008201527f7765642100000000000000000000000000000000000000000000000000000000602082015250565b6000613312602483612d8b565b915061331d826132b6565b604082019050919050565b6000602082019050818103600083015261334181613305565b9050919050565b7f4e6f7420416c6c6f776564000000000000000000000000000000000000000000600082015250565b600061337e600b83612d8b565b915061338982613348565b602082019050919050565b600060208201905081810360008301526133ad81613371565b9050919050565b7f436f6e74726163743a204164647265737320616c72656164792072656769737460008201527f6572656420617320646f63746f72000000000000000000000000000000000000602082015250565b6000613410602e83612d8b565b915061341b826133b4565b604082019050919050565b6000602082019050818103600083015261343f81613403565b9050919050565b7f436f6e74726163743a20456d7074792068617368206973206e6f7420616c6c6f60008201527f7765640000000000000000000000000000000000000000000000000000000000602082015250565b60006134a2602383612d8b565b91506134ad82613446565b604082019050919050565b600060208201905081810360008301526134d181613495565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261353a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826134fd565b61354486836134fd565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061358b6135866135818461355c565b613566565b61355c565b9050919050565b6000819050919050565b6135a583613570565b6135b96135b182613592565b84845461350a565b825550505050565b600090565b6135ce6135c1565b6135d981848461359c565b505050565b5b818110156135fd576135f26000826135c6565b6001810190506135df565b5050565b601f82111561364257613613816134d8565b61361c846134ed565b8101602085101561362b578190505b61363f613637856134ed565b8301826135de565b50505b505050565b600082821c905092915050565b600061366560001984600802613647565b1980831691505092915050565b600061367e8383613654565b9150826002028217905092915050565b61369782612d80565b67ffffffffffffffff8111156136b0576136af612f7c565b5b6136ba82546131f3565b6136c5828285613601565b600060209050601f8311600181146136f857600084156136e6578287015190505b6136f08582613672565b865550613758565b601f198416613706866134d8565b60005b8281101561372e57848901518255600182019150602085019450602081019050613709565b8683101561374b5784890151613747601f891682613654565b8355505b6001600288020188555050505b505050505050565b7f436f6e74726163743a20456d707479207075626c6963206b6579206973206e6f60008201527f7420616c6c6f7765642100000000000000000000000000000000000000000000602082015250565b60006137bc602a83612d8b565b91506137c782613760565b604082019050919050565b600060208201905081810360008301526137eb816137af565b9050919050565b7f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061384e602283612d8b565b9150613859826137f2565b604082019050919050565b6000602082019050818103600083015261387d81613841565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006138be8261355c565b91506138c98361355c565b92508282039050818111156138e1576138e0613884565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500600082015250565b600061397b601f83612d8b565b915061398682613945565b602082019050919050565b600060208201905081810360008301526139aa8161396e565b9050919050565b60006139bc8261355c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036139ee576139ed613884565b5b60018201905091905056fea264697066735822122084833810aa8292b0ff3ae41b12f0cd9272386971e9403be1700a0cd5fd999c6564736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 575,
        "contract": "contracts/Contract.sol:Contract",
        "label": "admin",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(Admin)550_storage"
      },
      {
        "astId": 578,
        "contract": "contracts/Contract.sol:Contract",
        "label": "doctors",
        "offset": 0,
        "slot": "5",
        "type": "t_struct(Doctors)572_storage"
      },
      {
        "astId": 581,
        "contract": "contracts/Contract.sol:Contract",
        "label": "patients",
        "offset": 0,
        "slot": "11",
        "type": "t_struct(Patients)559_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_address,t_struct(Map)13_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct AddToBoolMapping.Map)",
        "numberOfBytes": "32",
        "value": "t_struct(Map)13_storage"
      },
      "t_mapping(t_address,t_struct(MedicalRecord)542_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Contract.MedicalRecord)",
        "numberOfBytes": "32",
        "value": "t_struct(MedicalRecord)542_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Admin)550_storage": {
        "encoding": "inplace",
        "label": "struct Contract.Admin",
        "members": [
          {
            "astId": 544,
            "contract": "contracts/Contract.sol:Contract",
            "label": "user",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 546,
            "contract": "contracts/Contract.sol:Contract",
            "label": "public_key",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 549,
            "contract": "contracts/Contract.sol:Contract",
            "label": "pending_doctors",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(Map)13_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Doctors)572_storage": {
        "encoding": "inplace",
        "label": "struct Contract.Doctors",
        "members": [
          {
            "astId": 562,
            "contract": "contracts/Contract.sol:Contract",
            "label": "users",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Role)1457_storage"
          },
          {
            "astId": 566,
            "contract": "contracts/Contract.sol:Contract",
            "label": "public_keys",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_string_storage)"
          },
          {
            "astId": 571,
            "contract": "contracts/Contract.sol:Contract",
            "label": "docToPatAccess",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(Map)13_storage)"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Map)13_storage": {
        "encoding": "inplace",
        "label": "struct AddToBoolMapping.Map",
        "members": [
          {
            "astId": 4,
            "contract": "contracts/Contract.sol:Contract",
            "label": "keys",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 8,
            "contract": "contracts/Contract.sol:Contract",
            "label": "values",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 12,
            "contract": "contracts/Contract.sol:Contract",
            "label": "indexOf",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Map)204_storage": {
        "encoding": "inplace",
        "label": "struct AddToStrMapping.Map",
        "members": [
          {
            "astId": 191,
            "contract": "contracts/Contract.sol:Contract",
            "label": "keys",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 195,
            "contract": "contracts/Contract.sol:Contract",
            "label": "values",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_string_storage)"
          },
          {
            "astId": 199,
            "contract": "contracts/Contract.sol:Contract",
            "label": "indexOf",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 203,
            "contract": "contracts/Contract.sol:Contract",
            "label": "inserted",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(MedicalRecord)542_storage": {
        "encoding": "inplace",
        "label": "struct Contract.MedicalRecord",
        "members": [
          {
            "astId": 536,
            "contract": "contracts/Contract.sol:Contract",
            "label": "editor",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 539,
            "contract": "contracts/Contract.sol:Contract",
            "label": "viewers",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 541,
            "contract": "contracts/Contract.sol:Contract",
            "label": "key_data_hash",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Patients)559_storage": {
        "encoding": "inplace",
        "label": "struct Contract.Patients",
        "members": [
          {
            "astId": 553,
            "contract": "contracts/Contract.sol:Contract",
            "label": "users",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Role)1457_storage"
          },
          {
            "astId": 558,
            "contract": "contracts/Contract.sol:Contract",
            "label": "records",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(MedicalRecord)542_storage)"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Role)1457_storage": {
        "encoding": "inplace",
        "label": "struct Roles.Role",
        "members": [
          {
            "astId": 1456,
            "contract": "contracts/Contract.sol:Contract",
            "label": "bearer",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Map)204_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}